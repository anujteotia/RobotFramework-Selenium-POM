<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1 (Python 3.8.5 on darwin)" generated="20210823 00:40:26.172" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests">
<suite id="s1-s1" name="Article Test Api" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/article_test_api.robot">
<test id="s1-s1-t1" name="Get List Of Articles">
<kw name="List Limited Articles" library="articles_keywords">
<arg>${limit}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This Keyword will return a number of articles</doc>
<kw name="List Articles" library="Articles">
<var>${list_articles}</var>
<arg>${limit}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This function lists limited nu ber of articles controlled by argument limit
:param limit: No of items to be returned
:param auth_user: username for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns a dictionary of articles</doc>
<msg timestamp="20210823 00:40:27.850" level="INFO">${list_articles} = {'articles': [{'slug': 'test-y6t9kh', 'title': 'Test', 'description': 'test', 'body': 'Test Article', 'createdAt': '2021-08-22T22:34:54.395Z', 'updatedAt': '2021-08-22T22:34:54.395Z', 'tagList': ['CRU...</msg>
<status status="PASS" starttime="20210823 00:40:27.728" endtime="20210823 00:40:27.850"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${list_articles}</arg>
<arg>${list_articles}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:40:27.851" level="INFO">${list_articles} = {'articles': [{'slug': 'test-y6t9kh', 'title': 'Test', 'description': 'test', 'body': 'Test Article', 'createdAt': '2021-08-22T22:34:54.395Z', 'updatedAt': '2021-08-22T22:34:54.395Z', 'tagList': ['CRU...</msg>
<status status="PASS" starttime="20210823 00:40:27.850" endtime="20210823 00:40:27.851"/>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<arg>item=${list_articles['articles']}</arg>
<arg>length=${limit}</arg>
<arg>msg=Articles are not returned correctly</arg>
<doc>Verifies that the length of the given item is correct.</doc>
<msg timestamp="20210823 00:40:27.854" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20210823 00:40:27.852" endtime="20210823 00:40:27.854"/>
</kw>
<status status="PASS" starttime="20210823 00:40:27.727" endtime="20210823 00:40:27.854"/>
</kw>
<kw name="Articles Ordered By Most Recent First" library="articles_keywords">
<doc>This keyword validates that articles are oredred by most recent first</doc>
<kw name="Get Length" library="BuiltIn">
<var>${list_length}</var>
<arg>${list_articles['articles']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210823 00:40:27.857" level="INFO">Length is 10</msg>
<msg timestamp="20210823 00:40:27.857" level="INFO">${list_length} = 10</msg>
<status status="PASS" starttime="20210823 00:40:27.855" endtime="20210823 00:40:27.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${list_articles['articles'][0]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.859" level="INFO">${latest_art_date} = 2021-08-22T22:34:54.395Z</msg>
<status status="PASS" starttime="20210823 00:40:27.857" endtime="20210823 00:40:27.859"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.861" level="INFO">${date_created} = 2021-08-22T22:22:57.519Z</msg>
<status status="PASS" starttime="20210823 00:40:27.860" endtime="20210823 00:40:27.861"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 00:40:27.868" level="INFO">${date} = 716.876</msg>
<status status="PASS" starttime="20210823 00:40:27.861" endtime="20210823 00:40:27.868"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 00:40:27.868" endtime="20210823 00:40:27.869"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.869" level="INFO">${latest_art_date} = 2021-08-22T22:22:57.519Z</msg>
<status status="PASS" starttime="20210823 00:40:27.869" endtime="20210823 00:40:27.869"/>
</kw>
<status status="PASS" starttime="20210823 00:40:27.859" endtime="20210823 00:40:27.869"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.871" level="INFO">${date_created} = 2021-08-22T22:19:35.051Z</msg>
<status status="PASS" starttime="20210823 00:40:27.870" endtime="20210823 00:40:27.871"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 00:40:27.872" level="INFO">${date} = 202.468</msg>
<status status="PASS" starttime="20210823 00:40:27.871" endtime="20210823 00:40:27.872"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 00:40:27.872" endtime="20210823 00:40:27.872"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.873" level="INFO">${latest_art_date} = 2021-08-22T22:19:35.051Z</msg>
<status status="PASS" starttime="20210823 00:40:27.873" endtime="20210823 00:40:27.873"/>
</kw>
<status status="PASS" starttime="20210823 00:40:27.870" endtime="20210823 00:40:27.873"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.875" level="INFO">${date_created} = 2021-08-22T22:01:13.290Z</msg>
<status status="PASS" starttime="20210823 00:40:27.873" endtime="20210823 00:40:27.875"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 00:40:27.875" level="INFO">${date} = 1101.761</msg>
<status status="PASS" starttime="20210823 00:40:27.875" endtime="20210823 00:40:27.875"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 00:40:27.876" endtime="20210823 00:40:27.877"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.877" level="INFO">${latest_art_date} = 2021-08-22T22:01:13.290Z</msg>
<status status="PASS" starttime="20210823 00:40:27.877" endtime="20210823 00:40:27.877"/>
</kw>
<status status="PASS" starttime="20210823 00:40:27.873" endtime="20210823 00:40:27.877"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.879" level="INFO">${date_created} = 2021-08-22T20:33:05.404Z</msg>
<status status="PASS" starttime="20210823 00:40:27.878" endtime="20210823 00:40:27.880"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 00:40:27.881" level="INFO">${date} = 5287.886</msg>
<status status="PASS" starttime="20210823 00:40:27.880" endtime="20210823 00:40:27.881"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 00:40:27.881" endtime="20210823 00:40:27.881"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.882" level="INFO">${latest_art_date} = 2021-08-22T20:33:05.404Z</msg>
<status status="PASS" starttime="20210823 00:40:27.881" endtime="20210823 00:40:27.882"/>
</kw>
<status status="PASS" starttime="20210823 00:40:27.877" endtime="20210823 00:40:27.882"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.883" level="INFO">${date_created} = 2021-08-22T20:31:41.690Z</msg>
<status status="PASS" starttime="20210823 00:40:27.882" endtime="20210823 00:40:27.883"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 00:40:27.884" level="INFO">${date} = 83.714</msg>
<status status="PASS" starttime="20210823 00:40:27.884" endtime="20210823 00:40:27.884"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 00:40:27.884" endtime="20210823 00:40:27.885"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.886" level="INFO">${latest_art_date} = 2021-08-22T20:31:41.690Z</msg>
<status status="PASS" starttime="20210823 00:40:27.886" endtime="20210823 00:40:27.887"/>
</kw>
<status status="PASS" starttime="20210823 00:40:27.882" endtime="20210823 00:40:27.887"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.889" level="INFO">${date_created} = 2021-08-21T17:04:03.004Z</msg>
<status status="PASS" starttime="20210823 00:40:27.887" endtime="20210823 00:40:27.889"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 00:40:27.889" level="INFO">${date} = 98858.686</msg>
<status status="PASS" starttime="20210823 00:40:27.889" endtime="20210823 00:40:27.889"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 00:40:27.890" endtime="20210823 00:40:27.890"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.890" level="INFO">${latest_art_date} = 2021-08-21T17:04:03.004Z</msg>
<status status="PASS" starttime="20210823 00:40:27.890" endtime="20210823 00:40:27.890"/>
</kw>
<status status="PASS" starttime="20210823 00:40:27.887" endtime="20210823 00:40:27.890"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.892" level="INFO">${date_created} = 2021-08-21T16:55:57.352Z</msg>
<status status="PASS" starttime="20210823 00:40:27.891" endtime="20210823 00:40:27.892"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 00:40:27.893" level="INFO">${date} = 485.652</msg>
<status status="PASS" starttime="20210823 00:40:27.892" endtime="20210823 00:40:27.893"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 00:40:27.893" endtime="20210823 00:40:27.893"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.894" level="INFO">${latest_art_date} = 2021-08-21T16:55:57.352Z</msg>
<status status="PASS" starttime="20210823 00:40:27.893" endtime="20210823 00:40:27.894"/>
</kw>
<status status="PASS" starttime="20210823 00:40:27.891" endtime="20210823 00:40:27.894"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.896" level="INFO">${date_created} = 2021-08-21T10:01:22.460Z</msg>
<status status="PASS" starttime="20210823 00:40:27.894" endtime="20210823 00:40:27.896"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 00:40:27.897" level="INFO">${date} = 24874.892</msg>
<status status="PASS" starttime="20210823 00:40:27.896" endtime="20210823 00:40:27.897"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 00:40:27.897" endtime="20210823 00:40:27.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.898" level="INFO">${latest_art_date} = 2021-08-21T10:01:22.460Z</msg>
<status status="PASS" starttime="20210823 00:40:27.897" endtime="20210823 00:40:27.898"/>
</kw>
<status status="PASS" starttime="20210823 00:40:27.894" endtime="20210823 00:40:27.898"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.900" level="INFO">${date_created} = 2021-08-21T00:26:31.251Z</msg>
<status status="PASS" starttime="20210823 00:40:27.898" endtime="20210823 00:40:27.900"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 00:40:27.901" level="INFO">${date} = 34491.209</msg>
<status status="PASS" starttime="20210823 00:40:27.900" endtime="20210823 00:40:27.901"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 00:40:27.901" endtime="20210823 00:40:27.902"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 00:40:27.902" level="INFO">${latest_art_date} = 2021-08-21T00:26:31.251Z</msg>
<status status="PASS" starttime="20210823 00:40:27.902" endtime="20210823 00:40:27.902"/>
</kw>
<status status="PASS" starttime="20210823 00:40:27.898" endtime="20210823 00:40:27.902"/>
</iter>
<status status="PASS" starttime="20210823 00:40:27.859" endtime="20210823 00:40:27.902"/>
</for>
<status status="PASS" starttime="20210823 00:40:27.855" endtime="20210823 00:40:27.902"/>
</kw>
<doc>This test case will fetch 10 articles</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 00:40:27.723" endtime="20210823 00:40:27.903"/>
</test>
<test id="s1-s1-t2" name="Create A New Article">
<kw name="Create New Article" library="articles_keywords">
<arg>${title}</arg>
<arg>${description}</arg>
<arg>${body}</arg>
<arg>${taglist}</arg>
<arg>${login_emailId}</arg>
<arg>${login_pwd}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This keyword creates a new article</doc>
<kw name="Create Article" library="Articles">
<var>${article_data}</var>
<arg>${title}</arg>
<arg>${description}</arg>
<arg>${body}</arg>
<arg>${taglist}</arg>
<arg>${email}</arg>
<arg>${password}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This function will create a new article
:param title: title of the article
:param description: description of the article
:param body: body of the article
:param taglist: list of tags
:param email: login email Id
:param password: password to login
:param auth_user: username for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns created article details in a dictionary</doc>
<msg timestamp="20210823 00:40:28.209" level="INFO">${article_data} = {'article': {'slug': 'test-1mm9qh', 'title': 'Test', 'description': 'test', 'body': 'Test Article', 'createdAt': '2021-08-22T22:40:27.799Z', 'updatedAt': '2021-08-22T22:40:27.799Z', 'tagList': ['CRUD'...</msg>
<status status="PASS" starttime="20210823 00:40:27.931" endtime="20210823 00:40:28.209"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${article_data}</arg>
<arg>${article_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:40:28.210" level="INFO">${article_data} = {'article': {'slug': 'test-1mm9qh', 'title': 'Test', 'description': 'test', 'body': 'Test Article', 'createdAt': '2021-08-22T22:40:27.799Z', 'updatedAt': '2021-08-22T22:40:27.799Z', 'tagList': ['CRUD'...</msg>
<status status="PASS" starttime="20210823 00:40:28.210" endtime="20210823 00:40:28.211"/>
</kw>
<status status="PASS" starttime="20210823 00:40:27.929" endtime="20210823 00:40:28.211"/>
</kw>
<kw name="Validate Created Article" library="articles_keywords">
<doc>This keyword validates the content of article created</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${article_data['article']}</arg>
<arg>key=title</arg>
<arg>msg=title is not present for new article created</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:40:28.212" endtime="20210823 00:40:28.214"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${article_data['article']}</arg>
<arg>key=description</arg>
<arg>msg=title is not present for new article created</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:40:28.214" endtime="20210823 00:40:28.216"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${article_data['article']}</arg>
<arg>key=body</arg>
<arg>msg=title is not present for new article created</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:40:28.216" endtime="20210823 00:40:28.218"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${article_data['article']}</arg>
<arg>key=tagList</arg>
<arg>msg=title is not present for new article created</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:40:28.218" endtime="20210823 00:40:28.220"/>
</kw>
<status status="PASS" starttime="20210823 00:40:28.211" endtime="20210823 00:40:28.220"/>
</kw>
<doc>This test case validates that the article is created successfully</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 00:40:27.925" endtime="20210823 00:40:28.220"/>
</test>
<status status="PASS" starttime="20210823 00:40:26.256" endtime="20210823 00:40:28.224"/>
</suite>
<suite id="s1-s2" name="Article Test Gui" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/article_test_gui.robot">
<test id="s1-s2-t1" name="Create New Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:40:28.256" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/147bd4b5-1504-455c-9dab-96644bf960d4"}</msg>
<msg timestamp="20210823 00:40:29.429" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/147bd4b5-1504-455c-9dab-96644bf960d4"}</msg>
<status status="PASS" starttime="20210823 00:40:28.255" endtime="20210823 00:40:29.430"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 00:40:29.437" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 00:40:29.430" endtime="20210823 00:40:29.437"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 00:40:29.442" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 00:40:29.510" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 00:40:29.526" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 00:40:29.439" endtime="20210823 00:40:29.526"/>
</kw>
<status status="PASS" starttime="20210823 00:40:29.438" endtime="20210823 00:40:29.526"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 00:40:32.823" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 00:40:29.527" endtime="20210823 00:40:32.824"/>
</kw>
<status status="PASS" starttime="20210823 00:40:28.255" endtime="20210823 00:40:32.824"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:40:32.885" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 00:40:32.826" endtime="20210823 00:40:32.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:40:32.886" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 00:40:32.885" endtime="20210823 00:40:32.886"/>
</kw>
<status status="PASS" starttime="20210823 00:40:32.825" endtime="20210823 00:40:32.886"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:40:32.904" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 00:40:32.887" endtime="20210823 00:40:32.904"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:32.905" endtime="20210823 00:40:34.012"/>
</kw>
<status status="PASS" starttime="20210823 00:40:32.886" endtime="20210823 00:40:34.012"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 00:40:34.019" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:40:34.014" endtime="20210823 00:40:34.019"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:40:34.020" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:40:34.019" endtime="20210823 00:40:34.020"/>
</kw>
<status status="PASS" starttime="20210823 00:40:34.013" endtime="20210823 00:40:34.020"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:40:34.023" level="INFO">Fills the text 'newuser11@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 00:40:34.022" endtime="20210823 00:40:35.063"/>
</kw>
<status status="PASS" starttime="20210823 00:40:34.021" endtime="20210823 00:40:35.064"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:35.066" endtime="20210823 00:40:36.109"/>
</kw>
<status status="PASS" starttime="20210823 00:40:35.065" endtime="20210823 00:40:36.109"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:36.110" endtime="20210823 00:40:37.164"/>
</kw>
<status status="PASS" starttime="20210823 00:40:36.110" endtime="20210823 00:40:37.164"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:40:37.166" endtime="20210823 00:40:37.169"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:40:37.185" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 00:40:37.170" endtime="20210823 00:40:37.185"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:40:37.218" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 00:40:37.185" endtime="20210823 00:40:37.218"/>
</kw>
<status status="PASS" starttime="20210823 00:40:37.165" endtime="20210823 00:40:37.218"/>
</kw>
<kw name="When Click On New Article Text" library="articles_keywords">
<doc>This keyword clicks on new article link in signed in page</doc>
<kw name="Click" library="Browser">
<arg>selector=${new_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:37.219" endtime="20210823 00:40:38.287"/>
</kw>
<status status="PASS" starttime="20210823 00:40:37.219" endtime="20210823 00:40:38.288"/>
</kw>
<kw name="And Validate New Article Page" library="articles_keywords">
<doc>This keyword verifies that page to create new article is open</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=editor</arg>
<arg>message=New article page url is not loaded</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:40:38.290" endtime="20210823 00:40:38.294"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:40:38.311" level="INFO">Wait for Element with selector: //button[contains(text(),'Publish Article')]</msg>
<status status="PASS" starttime="20210823 00:40:38.295" endtime="20210823 00:40:38.312"/>
</kw>
<status status="PASS" starttime="20210823 00:40:38.289" endtime="20210823 00:40:38.312"/>
</kw>
<kw name="Then Enter Article Title" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword enter title for the article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_title_txt_box}</arg>
<arg>txt=${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:40:38.314" level="INFO">Fills the text 'Test' in the given field.</msg>
<status status="PASS" starttime="20210823 00:40:38.313" endtime="20210823 00:40:39.352"/>
</kw>
<status status="PASS" starttime="20210823 00:40:38.312" endtime="20210823 00:40:39.352"/>
</kw>
<kw name="And Enter Article Description" library="articles_keywords">
<arg>${art_description}</arg>
<doc>This keyword enter description for article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_description_txt_box}</arg>
<arg>txt=${description}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:40:39.355" level="INFO">Fills the text 'test' in the given field.</msg>
<status status="PASS" starttime="20210823 00:40:39.354" endtime="20210823 00:40:40.393"/>
</kw>
<status status="PASS" starttime="20210823 00:40:39.353" endtime="20210823 00:40:40.394"/>
</kw>
<kw name="And Write Article Body" library="articles_keywords">
<arg>${art_body}</arg>
<doc>This keyword enter text in article body</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<arg>txt=${body_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:40:40.397" level="INFO">Fills the text 'Test Article' in the given field.</msg>
<status status="PASS" starttime="20210823 00:40:40.396" endtime="20210823 00:40:41.433"/>
</kw>
<status status="PASS" starttime="20210823 00:40:40.394" endtime="20210823 00:40:41.434"/>
</kw>
<kw name="And Enter Article Tag" library="articles_keywords">
<arg>${art_tag}</arg>
<doc>This keyword enter tags for the article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_tags_txt_box}</arg>
<arg>txt=${tag}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:40:41.438" level="INFO">Fills the text 'CRUD' in the given field.</msg>
<status status="PASS" starttime="20210823 00:40:41.437" endtime="20210823 00:40:42.475"/>
</kw>
<kw name="Keyboard Key" library="Browser">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20210823 00:40:42.476" endtime="20210823 00:40:43.490"/>
</kw>
<status status="PASS" starttime="20210823 00:40:41.435" endtime="20210823 00:40:43.491"/>
</kw>
<kw name="Then Click Publish Article Button" library="articles_keywords">
<doc>This keyword clicks on the publish article button</doc>
<kw name="Click" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:43.492" endtime="20210823 00:40:44.562"/>
</kw>
<status status="PASS" starttime="20210823 00:40:43.491" endtime="20210823 00:40:44.563"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210823 00:40:44.565" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210823 00:40:44.564" endtime="20210823 00:40:44.565"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:40:44.566" endtime="20210823 00:40:44.569"/>
</kw>
<status status="PASS" starttime="20210823 00:40:44.563" endtime="20210823 00:40:44.569"/>
</kw>
<kw name="And Verify Edit Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Edit Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:40:44.587" level="INFO">Wait for Element with selector: (//a[contains(@class,'btn btn-sm')])[2]</msg>
<status status="PASS" starttime="20210823 00:40:44.570" endtime="20210823 00:40:44.587"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${edit_article}</var>
<arg>selector=${edit_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Edit Article</arg>
<arg>message=Edit Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:40:44.623" level="INFO">${edit_article} =  Edit Article</msg>
<status status="PASS" starttime="20210823 00:40:44.588" endtime="20210823 00:40:44.623"/>
</kw>
<status status="PASS" starttime="20210823 00:40:44.570" endtime="20210823 00:40:44.624"/>
</kw>
<kw name="And Verify Delete Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Delete Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:40:44.639" level="INFO">Wait for Element with selector: (//button[contains(text(),'Delete Article')])[2]</msg>
<status status="PASS" starttime="20210823 00:40:44.625" endtime="20210823 00:40:44.639"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${delete_article}</var>
<arg>selector=${delete_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Delete Article</arg>
<arg>message=Delete Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:40:44.667" level="INFO">${delete_article} =  Delete Article</msg>
<status status="PASS" starttime="20210823 00:40:44.639" endtime="20210823 00:40:44.667"/>
</kw>
<status status="PASS" starttime="20210823 00:40:44.624" endtime="20210823 00:40:44.667"/>
</kw>
<kw name="And Verify Comment Text Box" library="articles_keywords">
<doc>This keyword validates the presence of comment text box</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${write_cmnt_txt_box}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:40:44.679" level="INFO">Wait for Element with selector: //textarea[contains(@class,'form-control')]</msg>
<status status="PASS" starttime="20210823 00:40:44.668" endtime="20210823 00:40:44.679"/>
</kw>
<status status="PASS" starttime="20210823 00:40:44.667" endtime="20210823 00:40:44.679"/>
</kw>
<kw name="And Verify Post Comment Button" library="articles_keywords">
<doc>This keyword validates the presence of post comment button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${post_comment_button}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:40:44.692" level="INFO">Wait for Element with selector: //button[contains(text(),'Post Comment')]</msg>
<status status="PASS" starttime="20210823 00:40:44.680" endtime="20210823 00:40:44.693"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${post_comment}</var>
<arg>selector=${post_comment_button}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Post Comment</arg>
<arg>message=Post Comment button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:40:44.714" level="INFO">${post_comment} = Post Comment</msg>
<status status="PASS" starttime="20210823 00:40:44.693" endtime="20210823 00:40:44.714"/>
</kw>
<status status="PASS" starttime="20210823 00:40:44.680" endtime="20210823 00:40:44.714"/>
</kw>
<doc>This test case login using basic authentication,validates Home Page and create &amp; validates creation of new article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<status status="PASS" starttime="20210823 00:40:28.251" endtime="20210823 00:40:44.715"/>
</test>
<test id="s1-s2-t2" name="Update Existing Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:40:44.805" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/0792dc94-12ea-4e1d-a95c-22d333ef873d"}</msg>
<msg timestamp="20210823 00:40:45.442" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/0792dc94-12ea-4e1d-a95c-22d333ef873d"}</msg>
<status status="PASS" starttime="20210823 00:40:44.803" endtime="20210823 00:40:45.442"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 00:40:45.447" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 00:40:45.443" endtime="20210823 00:40:45.447"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 00:40:45.449" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 00:40:45.498" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 00:40:45.498" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 00:40:45.448" endtime="20210823 00:40:45.498"/>
</kw>
<status status="PASS" starttime="20210823 00:40:45.447" endtime="20210823 00:40:45.498"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 00:40:48.474" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 00:40:45.499" endtime="20210823 00:40:48.474"/>
</kw>
<status status="PASS" starttime="20210823 00:40:44.802" endtime="20210823 00:40:48.475"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:40:48.532" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 00:40:48.476" endtime="20210823 00:40:48.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:40:48.533" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 00:40:48.532" endtime="20210823 00:40:48.533"/>
</kw>
<status status="PASS" starttime="20210823 00:40:48.476" endtime="20210823 00:40:48.533"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:40:48.547" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 00:40:48.534" endtime="20210823 00:40:48.547"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:48.547" endtime="20210823 00:40:49.653"/>
</kw>
<status status="PASS" starttime="20210823 00:40:48.533" endtime="20210823 00:40:49.654"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 00:40:49.660" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:40:49.656" endtime="20210823 00:40:49.660"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:40:49.661" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:40:49.660" endtime="20210823 00:40:49.661"/>
</kw>
<status status="PASS" starttime="20210823 00:40:49.655" endtime="20210823 00:40:49.661"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:40:49.664" level="INFO">Fills the text 'newuser11@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 00:40:49.663" endtime="20210823 00:40:50.699"/>
</kw>
<status status="PASS" starttime="20210823 00:40:49.662" endtime="20210823 00:40:50.699"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:50.701" endtime="20210823 00:40:51.748"/>
</kw>
<status status="PASS" starttime="20210823 00:40:50.700" endtime="20210823 00:40:51.749"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:51.750" endtime="20210823 00:40:52.799"/>
</kw>
<status status="PASS" starttime="20210823 00:40:51.749" endtime="20210823 00:40:52.799"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:40:52.801" endtime="20210823 00:40:52.805"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:40:52.823" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 00:40:52.805" endtime="20210823 00:40:52.823"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:40:52.848" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 00:40:52.823" endtime="20210823 00:40:52.848"/>
</kw>
<status status="PASS" starttime="20210823 00:40:52.800" endtime="20210823 00:40:52.848"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:40:52.861" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210823 00:40:52.849" endtime="20210823 00:40:52.862"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:52.862" endtime="20210823 00:40:53.923"/>
</kw>
<status status="PASS" starttime="20210823 00:40:52.848" endtime="20210823 00:40:53.923"/>
</kw>
<kw name="And Get Logged In User Name" library="user_profile_keywords">
<doc>This keyword fetches the name of the user</doc>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>selector=${user_profile_user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:40:53.957" level="INFO">${username} = newuser11</msg>
<status status="PASS" starttime="20210823 00:40:53.925" endtime="20210823 00:40:53.957"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:40:53.958" level="INFO">${username} = newuser11</msg>
<status status="PASS" starttime="20210823 00:40:53.957" endtime="20210823 00:40:53.958"/>
</kw>
<status status="PASS" starttime="20210823 00:40:53.924" endtime="20210823 00:40:53.958"/>
</kw>
<kw name="And Validate User Profile Url" library="user_profile_keywords">
<doc>This keyword validates the user profile url</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 00:40:53.961" level="INFO">${url} = https://qa-task.backbasecloud.com/profile/newuser11</msg>
<status status="PASS" starttime="20210823 00:40:53.959" endtime="20210823 00:40:53.961"/>
</kw>
<kw name="Should End With" library="BuiltIn">
<arg>${url}</arg>
<arg>profile/${username}</arg>
<arg>message=User profile url is not navigated properly.</arg>
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<status status="PASS" starttime="20210823 00:40:53.961" endtime="20210823 00:40:53.962"/>
</kw>
<status status="PASS" starttime="20210823 00:40:53.958" endtime="20210823 00:40:53.962"/>
</kw>
<kw name="Then Open My Posts" library="user_profile_keywords">
<doc>This Keyword Ensures thet My posts are open</doc>
<kw name="Click" library="Browser">
<arg>selector=${user_profile_my_posts_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:53.963" endtime="20210823 00:40:55.011"/>
</kw>
<status status="PASS" starttime="20210823 00:40:53.962" endtime="20210823 00:40:55.011"/>
</kw>
<kw name="And Read First Article From User Profile" library="articles_keywords">
<doc>This keyword Open first existing article</doc>
<kw name="Get Text" library="Browser">
<var>${art_title}</var>
<arg>selector=${first_art_title}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:40:55.043" level="INFO">${art_title} = Test</msg>
<status status="PASS" starttime="20210823 00:40:55.013" endtime="20210823 00:40:55.043"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${first_art_read_more_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:55.043" endtime="20210823 00:40:56.084"/>
</kw>
<status status="PASS" starttime="20210823 00:40:55.012" endtime="20210823 00:40:56.085"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210823 00:40:56.087" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210823 00:40:56.086" endtime="20210823 00:40:56.087"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:40:56.087" endtime="20210823 00:40:56.090"/>
</kw>
<status status="PASS" starttime="20210823 00:40:56.085" endtime="20210823 00:40:56.091"/>
</kw>
<kw name="Then And Verify Edit Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Edit Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:40:56.104" level="INFO">Wait for Element with selector: (//a[contains(@class,'btn btn-sm')])[2]</msg>
<status status="PASS" starttime="20210823 00:40:56.092" endtime="20210823 00:40:56.104"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${edit_article}</var>
<arg>selector=${edit_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Edit Article</arg>
<arg>message=Edit Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:40:56.128" level="INFO">${edit_article} =  Edit Article</msg>
<status status="PASS" starttime="20210823 00:40:56.104" endtime="20210823 00:40:56.128"/>
</kw>
<status status="PASS" starttime="20210823 00:40:56.091" endtime="20210823 00:40:56.128"/>
</kw>
<kw name="And Click On Edit Article Button" library="articles_keywords">
<doc>This keywor clicks on Edit Article Button</doc>
<kw name="Click" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:56.129" endtime="20210823 00:40:57.186"/>
</kw>
<status status="PASS" starttime="20210823 00:40:56.128" endtime="20210823 00:40:57.186"/>
</kw>
<kw name="Then Verify Edit Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword verifies that we are on Edit Article page</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210823 00:40:57.189" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210823 00:40:57.188" endtime="20210823 00:40:57.189"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=editor/${article_title}</arg>
<arg>message=Navigation unsuccessful to edit article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:40:57.189" endtime="20210823 00:40:57.193"/>
</kw>
<status status="PASS" starttime="20210823 00:40:57.187" endtime="20210823 00:40:57.193"/>
</kw>
<kw name="And Update Article Body" library="articles_keywords">
<arg>${updated_txt}</arg>
<doc>This keyword update body of the article</doc>
<kw name="Clear Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:57.195" endtime="20210823 00:40:58.241"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<arg>txt=${updated_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:40:58.243" level="INFO">Fills the text 'Test Article updated' in the given field.</msg>
<status status="PASS" starttime="20210823 00:40:58.242" endtime="20210823 00:40:59.273"/>
</kw>
<kw name="Click Publish Article Button" library="articles_keywords">
<doc>This keyword clicks on the publish article button</doc>
<kw name="Click" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:40:59.274" endtime="20210823 00:41:00.326"/>
</kw>
<status status="PASS" starttime="20210823 00:40:59.273" endtime="20210823 00:41:00.326"/>
</kw>
<status status="PASS" starttime="20210823 00:40:57.194" endtime="20210823 00:41:00.327"/>
</kw>
<kw name="And Validate Updated Article" library="articles_keywords">
<arg>${updated_txt}</arg>
<doc>This keyword validates that the article has been updated correctly</doc>
<kw name="Get Text" library="Browser">
<arg>selector=${updated_art_body_txt}</arg>
<arg>assertion_operator=equal</arg>
<arg>assertion_expected=${updated_txt}</arg>
<arg>message=Unable to Update article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:00.328" endtime="20210823 00:41:00.362"/>
</kw>
<status status="PASS" starttime="20210823 00:41:00.327" endtime="20210823 00:41:00.362"/>
</kw>
<doc>This Test Case updates an existing article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<status status="PASS" starttime="20210823 00:40:44.797" endtime="20210823 00:41:00.363"/>
</test>
<test id="s1-s2-t3" name="Delete Existing Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:41:00.506" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/f49d6cc2-7f4a-41f2-b42b-0dc96cf6338a"}</msg>
<msg timestamp="20210823 00:41:01.311" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/f49d6cc2-7f4a-41f2-b42b-0dc96cf6338a"}</msg>
<status status="PASS" starttime="20210823 00:41:00.504" endtime="20210823 00:41:01.311"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 00:41:01.322" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 00:41:01.312" endtime="20210823 00:41:01.322"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 00:41:01.325" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 00:41:01.416" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 00:41:01.417" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 00:41:01.323" endtime="20210823 00:41:01.417"/>
</kw>
<status status="PASS" starttime="20210823 00:41:01.322" endtime="20210823 00:41:01.421"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 00:41:04.108" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 00:41:01.421" endtime="20210823 00:41:04.109"/>
</kw>
<status status="PASS" starttime="20210823 00:41:00.502" endtime="20210823 00:41:04.109"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:04.157" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 00:41:04.110" endtime="20210823 00:41:04.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:41:04.157" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 00:41:04.157" endtime="20210823 00:41:04.157"/>
</kw>
<status status="PASS" starttime="20210823 00:41:04.110" endtime="20210823 00:41:04.157"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:04.174" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 00:41:04.158" endtime="20210823 00:41:04.174"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:04.174" endtime="20210823 00:41:05.271"/>
</kw>
<status status="PASS" starttime="20210823 00:41:04.158" endtime="20210823 00:41:05.272"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 00:41:05.277" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:41:05.273" endtime="20210823 00:41:05.277"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:41:05.279" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:41:05.278" endtime="20210823 00:41:05.279"/>
</kw>
<status status="PASS" starttime="20210823 00:41:05.272" endtime="20210823 00:41:05.279"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:41:05.281" level="INFO">Fills the text 'newuser11@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 00:41:05.281" endtime="20210823 00:41:06.311"/>
</kw>
<status status="PASS" starttime="20210823 00:41:05.280" endtime="20210823 00:41:06.311"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:06.312" endtime="20210823 00:41:07.349"/>
</kw>
<status status="PASS" starttime="20210823 00:41:06.311" endtime="20210823 00:41:07.349"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:07.351" endtime="20210823 00:41:08.397"/>
</kw>
<status status="PASS" starttime="20210823 00:41:07.350" endtime="20210823 00:41:08.398"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:41:08.399" endtime="20210823 00:41:08.403"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:08.416" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 00:41:08.403" endtime="20210823 00:41:08.417"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:08.440" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 00:41:08.417" endtime="20210823 00:41:08.440"/>
</kw>
<status status="PASS" starttime="20210823 00:41:08.398" endtime="20210823 00:41:08.441"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:08.454" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210823 00:41:08.441" endtime="20210823 00:41:08.454"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:08.454" endtime="20210823 00:41:09.498"/>
</kw>
<status status="PASS" starttime="20210823 00:41:08.441" endtime="20210823 00:41:09.498"/>
</kw>
<kw name="And Get Logged In User Name" library="user_profile_keywords">
<doc>This keyword fetches the name of the user</doc>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>selector=${user_profile_user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:09.525" level="INFO">${username} = newuser11</msg>
<status status="PASS" starttime="20210823 00:41:09.500" endtime="20210823 00:41:09.525"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:41:09.526" level="INFO">${username} = newuser11</msg>
<status status="PASS" starttime="20210823 00:41:09.526" endtime="20210823 00:41:09.526"/>
</kw>
<status status="PASS" starttime="20210823 00:41:09.499" endtime="20210823 00:41:09.526"/>
</kw>
<kw name="And Validate User Profile Url" library="user_profile_keywords">
<doc>This keyword validates the user profile url</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 00:41:09.529" level="INFO">${url} = https://qa-task.backbasecloud.com/profile/newuser11</msg>
<status status="PASS" starttime="20210823 00:41:09.527" endtime="20210823 00:41:09.529"/>
</kw>
<kw name="Should End With" library="BuiltIn">
<arg>${url}</arg>
<arg>profile/${username}</arg>
<arg>message=User profile url is not navigated properly.</arg>
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<status status="PASS" starttime="20210823 00:41:09.529" endtime="20210823 00:41:09.530"/>
</kw>
<status status="PASS" starttime="20210823 00:41:09.527" endtime="20210823 00:41:09.530"/>
</kw>
<kw name="Then Open My Posts" library="user_profile_keywords">
<doc>This Keyword Ensures thet My posts are open</doc>
<kw name="Click" library="Browser">
<arg>selector=${user_profile_my_posts_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:09.531" endtime="20210823 00:41:10.577"/>
</kw>
<status status="PASS" starttime="20210823 00:41:09.530" endtime="20210823 00:41:10.577"/>
</kw>
<kw name="And Check Count Of Articles" library="articles_keywords">
<doc>This keyword checks the count of Articles</doc>
<kw name="Get Element Count" library="Browser">
<var>${article_count}</var>
<arg>selector=${articles_list}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210823 00:41:10.594" level="INFO">${article_count} = 7</msg>
<status status="PASS" starttime="20210823 00:41:10.578" endtime="20210823 00:41:10.594"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${article_count}</arg>
<arg>${article_count}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:41:10.594" level="INFO">${article_count} = 7</msg>
<status status="PASS" starttime="20210823 00:41:10.594" endtime="20210823 00:41:10.595"/>
</kw>
<status status="PASS" starttime="20210823 00:41:10.577" endtime="20210823 00:41:10.595"/>
</kw>
<kw name="And Read First Article From User Profile" library="articles_keywords">
<doc>This keyword Open first existing article</doc>
<kw name="Get Text" library="Browser">
<var>${art_title}</var>
<arg>selector=${first_art_title}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:10.617" level="INFO">${art_title} = Test</msg>
<status status="PASS" starttime="20210823 00:41:10.596" endtime="20210823 00:41:10.617"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${first_art_read_more_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:10.617" endtime="20210823 00:41:11.666"/>
</kw>
<status status="PASS" starttime="20210823 00:41:10.595" endtime="20210823 00:41:11.667"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210823 00:41:11.669" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210823 00:41:11.669" endtime="20210823 00:41:11.669"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:41:11.670" endtime="20210823 00:41:11.673"/>
</kw>
<status status="PASS" starttime="20210823 00:41:11.667" endtime="20210823 00:41:11.673"/>
</kw>
<kw name="Then Verify Delete Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Delete Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:11.687" level="INFO">Wait for Element with selector: (//button[contains(text(),'Delete Article')])[2]</msg>
<status status="PASS" starttime="20210823 00:41:11.674" endtime="20210823 00:41:11.687"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${delete_article}</var>
<arg>selector=${delete_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Delete Article</arg>
<arg>message=Delete Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:11.714" level="INFO">${delete_article} =  Delete Article</msg>
<status status="PASS" starttime="20210823 00:41:11.687" endtime="20210823 00:41:11.714"/>
</kw>
<status status="PASS" starttime="20210823 00:41:11.674" endtime="20210823 00:41:11.715"/>
</kw>
<kw name="And Click On Delete Article Button" library="articles_keywords">
<doc>This keywor clicks on Delete Article Button</doc>
<kw name="Click" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:11.715" endtime="20210823 00:41:12.764"/>
</kw>
<status status="PASS" starttime="20210823 00:41:11.715" endtime="20210823 00:41:12.764"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:12.781" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210823 00:41:12.766" endtime="20210823 00:41:12.781"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:12.781" endtime="20210823 00:41:13.848"/>
</kw>
<status status="PASS" starttime="20210823 00:41:12.765" endtime="20210823 00:41:13.848"/>
</kw>
<kw name="And Check Number Of Articles After Deletion" library="articles_keywords">
<doc>his keyword verifies that the count of articles reduced by after after deleting an article</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${count_after_del}</var>
<arg>${article_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210823 00:41:13.850" level="INFO">${count_after_del} = 6</msg>
<status status="PASS" starttime="20210823 00:41:13.850" endtime="20210823 00:41:13.850"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${article_count_After_del}</var>
<arg>selector=${articles_list}</arg>
<arg>assertion_operator=equal</arg>
<arg>expected_value=${count_after_del}</arg>
<arg>message=Unable to delete the Articles.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210823 00:41:13.866" level="INFO">${article_count_After_del} = 6</msg>
<status status="PASS" starttime="20210823 00:41:13.851" endtime="20210823 00:41:13.866"/>
</kw>
<status status="PASS" starttime="20210823 00:41:13.849" endtime="20210823 00:41:13.866"/>
</kw>
<doc>This test case deletes the existing article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<status status="PASS" starttime="20210823 00:41:00.498" endtime="20210823 00:41:13.866"/>
</test>
<test id="s1-s2-t4" name="Delete Article Button Not Shown To Other Author">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:41:13.960" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/d8c1c140-d02e-46ff-af78-08885f208d7f"}</msg>
<msg timestamp="20210823 00:41:14.527" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/d8c1c140-d02e-46ff-af78-08885f208d7f"}</msg>
<status status="PASS" starttime="20210823 00:41:13.957" endtime="20210823 00:41:14.527"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 00:41:14.530" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 00:41:14.528" endtime="20210823 00:41:14.531"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 00:41:14.532" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 00:41:14.584" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 00:41:14.584" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 00:41:14.531" endtime="20210823 00:41:14.584"/>
</kw>
<status status="PASS" starttime="20210823 00:41:14.531" endtime="20210823 00:41:14.585"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 00:41:17.635" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 00:41:14.585" endtime="20210823 00:41:17.636"/>
</kw>
<status status="PASS" starttime="20210823 00:41:13.956" endtime="20210823 00:41:17.636"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:17.678" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 00:41:17.638" endtime="20210823 00:41:17.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:41:17.679" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 00:41:17.678" endtime="20210823 00:41:17.679"/>
</kw>
<status status="PASS" starttime="20210823 00:41:17.637" endtime="20210823 00:41:17.679"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:17.692" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 00:41:17.681" endtime="20210823 00:41:17.693"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:17.693" endtime="20210823 00:41:18.792"/>
</kw>
<status status="PASS" starttime="20210823 00:41:17.679" endtime="20210823 00:41:18.792"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 00:41:18.797" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:41:18.794" endtime="20210823 00:41:18.797"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:41:18.798" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:41:18.798" endtime="20210823 00:41:18.799"/>
</kw>
<status status="PASS" starttime="20210823 00:41:18.793" endtime="20210823 00:41:18.799"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:41:18.801" level="INFO">Fills the text 'newuser11@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 00:41:18.800" endtime="20210823 00:41:19.831"/>
</kw>
<status status="PASS" starttime="20210823 00:41:18.799" endtime="20210823 00:41:19.831"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:19.833" endtime="20210823 00:41:20.879"/>
</kw>
<status status="PASS" starttime="20210823 00:41:19.832" endtime="20210823 00:41:20.879"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:20.880" endtime="20210823 00:41:21.935"/>
</kw>
<status status="PASS" starttime="20210823 00:41:20.880" endtime="20210823 00:41:21.936"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:41:21.937" endtime="20210823 00:41:21.940"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:21.954" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 00:41:21.940" endtime="20210823 00:41:21.954"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:21.977" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 00:41:21.954" endtime="20210823 00:41:21.977"/>
</kw>
<status status="PASS" starttime="20210823 00:41:21.936" endtime="20210823 00:41:21.977"/>
</kw>
<kw name="And Get Signed In User Name" library="home_page_keywords">
<doc>This keyword fetches the name of the user</doc>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>selector=${username_user_profile_txt}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:22.007" level="INFO">${username} = newuser11</msg>
<status status="PASS" starttime="20210823 00:41:21.978" endtime="20210823 00:41:22.007"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:41:22.008" level="INFO">${username} = newuser11</msg>
<status status="PASS" starttime="20210823 00:41:22.007" endtime="20210823 00:41:22.008"/>
</kw>
<status status="PASS" starttime="20210823 00:41:21.978" endtime="20210823 00:41:22.008"/>
</kw>
<kw name="Then Click On Global Feed" library="home_page_keywords">
<doc>This keyword clicks on global feed text</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${global_feed_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:22.018" level="INFO">Wait for Element with selector: //a[contains(text(),'Global Feed')]</msg>
<status status="PASS" starttime="20210823 00:41:22.009" endtime="20210823 00:41:22.019"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${global_feed_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:22.019" endtime="20210823 00:41:23.069"/>
</kw>
<status status="PASS" starttime="20210823 00:41:22.008" endtime="20210823 00:41:23.070"/>
</kw>
<kw name="And Navigate To Other Author's Article" library="articles_keywords">
<doc>This keyword navigates to the article from other user</doc>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>11</value>
<iter>
<var name="${index}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:23.073" level="INFO">${author} = (//a[@class='author'])[1]</msg>
<status status="PASS" starttime="20210823 00:41:23.072" endtime="20210823 00:41:23.073"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:23.102" level="INFO">${author_txt} = newuser11</msg>
<status status="PASS" starttime="20210823 00:41:23.073" endtime="20210823 00:41:23.104"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:23.105" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[1]</msg>
<status status="PASS" starttime="20210823 00:41:23.105" endtime="20210823 00:41:23.105"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 00:41:23.106" endtime="20210823 00:41:23.106"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 00:41:23.106" endtime="20210823 00:41:23.107"/>
</kw>
<status status="PASS" starttime="20210823 00:41:23.072" endtime="20210823 00:41:23.107"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:23.107" level="INFO">${author} = (//a[@class='author'])[2]</msg>
<status status="PASS" starttime="20210823 00:41:23.107" endtime="20210823 00:41:23.108"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:23.149" level="INFO">${author_txt} = newuser11</msg>
<status status="PASS" starttime="20210823 00:41:23.108" endtime="20210823 00:41:23.149"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:23.150" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[2]</msg>
<status status="PASS" starttime="20210823 00:41:23.150" endtime="20210823 00:41:23.150"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 00:41:23.150" endtime="20210823 00:41:23.151"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 00:41:23.151" endtime="20210823 00:41:23.151"/>
</kw>
<status status="PASS" starttime="20210823 00:41:23.107" endtime="20210823 00:41:23.151"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:23.152" level="INFO">${author} = (//a[@class='author'])[3]</msg>
<status status="PASS" starttime="20210823 00:41:23.152" endtime="20210823 00:41:23.152"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:23.172" level="INFO">${author_txt} = newuser11</msg>
<status status="PASS" starttime="20210823 00:41:23.152" endtime="20210823 00:41:23.172"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:23.173" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[3]</msg>
<status status="PASS" starttime="20210823 00:41:23.173" endtime="20210823 00:41:23.173"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 00:41:23.173" endtime="20210823 00:41:23.174"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 00:41:23.174" endtime="20210823 00:41:23.174"/>
</kw>
<status status="PASS" starttime="20210823 00:41:23.151" endtime="20210823 00:41:23.174"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:23.175" level="INFO">${author} = (//a[@class='author'])[4]</msg>
<status status="PASS" starttime="20210823 00:41:23.175" endtime="20210823 00:41:23.175"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:23.195" level="INFO">${author_txt} = newuser11</msg>
<status status="PASS" starttime="20210823 00:41:23.175" endtime="20210823 00:41:23.195"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:23.195" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[4]</msg>
<status status="PASS" starttime="20210823 00:41:23.195" endtime="20210823 00:41:23.195"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 00:41:23.196" endtime="20210823 00:41:23.196"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 00:41:23.196" endtime="20210823 00:41:23.197"/>
</kw>
<status status="PASS" starttime="20210823 00:41:23.174" endtime="20210823 00:41:23.197"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:23.197" level="INFO">${author} = (//a[@class='author'])[5]</msg>
<status status="PASS" starttime="20210823 00:41:23.197" endtime="20210823 00:41:23.197"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:23.217" level="INFO">${author_txt} = ytcotcugdtnz</msg>
<status status="PASS" starttime="20210823 00:41:23.197" endtime="20210823 00:41:23.217"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:23.218" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[5]</msg>
<status status="PASS" starttime="20210823 00:41:23.218" endtime="20210823 00:41:23.218"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Hover" library="Browser">
<arg>selector=${art_preview}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Moves the virtual mouse and scrolls to the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:23.219" endtime="20210823 00:41:24.269"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${art_preview}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:24.270" endtime="20210823 00:41:25.317"/>
</kw>
<status status="PASS" starttime="20210823 00:41:23.219" endtime="20210823 00:41:25.317"/>
</kw>
<status status="PASS" starttime="20210823 00:41:23.218" endtime="20210823 00:41:25.317"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210823 00:41:25.319" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210823 00:41:25.318" endtime="20210823 00:41:25.320"/>
</kw>
<status status="PASS" starttime="20210823 00:41:23.197" endtime="20210823 00:41:25.320"/>
</iter>
<status status="PASS" starttime="20210823 00:41:23.071" endtime="20210823 00:41:25.320"/>
</for>
<status status="PASS" starttime="20210823 00:41:23.070" endtime="20210823 00:41:25.321"/>
</kw>
<kw name="And Validate Delete Article Option Is Not Available" library="articles_keywords">
<doc>This keyword validates that delete article option is not available for other users</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:41:25.322" endtime="20210823 00:41:25.324"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>selector=${follow_user_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Follow</arg>
<arg>message=Follow User button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:25.325" endtime="20210823 00:41:25.348"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<arg>state=visible</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=None</arg>
<arg>message=Other user can also delete the article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:25.348" endtime="20210823 00:41:25.467"/>
</kw>
<status status="PASS" starttime="20210823 00:41:25.321" endtime="20210823 00:41:25.467"/>
</kw>
<doc>This test case checks Delete Article button shown to article's author</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<tag>TESTING</tag>
<status status="PASS" starttime="20210823 00:41:13.949" endtime="20210823 00:41:25.467"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser. Activated browser is set to first active browser.
Closes all context and pages belonging to this browser.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:41:26.564" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210823 00:41:25.552" endtime="20210823 00:41:26.565"/>
</kw>
<status status="PASS" starttime="20210823 00:40:28.227" endtime="20210823 00:41:26.565"/>
</suite>
<suite id="s1-s3" name="Home Page Test Api" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/home_page_test_api.robot">
<test id="s1-s3-t1" name="Get List Of Tags">
<kw name="Fetch All Tags" library="home_page_keywords">
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This keyword fetches all the tags</doc>
<kw name="Get Tags" library="Tags">
<var>${tags_list}</var>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This function fetches the tags available
:param auth_user: user name for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns a dictionary of contains all the tags</doc>
<msg timestamp="20210823 00:41:26.860" level="INFO">${tags_list} = {'tags': ['matrix', 'capacitor', 'card', 'interface', 'protocol', 'firewall', 'bus', 'pixel', 'circuit', 'alarm', 'system', 'driver', 'array', 'port', 'panel', 'application', 'sensor', 'hard drive', '...</msg>
<status status="PASS" starttime="20210823 00:41:26.732" endtime="20210823 00:41:26.860"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${tags_list['tags']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210823 00:41:26.867" level="INFO">Length is 792</msg>
<status status="PASS" starttime="20210823 00:41:26.861" endtime="20210823 00:41:26.867"/>
</kw>
<status status="PASS" starttime="20210823 00:41:26.728" endtime="20210823 00:41:26.868"/>
</kw>
<doc>This test case will fetch the list of tags</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 00:41:26.701" endtime="20210823 00:41:26.869"/>
</test>
<status status="PASS" starttime="20210823 00:41:26.586" endtime="20210823 00:41:26.873"/>
</suite>
<suite id="s1-s4" name="Home Page Test Gui" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/home_page_test_gui.robot">
<test id="s1-s4-t1" name="Validate Home Page">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:41:26.912" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/b39311e3-8361-493e-a4c6-d93b1185da68"}</msg>
<msg timestamp="20210823 00:41:27.523" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/b39311e3-8361-493e-a4c6-d93b1185da68"}</msg>
<status status="PASS" starttime="20210823 00:41:26.911" endtime="20210823 00:41:27.537"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 00:41:27.540" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 00:41:27.538" endtime="20210823 00:41:27.541"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 00:41:27.547" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 00:41:27.610" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 00:41:27.610" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 00:41:27.543" endtime="20210823 00:41:27.610"/>
</kw>
<status status="PASS" starttime="20210823 00:41:27.542" endtime="20210823 00:41:27.610"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 00:41:32.135" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 00:41:27.611" endtime="20210823 00:41:32.136"/>
</kw>
<status status="PASS" starttime="20210823 00:41:26.910" endtime="20210823 00:41:32.136"/>
</kw>
<kw name="Then Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:32.179" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 00:41:32.138" endtime="20210823 00:41:32.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:41:32.180" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 00:41:32.180" endtime="20210823 00:41:32.180"/>
</kw>
<status status="PASS" starttime="20210823 00:41:32.137" endtime="20210823 00:41:32.180"/>
</kw>
<kw name="And Validate Tags are present" library="home_page_keywords">
<doc>This keyword validates that the tags are present in the homepage</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_tags}</var>
<arg>selector=${homepage_tags}</arg>
<arg>assertion_operator=greater than</arg>
<arg>expected_value=1</arg>
<arg>message=Tags aren't present in homepage</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210823 00:41:32.700" level="INFO">${count_tags} = 792</msg>
<status status="PASS" starttime="20210823 00:41:32.181" endtime="20210823 00:41:32.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_tags}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:41:32.701" level="INFO">792</msg>
<status status="PASS" starttime="20210823 00:41:32.700" endtime="20210823 00:41:32.701"/>
</kw>
<status status="PASS" starttime="20210823 00:41:32.181" endtime="20210823 00:41:32.701"/>
</kw>
<kw name="And List Of Articles Is Present" library="home_page_keywords">
<doc>This keyword checks that global feed articles are present.</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_articles}</var>
<arg>selector=${global_feed_articles}</arg>
<arg>assertion_operator=&gt;=</arg>
<arg>expected_value=1</arg>
<arg>message=Articles aren't present in Global Feed</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210823 00:41:32.813" level="INFO">${count_articles} = 10</msg>
<status status="PASS" starttime="20210823 00:41:32.702" endtime="20210823 00:41:32.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_articles}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:41:32.813" level="INFO">10</msg>
<status status="PASS" starttime="20210823 00:41:32.813" endtime="20210823 00:41:32.814"/>
</kw>
<status status="PASS" starttime="20210823 00:41:32.701" endtime="20210823 00:41:32.814"/>
</kw>
<kw name="And Validate Pagination On Home Page" library="home_page_keywords">
<doc>This keyword checks for the list of pagination of articles</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_pages}</var>
<arg>selector=${article_pagination}</arg>
<arg>assertion_operator=&gt;=</arg>
<arg>expected_value=1</arg>
<arg>message=Feed Article Pagination is not Present.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210823 00:41:32.970" level="INFO">${count_pages} = 270</msg>
<status status="PASS" starttime="20210823 00:41:32.814" endtime="20210823 00:41:32.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_pages}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:41:32.971" level="INFO">270</msg>
<status status="PASS" starttime="20210823 00:41:32.971" endtime="20210823 00:41:32.971"/>
</kw>
<status status="PASS" starttime="20210823 00:41:32.814" endtime="20210823 00:41:32.972"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<tag>HOME_PAGE</tag>
<status status="PASS" starttime="20210823 00:41:26.908" endtime="20210823 00:41:32.972"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser. Activated browser is set to first active browser.
Closes all context and pages belonging to this browser.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:41:33.385" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210823 00:41:33.111" endtime="20210823 00:41:33.385"/>
</kw>
<status status="PASS" starttime="20210823 00:41:26.876" endtime="20210823 00:41:33.385"/>
</suite>
<suite id="s1-s5" name="Login User Test Api" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/login_user_test_api.robot">
<test id="s1-s5-t1" name="Authenticate Existing User">
<kw name="Authenticate A User" library="login_user_keywords">
<arg>${login_emailId}</arg>
<arg>${login_pwd}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This keyword will authenticate the user using Basic Auth</doc>
<kw name="User Auth" library="Users">
<var>${auth_user_data}</var>
<arg>${email}</arg>
<arg>${password}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>The function will authenticate the user using Basic Auth
:param email: Email id of the user
:param password: password of the user
:param auth_user: username for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns a dictionary containing the jwt token</doc>
<msg timestamp="20210823 00:41:33.630" level="INFO">${auth_user_data} = {'user': {'username': 'newuser11', 'email': 'newuser11@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjI5MzczZjcyZWQwMjcwNmFkM2E1YiIsInVzZXJuYW1lIjoibmV3dXNlcjExIiwiZXhwIjoxNj...</msg>
<status status="PASS" starttime="20210823 00:41:33.441" endtime="20210823 00:41:33.630"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${auth_user_data}</arg>
<arg>${auth_user_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:41:33.631" level="INFO">${auth_user_data} = {'user': {'username': 'newuser11', 'email': 'newuser11@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjI5MzczZjcyZWQwMjcwNmFkM2E1YiIsInVzZXJuYW1lIjoibmV3dXNlcjExIiwiZXhwIjoxNj...</msg>
<status status="PASS" starttime="20210823 00:41:33.630" endtime="20210823 00:41:33.631"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${auth_user_data}</arg>
<arg>msg=Unable to authenticate user</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210823 00:41:33.632" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210823 00:41:33.631" endtime="20210823 00:41:33.632"/>
</kw>
<status status="PASS" starttime="20210823 00:41:33.439" endtime="20210823 00:41:33.632"/>
</kw>
<kw name="Validate Authenticated User" library="login_user_keywords">
<doc>This keyword validates that authenticated user returns the correct data</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${auth_user_data['user']}</arg>
<arg>key=email</arg>
<arg>msg=email is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:41:33.633" endtime="20210823 00:41:33.635"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${auth_user_data['user']}</arg>
<arg>key=username</arg>
<arg>msg=username is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:41:33.635" endtime="20210823 00:41:33.637"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${auth_user_data['user']}</arg>
<arg>key=token</arg>
<arg>msg=jwt token is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:41:33.637" endtime="20210823 00:41:33.639"/>
</kw>
<status status="PASS" starttime="20210823 00:41:33.632" endtime="20210823 00:41:33.639"/>
</kw>
<doc>This test case will authenticate the user</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 00:41:33.435" endtime="20210823 00:41:33.640"/>
</test>
<test id="s1-s5-t2" name="Register New User">
<kw name="New User Registration" library="login_user_keywords">
<arg>${login_pwd}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This keyword registers a new user</doc>
<kw name="Generate Random String" library="String">
<var>${login_username}</var>
<arg>12</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210823 00:41:33.648" level="INFO">${login_username} = cfglkatfqoob</msg>
<status status="PASS" starttime="20210823 00:41:33.647" endtime="20210823 00:41:33.648"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${login_emailId}</var>
<arg>SEPARATOR=</arg>
<arg>${login_username}</arg>
<arg>@gmail.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:33.649" level="INFO">${login_emailId} = cfglkatfqoob@gmail.com</msg>
<status status="PASS" starttime="20210823 00:41:33.648" endtime="20210823 00:41:33.649"/>
</kw>
<kw name="User Registration" library="Users">
<var>${registered_user}</var>
<arg>${login_username}</arg>
<arg>${login_emailId}</arg>
<arg>${login_pwd}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This functions registers a new user
:param username: Username to be registered
:param email: email to be registered
:param password: pass for the new registration
:param auth_user: username for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns a dictionary containing the data about registered user.</doc>
<msg timestamp="20210823 00:41:33.804" level="INFO">${registered_user} = {'user': {'username': 'cfglkatfqoob', 'email': 'cfglkatfqoob@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjJkMjlkZjcyZWQwMjcwNmFkM2E3OCIsInVzZXJuYW1lIjoiY2ZnbGthdGZxb29iIiwi...</msg>
<status status="PASS" starttime="20210823 00:41:33.649" endtime="20210823 00:41:33.804"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${registered_user}</arg>
<arg>${registered_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210823 00:41:33.806" level="INFO">${registered_user} = {'user': {'username': 'cfglkatfqoob', 'email': 'cfglkatfqoob@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjJkMjlkZjcyZWQwMjcwNmFkM2E3OCIsInVzZXJuYW1lIjoiY2ZnbGthdGZxb29iIiwi...</msg>
<status status="PASS" starttime="20210823 00:41:33.805" endtime="20210823 00:41:33.806"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${registered_user}</arg>
<arg>msg=Unable to register the user</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210823 00:41:33.806" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210823 00:41:33.806" endtime="20210823 00:41:33.807"/>
</kw>
<status status="PASS" starttime="20210823 00:41:33.645" endtime="20210823 00:41:33.807"/>
</kw>
<kw name="Validate Registered User" library="login_user_keywords">
<doc>This keyword will validates that user is registered successfully</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${registered_user['user']}</arg>
<arg>key=email</arg>
<arg>msg=email is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:41:33.808" endtime="20210823 00:41:33.810"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${registered_user['user']}</arg>
<arg>key=username</arg>
<arg>msg=username is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:41:33.810" endtime="20210823 00:41:33.812"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${registered_user['user']}</arg>
<arg>key=token</arg>
<arg>msg=jwt token is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:41:33.812" endtime="20210823 00:41:33.814"/>
</kw>
<status status="PASS" starttime="20210823 00:41:33.807" endtime="20210823 00:41:33.814"/>
</kw>
<doc>This test case will register and validate a new user</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 00:41:33.642" endtime="20210823 00:41:33.814"/>
</test>
<test id="s1-s5-t3" name="Get Current Signed In User">
<kw name="Get Current Active User" library="login_user_keywords">
<arg>${login_emailId}</arg>
<arg>${login_pwd}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This keyword will return current user</doc>
<kw name="Get Current User" library="Users">
<var>${current_user}</var>
<arg>${email}</arg>
<arg>${password}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This function returns the details of authenticated current user
:param email: email id for login
:param password: login password
:param auth_user: username for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns the details of the current user</doc>
<msg timestamp="20210823 00:41:34.054" level="INFO">${current_user} = {'user': {'username': 'newuser11', 'email': 'newuser11@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjI5MzczZjcyZWQwMjcwNmFkM2E1YiIsInVzZXJuYW1lIjoibmV3dXNlcjExIiwiZXhwIjoxNj...</msg>
<status status="PASS" starttime="20210823 00:41:33.820" endtime="20210823 00:41:34.054"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${current_user}</arg>
<arg>${current_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:41:34.055" level="INFO">${current_user} = {'user': {'username': 'newuser11', 'email': 'newuser11@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjI5MzczZjcyZWQwMjcwNmFkM2E1YiIsInVzZXJuYW1lIjoibmV3dXNlcjExIiwiZXhwIjoxNj...</msg>
<status status="PASS" starttime="20210823 00:41:34.054" endtime="20210823 00:41:34.055"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${current_user}</arg>
<arg>msg=Unable to fetch current User</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210823 00:41:34.056" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210823 00:41:34.055" endtime="20210823 00:41:34.056"/>
</kw>
<status status="PASS" starttime="20210823 00:41:33.819" endtime="20210823 00:41:34.056"/>
</kw>
<kw name="Validate Current User" library="login_user_keywords">
<doc>This keyword will validates that user details are fetched correctly</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${current_user['user']}</arg>
<arg>key=email</arg>
<arg>msg=email is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:41:34.057" endtime="20210823 00:41:34.059"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${current_user['user']}</arg>
<arg>key=username</arg>
<arg>msg=username is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:41:34.059" endtime="20210823 00:41:34.061"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${current_user['user']}</arg>
<arg>key=token</arg>
<arg>msg=jwt token is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 00:41:34.061" endtime="20210823 00:41:34.063"/>
</kw>
<status status="PASS" starttime="20210823 00:41:34.057" endtime="20210823 00:41:34.063"/>
</kw>
<doc>This keyword will return the current user</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 00:41:33.817" endtime="20210823 00:41:34.063"/>
</test>
<status status="PASS" starttime="20210823 00:41:33.398" endtime="20210823 00:41:34.066"/>
</suite>
<suite id="s1-s6" name="Login User Test Gui" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/login_user_test_gui.robot">
<test id="s1-s6-t1" name="Sign In For Registered User">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:41:34.093" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/19d8b603-3e2f-4b6e-bed4-72cff692ac3c"}</msg>
<msg timestamp="20210823 00:41:34.684" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/19d8b603-3e2f-4b6e-bed4-72cff692ac3c"}</msg>
<status status="PASS" starttime="20210823 00:41:34.092" endtime="20210823 00:41:34.684"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 00:41:34.695" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 00:41:34.684" endtime="20210823 00:41:34.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 00:41:34.699" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 00:41:34.750" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 00:41:34.751" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 00:41:34.697" endtime="20210823 00:41:34.751"/>
</kw>
<status status="PASS" starttime="20210823 00:41:34.696" endtime="20210823 00:41:34.751"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 00:41:37.580" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 00:41:34.751" endtime="20210823 00:41:37.580"/>
</kw>
<status status="PASS" starttime="20210823 00:41:34.091" endtime="20210823 00:41:37.581"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:37.632" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 00:41:37.582" endtime="20210823 00:41:37.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:41:37.632" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 00:41:37.632" endtime="20210823 00:41:37.632"/>
</kw>
<status status="PASS" starttime="20210823 00:41:37.581" endtime="20210823 00:41:37.632"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:37.645" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 00:41:37.633" endtime="20210823 00:41:37.645"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:37.645" endtime="20210823 00:41:38.739"/>
</kw>
<status status="PASS" starttime="20210823 00:41:37.633" endtime="20210823 00:41:38.739"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 00:41:38.745" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:41:38.741" endtime="20210823 00:41:38.745"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:41:38.746" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:41:38.745" endtime="20210823 00:41:38.746"/>
</kw>
<status status="PASS" starttime="20210823 00:41:38.740" endtime="20210823 00:41:38.746"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:41:38.749" level="INFO">Fills the text 'newuser11@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 00:41:38.748" endtime="20210823 00:41:39.782"/>
</kw>
<status status="PASS" starttime="20210823 00:41:38.747" endtime="20210823 00:41:39.782"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:39.784" endtime="20210823 00:41:40.815"/>
</kw>
<status status="PASS" starttime="20210823 00:41:39.783" endtime="20210823 00:41:40.815"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:40.817" endtime="20210823 00:41:41.896"/>
</kw>
<status status="PASS" starttime="20210823 00:41:40.816" endtime="20210823 00:41:41.896"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:41:41.898" endtime="20210823 00:41:41.902"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:41.917" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 00:41:41.902" endtime="20210823 00:41:41.917"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:41.945" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 00:41:41.917" endtime="20210823 00:41:41.945"/>
</kw>
<status status="PASS" starttime="20210823 00:41:41.897" endtime="20210823 00:41:41.946"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<tag>LOGIN_USER</tag>
<status status="PASS" starttime="20210823 00:41:34.088" endtime="20210823 00:41:41.946"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser. Activated browser is set to first active browser.
Closes all context and pages belonging to this browser.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:41:42.428" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210823 00:41:42.035" endtime="20210823 00:41:42.428"/>
</kw>
<status status="PASS" starttime="20210823 00:41:34.069" endtime="20210823 00:41:42.428"/>
</suite>
<suite id="s1-s7" name="Register User Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/register_user_test.robot">
<test id="s1-s7-t1" name="Register A User">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:41:42.471" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/7a641244-6320-43af-956e-9c66a3d08286"}</msg>
<msg timestamp="20210823 00:41:43.073" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/7a641244-6320-43af-956e-9c66a3d08286"}</msg>
<status status="PASS" starttime="20210823 00:41:42.469" endtime="20210823 00:41:43.073"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 00:41:43.077" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 00:41:43.074" endtime="20210823 00:41:43.077"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 00:41:43.095" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 00:41:43.136" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 00:41:43.136" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 00:41:43.093" endtime="20210823 00:41:43.136"/>
</kw>
<status status="PASS" starttime="20210823 00:41:43.091" endtime="20210823 00:41:43.136"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 00:41:46.055" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 00:41:43.137" endtime="20210823 00:41:46.055"/>
</kw>
<status status="PASS" starttime="20210823 00:41:42.467" endtime="20210823 00:41:46.056"/>
</kw>
<kw name="When Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:46.105" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 00:41:46.057" endtime="20210823 00:41:46.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:41:46.106" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 00:41:46.105" endtime="20210823 00:41:46.106"/>
</kw>
<status status="PASS" starttime="20210823 00:41:46.057" endtime="20210823 00:41:46.106"/>
</kw>
<kw name="And Open Sign Up Page" library="home_page_keywords">
<doc>This keyword will click on sign up link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_up_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:46.119" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign up')]</msg>
<status status="PASS" starttime="20210823 00:41:46.107" endtime="20210823 00:41:46.119"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_up_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:46.119" endtime="20210823 00:41:47.205"/>
</kw>
<status status="PASS" starttime="20210823 00:41:46.106" endtime="20210823 00:41:47.205"/>
</kw>
<kw name="Then Validate Register Url" library="register_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=register</arg>
<arg>message=Unable to open register page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 00:41:47.211" level="INFO">${url} = https://qa-task.backbasecloud.com/register</msg>
<status status="PASS" starttime="20210823 00:41:47.207" endtime="20210823 00:41:47.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:41:47.212" level="INFO">https://qa-task.backbasecloud.com/register</msg>
<status status="PASS" starttime="20210823 00:41:47.212" endtime="20210823 00:41:47.212"/>
</kw>
<status status="PASS" starttime="20210823 00:41:47.206" endtime="20210823 00:41:47.213"/>
</kw>
<kw name="And Enter User Name" library="register_user_keywords">
<doc>This keyword enter user name for sign up</doc>
<kw name="Generate Random String" library="String">
<var>${login_username}</var>
<arg>12</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210823 00:41:47.214" level="INFO">${login_username} = brysnqflemlb</msg>
<status status="PASS" starttime="20210823 00:41:47.214" endtime="20210823 00:41:47.215"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_username}</arg>
<arg>${login_username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:41:47.215" level="INFO">${login_username} = brysnqflemlb</msg>
<status status="PASS" starttime="20210823 00:41:47.215" endtime="20210823 00:41:47.215"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>selector=${username_txt_box}</arg>
<arg>txt=${login_username}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:41:47.216" level="INFO">Fills the text 'brysnqflemlb' in the given field.</msg>
<status status="PASS" starttime="20210823 00:41:47.216" endtime="20210823 00:41:48.246"/>
</kw>
<status status="PASS" starttime="20210823 00:41:47.213" endtime="20210823 00:41:48.246"/>
</kw>
<kw name="And Enter Email Id" library="register_user_keywords">
<doc>This keyword enter email id for sign up</doc>
<kw name="Catenate" library="BuiltIn">
<var>${login_emailId}</var>
<arg>SEPARATOR=</arg>
<arg>${login_username}</arg>
<arg>@gmail.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:48.248" level="INFO">${login_emailId} = brysnqflemlb@gmail.com</msg>
<status status="PASS" starttime="20210823 00:41:48.247" endtime="20210823 00:41:48.248"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>selector=${email_txt_box}</arg>
<arg>txt=${login_emailId}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:41:48.249" level="INFO">Fills the text 'brysnqflemlb@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 00:41:48.248" endtime="20210823 00:41:49.283"/>
</kw>
<status status="PASS" starttime="20210823 00:41:48.246" endtime="20210823 00:41:49.283"/>
</kw>
<kw name="And Enter Password" library="register_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign up</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:49.285" endtime="20210823 00:41:50.321"/>
</kw>
<status status="PASS" starttime="20210823 00:41:49.284" endtime="20210823 00:41:50.323"/>
</kw>
<kw name="Then Click Sign Up Button" library="register_user_keywords">
<doc>This keyword clicks on the sign up button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_up_button}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:50.325" endtime="20210823 00:41:51.391"/>
</kw>
<status status="PASS" starttime="20210823 00:41:50.324" endtime="20210823 00:41:51.392"/>
</kw>
<kw name="And Verify Sign Up" library="register_user_keywords">
<arg>${login_username}</arg>
<doc>This keyword verifies whether sign up is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email/Username already exists</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:41:51.394" endtime="20210823 00:41:51.398"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${user_xpath}</var>
<arg>SEPARATOR=</arg>
<arg>${signed_up_username}</arg>
<arg>${username}']</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 00:41:51.400" level="INFO">${user_xpath} = //a[@href='/profile/brysnqflemlb']</msg>
<status status="PASS" starttime="20210823 00:41:51.399" endtime="20210823 00:41:51.400"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${user_xpath}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:51.418" level="INFO">Wait for Element with selector: //a[@href='/profile/brysnqflemlb']</msg>
<status status="PASS" starttime="20210823 00:41:51.400" endtime="20210823 00:41:51.418"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${output}</var>
<arg>selector=${user_xpath}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${username}</arg>
<arg>message=Sign up unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:51.441" level="INFO">${output} = brysnqflemlb</msg>
<status status="PASS" starttime="20210823 00:41:51.418" endtime="20210823 00:41:51.441"/>
</kw>
<status status="PASS" starttime="20210823 00:41:51.392" endtime="20210823 00:41:51.442"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<tag>REGISTER_USER</tag>
<status status="PASS" starttime="20210823 00:41:42.463" endtime="20210823 00:41:51.442"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser. Activated browser is set to first active browser.
Closes all context and pages belonging to this browser.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:41:51.790" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210823 00:41:51.519" endtime="20210823 00:41:51.791"/>
</kw>
<status status="PASS" starttime="20210823 00:41:42.433" endtime="20210823 00:41:51.791"/>
</suite>
<suite id="s1-s8" name="Settings Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/settings_test.robot">
<test id="s1-s8-t1" name="Validate Settings Page">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:41:51.853" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/4b3614f2-4b98-45c1-b938-233f7614b82c"}</msg>
<msg timestamp="20210823 00:41:52.494" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/4b3614f2-4b98-45c1-b938-233f7614b82c"}</msg>
<status status="PASS" starttime="20210823 00:41:51.850" endtime="20210823 00:41:52.494"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 00:41:52.498" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 00:41:52.495" endtime="20210823 00:41:52.499"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 00:41:52.501" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 00:41:52.574" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 00:41:52.575" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 00:41:52.500" endtime="20210823 00:41:52.575"/>
</kw>
<status status="PASS" starttime="20210823 00:41:52.499" endtime="20210823 00:41:52.575"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 00:41:55.506" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 00:41:52.575" endtime="20210823 00:41:55.506"/>
</kw>
<status status="PASS" starttime="20210823 00:41:51.848" endtime="20210823 00:41:55.506"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:55.559" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 00:41:55.508" endtime="20210823 00:41:55.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 00:41:55.560" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 00:41:55.560" endtime="20210823 00:41:55.560"/>
</kw>
<status status="PASS" starttime="20210823 00:41:55.507" endtime="20210823 00:41:55.560"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:55.575" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 00:41:55.561" endtime="20210823 00:41:55.575"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:55.575" endtime="20210823 00:41:56.690"/>
</kw>
<status status="PASS" starttime="20210823 00:41:55.561" endtime="20210823 00:41:56.691"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 00:41:56.696" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:41:56.692" endtime="20210823 00:41:56.696"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 00:41:56.697" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 00:41:56.697" endtime="20210823 00:41:56.697"/>
</kw>
<status status="PASS" starttime="20210823 00:41:56.691" endtime="20210823 00:41:56.698"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 00:41:56.700" level="INFO">Fills the text 'newuser11@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 00:41:56.699" endtime="20210823 00:41:57.743"/>
</kw>
<status status="PASS" starttime="20210823 00:41:56.698" endtime="20210823 00:41:57.743"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:57.746" endtime="20210823 00:41:58.789"/>
</kw>
<status status="PASS" starttime="20210823 00:41:57.744" endtime="20210823 00:41:58.790"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:58.792" endtime="20210823 00:41:59.850"/>
</kw>
<status status="PASS" starttime="20210823 00:41:58.791" endtime="20210823 00:41:59.850"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:41:59.852" endtime="20210823 00:41:59.855"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:59.869" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 00:41:59.856" endtime="20210823 00:41:59.869"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 00:41:59.895" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 00:41:59.869" endtime="20210823 00:41:59.895"/>
</kw>
<status status="PASS" starttime="20210823 00:41:59.851" endtime="20210823 00:41:59.895"/>
</kw>
<kw name="Then Open Settings Page" library="home_page_keywords">
<doc>This keyword will open Settings page from home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${settings_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 00:41:59.907" level="INFO">Wait for Element with selector: //a[@href='/settings']</msg>
<status status="PASS" starttime="20210823 00:41:59.896" endtime="20210823 00:41:59.907"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${settings_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:41:59.907" endtime="20210823 00:42:00.974"/>
</kw>
<status status="PASS" starttime="20210823 00:41:59.896" endtime="20210823 00:42:00.974"/>
</kw>
<kw name="And Validate Settings Page Url" library="settings_keywords">
<doc>This keyword validates the url of settings page</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=settings</arg>
<arg>message=Unable to open settings page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 00:42:00.976" endtime="20210823 00:42:00.980"/>
</kw>
<status status="PASS" starttime="20210823 00:42:00.975" endtime="20210823 00:42:00.980"/>
</kw>
<kw name="And Validate Settings Title" library="settings_keywords">
<doc>This keyword validates title of the Settings page</doc>
<kw name="Get Text" library="Browser">
<arg>selector=${settings_title_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=Your Settings</arg>
<arg>message=Unable to open Settings Page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 00:42:00.982" endtime="20210823 00:42:01.006"/>
</kw>
<status status="PASS" starttime="20210823 00:42:00.981" endtime="20210823 00:42:01.006"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<tag>SETTINGS</tag>
<status status="PASS" starttime="20210823 00:41:51.843" endtime="20210823 00:42:01.007"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser. Activated browser is set to first active browser.
Closes all context and pages belonging to this browser.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210823 00:42:01.332" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210823 00:42:01.098" endtime="20210823 00:42:01.333"/>
</kw>
<status status="PASS" starttime="20210823 00:41:51.797" endtime="20210823 00:42:01.333"/>
</suite>
<status status="PASS" starttime="20210823 00:40:26.179" endtime="20210823 00:42:01.343"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" skip="0">API_TEST</stat>
<stat pass="4" fail="0" skip="0">ARTICLES</stat>
<stat pass="14" fail="0" skip="0">FEATURE-ARTICLES</stat>
<stat pass="8" fail="0" skip="0">GUI_TEST</stat>
<stat pass="1" fail="0" skip="0">HOME_PAGE</stat>
<stat pass="1" fail="0" skip="0">LOGIN_USER</stat>
<stat pass="1" fail="0" skip="0">REGISTER_USER</stat>
<stat pass="1" fail="0" skip="0">SETTINGS</stat>
<stat pass="1" fail="0" skip="0">TESTING</stat>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Article Test Api">Tests.Article Test Api</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Article Test Gui">Tests.Article Test Gui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Home Page Test Api">Tests.Home Page Test Api</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Home Page Test Gui">Tests.Home Page Test Gui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="Login User Test Api">Tests.Login User Test Api</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Login User Test Gui">Tests.Login User Test Gui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Register User Test">Tests.Register User Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Settings Test">Tests.Settings Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
