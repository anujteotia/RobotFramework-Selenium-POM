<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1 (Python 3.9.6 on darwin)" generated="20210823 15:45:52.050" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests">
<suite id="s1-s1" name="Article Test Api" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/article_test_api.robot">
<test id="s1-s1-t1" name="Get List Of Articles">
<kw name="List Limited Articles" library="articles_keywords">
<arg>${limit}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This Keyword will return a number of articles</doc>
<kw name="List Articles" library="Articles">
<var>${list_articles}</var>
<arg>${limit}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This function lists limited nu ber of articles controlled by argument limit
:param limit: No of items to be returned
:param auth_user: username for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns a dictionary of articles</doc>
<msg timestamp="20210823 15:45:53.553" level="INFO">${list_articles} = {'articles': [{'slug': 'test-85cqq8', 'title': 'Test', 'description': 'test', 'body': 'Test Article', 'createdAt': '2021-08-23T13:39:48.099Z', 'updatedAt': '2021-08-23T13:39:48.099Z', 'tagList': ['CRU...</msg>
<status status="PASS" starttime="20210823 15:45:53.230" endtime="20210823 15:45:53.553"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${list_articles}</arg>
<arg>${list_articles}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:45:53.555" level="INFO">${list_articles} = {'articles': [{'slug': 'test-85cqq8', 'title': 'Test', 'description': 'test', 'body': 'Test Article', 'createdAt': '2021-08-23T13:39:48.099Z', 'updatedAt': '2021-08-23T13:39:48.099Z', 'tagList': ['CRU...</msg>
<status status="PASS" starttime="20210823 15:45:53.554" endtime="20210823 15:45:53.555"/>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<arg>item=${list_articles['articles']}</arg>
<arg>length=${limit}</arg>
<arg>msg=Articles are not returned correctly</arg>
<doc>Verifies that the length of the given item is correct.</doc>
<msg timestamp="20210823 15:45:53.558" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20210823 15:45:53.555" endtime="20210823 15:45:53.558"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.229" endtime="20210823 15:45:53.558"/>
</kw>
<kw name="Articles Ordered By Most Recent First" library="articles_keywords">
<doc>This keyword validates that articles are oredred by most recent first</doc>
<kw name="Get Length" library="BuiltIn">
<var>${list_length}</var>
<arg>${list_articles['articles']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210823 15:45:53.563" level="INFO">Length is 10</msg>
<msg timestamp="20210823 15:45:53.563" level="INFO">${list_length} = 10</msg>
<status status="PASS" starttime="20210823 15:45:53.560" endtime="20210823 15:45:53.563"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${list_articles['articles'][0]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.568" level="INFO">${latest_art_date} = 2021-08-23T13:39:48.099Z</msg>
<status status="PASS" starttime="20210823 15:45:53.564" endtime="20210823 15:45:53.568"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.572" level="INFO">${date_created} = 2021-08-23T13:23:58.875Z</msg>
<status status="PASS" starttime="20210823 15:45:53.569" endtime="20210823 15:45:53.572"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 15:45:53.577" level="INFO">${date} = 949.224</msg>
<status status="PASS" starttime="20210823 15:45:53.572" endtime="20210823 15:45:53.577"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 15:45:53.577" endtime="20210823 15:45:53.578"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.578" level="INFO">${latest_art_date} = 2021-08-23T13:23:58.875Z</msg>
<status status="PASS" starttime="20210823 15:45:53.578" endtime="20210823 15:45:53.578"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.569" endtime="20210823 15:45:53.579"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.581" level="INFO">${date_created} = 2021-08-23T13:14:14.080Z</msg>
<status status="PASS" starttime="20210823 15:45:53.579" endtime="20210823 15:45:53.581"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 15:45:53.582" level="INFO">${date} = 584.795</msg>
<status status="PASS" starttime="20210823 15:45:53.581" endtime="20210823 15:45:53.582"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 15:45:53.582" endtime="20210823 15:45:53.583"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.584" level="INFO">${latest_art_date} = 2021-08-23T13:14:14.080Z</msg>
<status status="PASS" starttime="20210823 15:45:53.583" endtime="20210823 15:45:53.584"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.579" endtime="20210823 15:45:53.584"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.586" level="INFO">${date_created} = 2021-08-23T13:11:27.163Z</msg>
<status status="PASS" starttime="20210823 15:45:53.584" endtime="20210823 15:45:53.586"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 15:45:53.586" level="INFO">${date} = 166.917</msg>
<status status="PASS" starttime="20210823 15:45:53.586" endtime="20210823 15:45:53.586"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 15:45:53.587" endtime="20210823 15:45:53.587"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.588" level="INFO">${latest_art_date} = 2021-08-23T13:11:27.163Z</msg>
<status status="PASS" starttime="20210823 15:45:53.587" endtime="20210823 15:45:53.588"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.584" endtime="20210823 15:45:53.588"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.590" level="INFO">${date_created} = 2021-08-23T09:42:55.580Z</msg>
<status status="PASS" starttime="20210823 15:45:53.588" endtime="20210823 15:45:53.590"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 15:45:53.591" level="INFO">${date} = 12511.583</msg>
<status status="PASS" starttime="20210823 15:45:53.590" endtime="20210823 15:45:53.591"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 15:45:53.591" endtime="20210823 15:45:53.591"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.592" level="INFO">${latest_art_date} = 2021-08-23T09:42:55.580Z</msg>
<status status="PASS" starttime="20210823 15:45:53.591" endtime="20210823 15:45:53.592"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.588" endtime="20210823 15:45:53.592"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.594" level="INFO">${date_created} = 2021-08-23T09:42:51.719Z</msg>
<status status="PASS" starttime="20210823 15:45:53.592" endtime="20210823 15:45:53.594"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 15:45:53.594" level="INFO">${date} = 3.861</msg>
<status status="PASS" starttime="20210823 15:45:53.594" endtime="20210823 15:45:53.594"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 15:45:53.594" endtime="20210823 15:45:53.595"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.595" level="INFO">${latest_art_date} = 2021-08-23T09:42:51.719Z</msg>
<status status="PASS" starttime="20210823 15:45:53.595" endtime="20210823 15:45:53.595"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.592" endtime="20210823 15:45:53.595"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.597" level="INFO">${date_created} = 2021-08-23T09:42:49.230Z</msg>
<status status="PASS" starttime="20210823 15:45:53.596" endtime="20210823 15:45:53.597"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 15:45:53.598" level="INFO">${date} = 2.489</msg>
<status status="PASS" starttime="20210823 15:45:53.597" endtime="20210823 15:45:53.598"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 15:45:53.598" endtime="20210823 15:45:53.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.599" level="INFO">${latest_art_date} = 2021-08-23T09:42:49.230Z</msg>
<status status="PASS" starttime="20210823 15:45:53.599" endtime="20210823 15:45:53.599"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.595" endtime="20210823 15:45:53.599"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.601" level="INFO">${date_created} = 2021-08-23T09:05:23.646Z</msg>
<status status="PASS" starttime="20210823 15:45:53.599" endtime="20210823 15:45:53.601"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 15:45:53.601" level="INFO">${date} = 2245.584</msg>
<status status="PASS" starttime="20210823 15:45:53.601" endtime="20210823 15:45:53.601"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 15:45:53.602" endtime="20210823 15:45:53.602"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.602" level="INFO">${latest_art_date} = 2021-08-23T09:05:23.646Z</msg>
<status status="PASS" starttime="20210823 15:45:53.602" endtime="20210823 15:45:53.602"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.599" endtime="20210823 15:45:53.602"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.604" level="INFO">${date_created} = 2021-08-22T22:40:27.799Z</msg>
<status status="PASS" starttime="20210823 15:45:53.603" endtime="20210823 15:45:53.604"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 15:45:53.605" level="INFO">${date} = 37495.847</msg>
<status status="PASS" starttime="20210823 15:45:53.604" endtime="20210823 15:45:53.605"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 15:45:53.605" endtime="20210823 15:45:53.605"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.606" level="INFO">${latest_art_date} = 2021-08-22T22:40:27.799Z</msg>
<status status="PASS" starttime="20210823 15:45:53.605" endtime="20210823 15:45:53.606"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.603" endtime="20210823 15:45:53.606"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Set Variable" library="BuiltIn">
<var>${date_created}</var>
<arg>${list_articles['articles'][${index}]['createdAt']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.607" level="INFO">${date_created} = 2021-08-22T22:34:54.395Z</msg>
<status status="PASS" starttime="20210823 15:45:53.606" endtime="20210823 15:45:53.607"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${date}</var>
<arg>${latest_art_date}</arg>
<arg>${date_created}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20210823 15:45:53.608" level="INFO">${date} = 333.404</msg>
<status status="PASS" starttime="20210823 15:45:53.607" endtime="20210823 15:45:53.608"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${date}&gt;0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210823 15:45:53.608" endtime="20210823 15:45:53.608"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${latest_art_date}</var>
<arg>${date_created}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210823 15:45:53.609" level="INFO">${latest_art_date} = 2021-08-22T22:34:54.395Z</msg>
<status status="PASS" starttime="20210823 15:45:53.609" endtime="20210823 15:45:53.609"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.606" endtime="20210823 15:45:53.609"/>
</iter>
<status status="PASS" starttime="20210823 15:45:53.568" endtime="20210823 15:45:53.609"/>
</for>
<status status="PASS" starttime="20210823 15:45:53.559" endtime="20210823 15:45:53.609"/>
</kw>
<doc>This test case will fetch 10 articles</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 15:45:53.226" endtime="20210823 15:45:53.609"/>
</test>
<test id="s1-s1-t2" name="Create A New Article">
<kw name="Create New Article" library="articles_keywords">
<arg>${title}</arg>
<arg>${description}</arg>
<arg>${body}</arg>
<arg>${taglist}</arg>
<arg>${login_emailId}</arg>
<arg>${login_pwd}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This keyword creates a new article</doc>
<kw name="Create Article" library="Articles">
<var>${article_data}</var>
<arg>${title}</arg>
<arg>${description}</arg>
<arg>${body}</arg>
<arg>${taglist}</arg>
<arg>${email}</arg>
<arg>${password}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This function will create a new article
:param title: title of the article
:param description: description of the article
:param body: body of the article
:param taglist: list of tags
:param email: login email Id
:param password: password to login
:param auth_user: username for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns created article details in a dictionary</doc>
<msg timestamp="20210823 15:45:53.939" level="INFO">${article_data} = {'article': {'slug': 'test-z497pv', 'title': 'Test', 'description': 'test', 'body': 'Test Article', 'createdAt': '2021-08-23T13:45:53.937Z', 'updatedAt': '2021-08-23T13:45:53.937Z', 'tagList': ['CRUD'...</msg>
<status status="PASS" starttime="20210823 15:45:53.616" endtime="20210823 15:45:53.939"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${article_data}</arg>
<arg>${article_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:45:53.940" level="INFO">${article_data} = {'article': {'slug': 'test-z497pv', 'title': 'Test', 'description': 'test', 'body': 'Test Article', 'createdAt': '2021-08-23T13:45:53.937Z', 'updatedAt': '2021-08-23T13:45:53.937Z', 'tagList': ['CRUD'...</msg>
<status status="PASS" starttime="20210823 15:45:53.939" endtime="20210823 15:45:53.940"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.615" endtime="20210823 15:45:53.940"/>
</kw>
<kw name="Validate Created Article" library="articles_keywords">
<doc>This keyword validates the content of article created</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${article_data['article']}</arg>
<arg>key=title</arg>
<arg>msg=title is not present for new article created</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:45:53.941" endtime="20210823 15:45:53.944"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${article_data['article']}</arg>
<arg>key=description</arg>
<arg>msg=title is not present for new article created</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:45:53.944" endtime="20210823 15:45:53.946"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${article_data['article']}</arg>
<arg>key=body</arg>
<arg>msg=title is not present for new article created</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:45:53.946" endtime="20210823 15:45:53.948"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${article_data['article']}</arg>
<arg>key=tagList</arg>
<arg>msg=title is not present for new article created</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:45:53.949" endtime="20210823 15:45:53.951"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.941" endtime="20210823 15:45:53.951"/>
</kw>
<doc>This test case validates that the article is created successfully</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 15:45:53.613" endtime="20210823 15:45:53.951"/>
</test>
<status status="PASS" starttime="20210823 15:45:52.094" endtime="20210823 15:45:53.954"/>
</suite>
<suite id="s1-s2" name="Article Test Gui" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/article_test_gui.robot">
<test id="s1-s2-t1" name="Create New Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20210823 15:45:54.006" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/18b0cfea-0e6d-42e0-a188-ab6cc283bb6e"}</msg>
<msg timestamp="20210823 15:45:54.723" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/18b0cfea-0e6d-42e0-a188-ab6cc283bb6e"}</msg>
<status status="PASS" starttime="20210823 15:45:54.005" endtime="20210823 15:45:54.723"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 15:45:54.729" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 15:45:54.724" endtime="20210823 15:45:54.729"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 15:45:54.733" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 15:45:54.764" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 15:45:54.798" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 15:45:54.731" endtime="20210823 15:45:54.798"/>
</kw>
<status status="PASS" starttime="20210823 15:45:54.730" endtime="20210823 15:45:54.799"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 15:46:00.997" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 15:45:54.799" endtime="20210823 15:46:00.998"/>
</kw>
<status status="PASS" starttime="20210823 15:45:54.004" endtime="20210823 15:46:00.999"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:01.090" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 15:46:01.002" endtime="20210823 15:46:01.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:46:01.091" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 15:46:01.090" endtime="20210823 15:46:01.091"/>
</kw>
<status status="PASS" starttime="20210823 15:46:01.000" endtime="20210823 15:46:01.091"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:01.118" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 15:46:01.092" endtime="20210823 15:46:01.118"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:01.118" endtime="20210823 15:46:02.227"/>
</kw>
<status status="PASS" starttime="20210823 15:46:01.092" endtime="20210823 15:46:02.228"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 15:46:02.234" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:46:02.229" endtime="20210823 15:46:02.234"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:46:02.235" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:46:02.234" endtime="20210823 15:46:02.235"/>
</kw>
<status status="PASS" starttime="20210823 15:46:02.229" endtime="20210823 15:46:02.235"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:46:02.237" level="INFO">Fills the text 'qatestuser@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 15:46:02.236" endtime="20210823 15:46:03.269"/>
</kw>
<status status="PASS" starttime="20210823 15:46:02.235" endtime="20210823 15:46:03.270"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:03.273" endtime="20210823 15:46:04.327"/>
</kw>
<status status="PASS" starttime="20210823 15:46:03.271" endtime="20210823 15:46:04.328"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:04.330" endtime="20210823 15:46:05.381"/>
</kw>
<status status="PASS" starttime="20210823 15:46:04.329" endtime="20210823 15:46:05.382"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:46:05.384" endtime="20210823 15:46:05.387"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:05.407" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 15:46:05.388" endtime="20210823 15:46:05.407"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:05.437" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 15:46:05.408" endtime="20210823 15:46:05.437"/>
</kw>
<status status="PASS" starttime="20210823 15:46:05.383" endtime="20210823 15:46:05.437"/>
</kw>
<kw name="When Click On New Article Text" library="articles_keywords">
<doc>This keyword clicks on new article link in signed in page</doc>
<kw name="Click" library="Browser">
<arg>selector=${new_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:05.438" endtime="20210823 15:46:06.502"/>
</kw>
<status status="PASS" starttime="20210823 15:46:05.438" endtime="20210823 15:46:06.502"/>
</kw>
<kw name="And Validate New Article Page" library="articles_keywords">
<doc>This keyword verifies that page to create new article is open</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=editor</arg>
<arg>message=New article page url is not loaded</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:46:06.504" endtime="20210823 15:46:06.508"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:06.523" level="INFO">Wait for Element with selector: //button[contains(text(),'Publish Article')]</msg>
<status status="PASS" starttime="20210823 15:46:06.508" endtime="20210823 15:46:06.523"/>
</kw>
<status status="PASS" starttime="20210823 15:46:06.503" endtime="20210823 15:46:06.523"/>
</kw>
<kw name="Then Enter Article Title" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword enter title for the article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_title_txt_box}</arg>
<arg>txt=${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:46:06.525" level="INFO">Fills the text 'Test' in the given field.</msg>
<status status="PASS" starttime="20210823 15:46:06.525" endtime="20210823 15:46:07.565"/>
</kw>
<status status="PASS" starttime="20210823 15:46:06.524" endtime="20210823 15:46:07.566"/>
</kw>
<kw name="And Enter Article Description" library="articles_keywords">
<arg>${art_description}</arg>
<doc>This keyword enter description for article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_description_txt_box}</arg>
<arg>txt=${description}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:46:07.569" level="INFO">Fills the text 'test' in the given field.</msg>
<status status="PASS" starttime="20210823 15:46:07.568" endtime="20210823 15:46:08.607"/>
</kw>
<status status="PASS" starttime="20210823 15:46:07.567" endtime="20210823 15:46:08.607"/>
</kw>
<kw name="And Write Article Body" library="articles_keywords">
<arg>${art_body}</arg>
<doc>This keyword enter text in article body</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<arg>txt=${body_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:46:08.611" level="INFO">Fills the text 'Test Article' in the given field.</msg>
<status status="PASS" starttime="20210823 15:46:08.610" endtime="20210823 15:46:09.651"/>
</kw>
<status status="PASS" starttime="20210823 15:46:08.608" endtime="20210823 15:46:09.652"/>
</kw>
<kw name="And Enter Article Tag" library="articles_keywords">
<arg>${art_tag}</arg>
<doc>This keyword enter tags for the article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_tags_txt_box}</arg>
<arg>txt=${tag}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:46:09.654" level="INFO">Fills the text 'CRUD' in the given field.</msg>
<status status="PASS" starttime="20210823 15:46:09.653" endtime="20210823 15:46:10.683"/>
</kw>
<kw name="Keyboard Key" library="Browser">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20210823 15:46:10.684" endtime="20210823 15:46:11.699"/>
</kw>
<status status="PASS" starttime="20210823 15:46:09.652" endtime="20210823 15:46:11.699"/>
</kw>
<kw name="Then Click Publish Article Button" library="articles_keywords">
<doc>This keyword clicks on the publish article button</doc>
<kw name="Click" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:11.702" endtime="20210823 15:46:12.746"/>
</kw>
<status status="PASS" starttime="20210823 15:46:11.700" endtime="20210823 15:46:12.746"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210823 15:46:12.749" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210823 15:46:12.748" endtime="20210823 15:46:12.749"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:46:12.749" endtime="20210823 15:46:12.753"/>
</kw>
<status status="PASS" starttime="20210823 15:46:12.747" endtime="20210823 15:46:12.753"/>
</kw>
<kw name="And Verify Edit Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Edit Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:12.768" level="INFO">Wait for Element with selector: (//a[contains(@class,'btn btn-sm')])[2]</msg>
<status status="PASS" starttime="20210823 15:46:12.754" endtime="20210823 15:46:12.768"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${edit_article}</var>
<arg>selector=${edit_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Edit Article</arg>
<arg>message=Edit Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:12.792" level="INFO">${edit_article} =  Edit Article</msg>
<status status="PASS" starttime="20210823 15:46:12.768" endtime="20210823 15:46:12.792"/>
</kw>
<status status="PASS" starttime="20210823 15:46:12.753" endtime="20210823 15:46:12.793"/>
</kw>
<kw name="And Verify Delete Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Delete Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:12.805" level="INFO">Wait for Element with selector: (//button[contains(text(),'Delete Article')])[2]</msg>
<status status="PASS" starttime="20210823 15:46:12.794" endtime="20210823 15:46:12.805"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${delete_article}</var>
<arg>selector=${delete_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Delete Article</arg>
<arg>message=Delete Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:12.832" level="INFO">${delete_article} =  Delete Article</msg>
<status status="PASS" starttime="20210823 15:46:12.805" endtime="20210823 15:46:12.832"/>
</kw>
<status status="PASS" starttime="20210823 15:46:12.793" endtime="20210823 15:46:12.833"/>
</kw>
<kw name="And Verify Comment Text Box" library="articles_keywords">
<doc>This keyword validates the presence of comment text box</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${write_cmnt_txt_box}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:12.844" level="INFO">Wait for Element with selector: //textarea[contains(@class,'form-control')]</msg>
<status status="PASS" starttime="20210823 15:46:12.834" endtime="20210823 15:46:12.844"/>
</kw>
<status status="PASS" starttime="20210823 15:46:12.833" endtime="20210823 15:46:12.844"/>
</kw>
<kw name="And Verify Post Comment Button" library="articles_keywords">
<doc>This keyword validates the presence of post comment button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${post_comment_button}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:12.857" level="INFO">Wait for Element with selector: //button[contains(text(),'Post Comment')]</msg>
<status status="PASS" starttime="20210823 15:46:12.845" endtime="20210823 15:46:12.857"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${post_comment}</var>
<arg>selector=${post_comment_button}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Post Comment</arg>
<arg>message=Post Comment button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:12.880" level="INFO">${post_comment} = Post Comment</msg>
<status status="PASS" starttime="20210823 15:46:12.858" endtime="20210823 15:46:12.880"/>
</kw>
<status status="PASS" starttime="20210823 15:46:12.845" endtime="20210823 15:46:12.880"/>
</kw>
<doc>This test case login using basic authentication,validates Home Page and create &amp; validates creation of new article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<status status="PASS" starttime="20210823 15:45:54.000" endtime="20210823 15:46:12.880"/>
</test>
<test id="s1-s2-t2" name="Update Existing Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20210823 15:46:12.978" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/a61bffac-528c-48a5-9e21-ed3506129b63"}</msg>
<msg timestamp="20210823 15:46:13.546" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/a61bffac-528c-48a5-9e21-ed3506129b63"}</msg>
<status status="PASS" starttime="20210823 15:46:12.976" endtime="20210823 15:46:13.546"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 15:46:13.550" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 15:46:13.547" endtime="20210823 15:46:13.550"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 15:46:13.553" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 15:46:13.584" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 15:46:13.584" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 15:46:13.551" endtime="20210823 15:46:13.584"/>
</kw>
<status status="PASS" starttime="20210823 15:46:13.550" endtime="20210823 15:46:13.584"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 15:46:16.609" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 15:46:13.585" endtime="20210823 15:46:16.610"/>
</kw>
<status status="PASS" starttime="20210823 15:46:12.974" endtime="20210823 15:46:16.610"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:16.653" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 15:46:16.612" endtime="20210823 15:46:16.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:46:16.654" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 15:46:16.654" endtime="20210823 15:46:16.654"/>
</kw>
<status status="PASS" starttime="20210823 15:46:16.611" endtime="20210823 15:46:16.654"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:16.669" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 15:46:16.655" endtime="20210823 15:46:16.669"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:16.669" endtime="20210823 15:46:17.755"/>
</kw>
<status status="PASS" starttime="20210823 15:46:16.655" endtime="20210823 15:46:17.757"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 15:46:17.762" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:46:17.759" endtime="20210823 15:46:17.762"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:46:17.764" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:46:17.763" endtime="20210823 15:46:17.764"/>
</kw>
<status status="PASS" starttime="20210823 15:46:17.758" endtime="20210823 15:46:17.764"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:46:17.766" level="INFO">Fills the text 'qatestuser@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 15:46:17.765" endtime="20210823 15:46:18.795"/>
</kw>
<status status="PASS" starttime="20210823 15:46:17.764" endtime="20210823 15:46:18.795"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:18.798" endtime="20210823 15:46:19.840"/>
</kw>
<status status="PASS" starttime="20210823 15:46:18.796" endtime="20210823 15:46:19.841"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:19.844" endtime="20210823 15:46:20.901"/>
</kw>
<status status="PASS" starttime="20210823 15:46:19.842" endtime="20210823 15:46:20.902"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:46:20.904" endtime="20210823 15:46:20.908"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:20.922" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 15:46:20.908" endtime="20210823 15:46:20.923"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:20.946" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 15:46:20.923" endtime="20210823 15:46:20.946"/>
</kw>
<status status="PASS" starttime="20210823 15:46:20.903" endtime="20210823 15:46:20.947"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:20.959" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210823 15:46:20.948" endtime="20210823 15:46:20.959"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:20.959" endtime="20210823 15:46:22.018"/>
</kw>
<status status="PASS" starttime="20210823 15:46:20.947" endtime="20210823 15:46:22.018"/>
</kw>
<kw name="And Get Logged In User Name" library="user_profile_keywords">
<doc>This keyword fetches the name of the user</doc>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>selector=${user_profile_user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:22.047" level="INFO">${username} = qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:22.020" endtime="20210823 15:46:22.047"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:46:22.048" level="INFO">${username} = qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:22.047" endtime="20210823 15:46:22.048"/>
</kw>
<status status="PASS" starttime="20210823 15:46:22.019" endtime="20210823 15:46:22.048"/>
</kw>
<kw name="And Validate User Profile Url" library="user_profile_keywords">
<doc>This keyword validates the user profile url</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 15:46:22.051" level="INFO">${url} = https://qa-task.backbasecloud.com/profile/qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:22.049" endtime="20210823 15:46:22.051"/>
</kw>
<kw name="Should End With" library="BuiltIn">
<arg>${url}</arg>
<arg>profile/${username}</arg>
<arg>message=User profile url is not navigated properly.</arg>
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<status status="PASS" starttime="20210823 15:46:22.051" endtime="20210823 15:46:22.052"/>
</kw>
<status status="PASS" starttime="20210823 15:46:22.048" endtime="20210823 15:46:22.052"/>
</kw>
<kw name="Then Open My Posts" library="user_profile_keywords">
<doc>This Keyword Ensures thet My posts are open</doc>
<kw name="Click" library="Browser">
<arg>selector=${user_profile_my_posts_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:22.053" endtime="20210823 15:46:23.091"/>
</kw>
<status status="PASS" starttime="20210823 15:46:22.052" endtime="20210823 15:46:23.092"/>
</kw>
<kw name="And Read First Article From User Profile" library="articles_keywords">
<doc>This keyword Open first existing article</doc>
<kw name="Get Text" library="Browser">
<var>${art_title}</var>
<arg>selector=${first_art_title}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:23.140" level="INFO">${art_title} = Test</msg>
<status status="PASS" starttime="20210823 15:46:23.094" endtime="20210823 15:46:23.140"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${first_art_read_more_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:23.140" endtime="20210823 15:46:24.180"/>
</kw>
<status status="PASS" starttime="20210823 15:46:23.093" endtime="20210823 15:46:24.181"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210823 15:46:24.184" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210823 15:46:24.183" endtime="20210823 15:46:24.184"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:46:24.184" endtime="20210823 15:46:24.188"/>
</kw>
<status status="PASS" starttime="20210823 15:46:24.182" endtime="20210823 15:46:24.188"/>
</kw>
<kw name="Then And Verify Edit Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Edit Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:24.205" level="INFO">Wait for Element with selector: (//a[contains(@class,'btn btn-sm')])[2]</msg>
<status status="PASS" starttime="20210823 15:46:24.189" endtime="20210823 15:46:24.205"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${edit_article}</var>
<arg>selector=${edit_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Edit Article</arg>
<arg>message=Edit Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:24.228" level="INFO">${edit_article} =  Edit Article</msg>
<status status="PASS" starttime="20210823 15:46:24.206" endtime="20210823 15:46:24.228"/>
</kw>
<status status="PASS" starttime="20210823 15:46:24.189" endtime="20210823 15:46:24.228"/>
</kw>
<kw name="And Click On Edit Article Button" library="articles_keywords">
<doc>This keywor clicks on Edit Article Button</doc>
<kw name="Click" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:24.229" endtime="20210823 15:46:25.264"/>
</kw>
<status status="PASS" starttime="20210823 15:46:24.229" endtime="20210823 15:46:25.264"/>
</kw>
<kw name="Then Verify Edit Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword verifies that we are on Edit Article page</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210823 15:46:25.267" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210823 15:46:25.267" endtime="20210823 15:46:25.267"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=editor/${article_title}</arg>
<arg>message=Navigation unsuccessful to edit article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:46:25.267" endtime="20210823 15:46:25.271"/>
</kw>
<status status="PASS" starttime="20210823 15:46:25.265" endtime="20210823 15:46:25.271"/>
</kw>
<kw name="And Update Article Body" library="articles_keywords">
<arg>${updated_txt}</arg>
<doc>This keyword update body of the article</doc>
<kw name="Clear Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:25.273" endtime="20210823 15:46:26.314"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<arg>txt=${updated_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:46:26.316" level="INFO">Fills the text 'Test Article updated' in the given field.</msg>
<status status="PASS" starttime="20210823 15:46:26.315" endtime="20210823 15:46:27.344"/>
</kw>
<kw name="Click Publish Article Button" library="articles_keywords">
<doc>This keyword clicks on the publish article button</doc>
<kw name="Click" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:27.346" endtime="20210823 15:46:28.392"/>
</kw>
<status status="PASS" starttime="20210823 15:46:27.345" endtime="20210823 15:46:28.393"/>
</kw>
<status status="PASS" starttime="20210823 15:46:25.272" endtime="20210823 15:46:28.393"/>
</kw>
<kw name="And Validate Updated Article" library="articles_keywords">
<arg>${updated_txt}</arg>
<doc>This keyword validates that the article has been updated correctly</doc>
<kw name="Get Text" library="Browser">
<arg>selector=${updated_art_body_txt}</arg>
<arg>assertion_operator=equal</arg>
<arg>assertion_expected=${updated_txt}</arg>
<arg>message=Unable to Update article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:28.396" endtime="20210823 15:46:28.427"/>
</kw>
<status status="PASS" starttime="20210823 15:46:28.394" endtime="20210823 15:46:28.428"/>
</kw>
<doc>This Test Case updates an existing article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<status status="PASS" starttime="20210823 15:46:12.964" endtime="20210823 15:46:28.428"/>
</test>
<test id="s1-s2-t3" name="Delete Existing Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20210823 15:46:28.510" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/63ca9d7e-bc53-4589-a022-8f42d1400f8d"}</msg>
<msg timestamp="20210823 15:46:29.073" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/63ca9d7e-bc53-4589-a022-8f42d1400f8d"}</msg>
<status status="PASS" starttime="20210823 15:46:28.507" endtime="20210823 15:46:29.087"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 15:46:29.091" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 15:46:29.088" endtime="20210823 15:46:29.091"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 15:46:29.093" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 15:46:29.148" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 15:46:29.148" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 15:46:29.092" endtime="20210823 15:46:29.148"/>
</kw>
<status status="PASS" starttime="20210823 15:46:29.091" endtime="20210823 15:46:29.148"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 15:46:32.411" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 15:46:29.148" endtime="20210823 15:46:32.411"/>
</kw>
<status status="PASS" starttime="20210823 15:46:28.506" endtime="20210823 15:46:32.411"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:32.457" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 15:46:32.412" endtime="20210823 15:46:32.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:46:32.457" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 15:46:32.457" endtime="20210823 15:46:32.457"/>
</kw>
<status status="PASS" starttime="20210823 15:46:32.412" endtime="20210823 15:46:32.457"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:32.472" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 15:46:32.458" endtime="20210823 15:46:32.472"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:32.472" endtime="20210823 15:46:33.571"/>
</kw>
<status status="PASS" starttime="20210823 15:46:32.458" endtime="20210823 15:46:33.572"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 15:46:33.578" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:46:33.574" endtime="20210823 15:46:33.578"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:46:33.580" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:46:33.579" endtime="20210823 15:46:33.580"/>
</kw>
<status status="PASS" starttime="20210823 15:46:33.573" endtime="20210823 15:46:33.580"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:46:33.582" level="INFO">Fills the text 'qatestuser@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 15:46:33.582" endtime="20210823 15:46:34.610"/>
</kw>
<status status="PASS" starttime="20210823 15:46:33.581" endtime="20210823 15:46:34.611"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:34.612" endtime="20210823 15:46:35.650"/>
</kw>
<status status="PASS" starttime="20210823 15:46:34.612" endtime="20210823 15:46:35.651"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:35.653" endtime="20210823 15:46:36.717"/>
</kw>
<status status="PASS" starttime="20210823 15:46:35.652" endtime="20210823 15:46:36.718"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:46:36.719" endtime="20210823 15:46:36.725"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:36.739" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 15:46:36.725" endtime="20210823 15:46:36.739"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:36.762" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 15:46:36.739" endtime="20210823 15:46:36.762"/>
</kw>
<status status="PASS" starttime="20210823 15:46:36.718" endtime="20210823 15:46:36.762"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:36.774" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210823 15:46:36.763" endtime="20210823 15:46:36.774"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:36.775" endtime="20210823 15:46:37.839"/>
</kw>
<status status="PASS" starttime="20210823 15:46:36.763" endtime="20210823 15:46:37.839"/>
</kw>
<kw name="And Get Logged In User Name" library="user_profile_keywords">
<doc>This keyword fetches the name of the user</doc>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>selector=${user_profile_user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:37.865" level="INFO">${username} = qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:37.841" endtime="20210823 15:46:37.865"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:46:37.866" level="INFO">${username} = qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:37.865" endtime="20210823 15:46:37.866"/>
</kw>
<status status="PASS" starttime="20210823 15:46:37.840" endtime="20210823 15:46:37.866"/>
</kw>
<kw name="And Validate User Profile Url" library="user_profile_keywords">
<doc>This keyword validates the user profile url</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 15:46:37.869" level="INFO">${url} = https://qa-task.backbasecloud.com/profile/qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:37.867" endtime="20210823 15:46:37.869"/>
</kw>
<kw name="Should End With" library="BuiltIn">
<arg>${url}</arg>
<arg>profile/${username}</arg>
<arg>message=User profile url is not navigated properly.</arg>
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<status status="PASS" starttime="20210823 15:46:37.869" endtime="20210823 15:46:37.870"/>
</kw>
<status status="PASS" starttime="20210823 15:46:37.866" endtime="20210823 15:46:37.870"/>
</kw>
<kw name="Then Open My Posts" library="user_profile_keywords">
<doc>This Keyword Ensures thet My posts are open</doc>
<kw name="Click" library="Browser">
<arg>selector=${user_profile_my_posts_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:37.871" endtime="20210823 15:46:38.911"/>
</kw>
<status status="PASS" starttime="20210823 15:46:37.870" endtime="20210823 15:46:38.911"/>
</kw>
<kw name="And Check Count Of Articles" library="articles_keywords">
<doc>This keyword checks the count of Articles</doc>
<kw name="Get Element Count" library="Browser">
<var>${article_count}</var>
<arg>selector=${articles_list}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210823 15:46:38.929" level="INFO">${article_count} = 6</msg>
<status status="PASS" starttime="20210823 15:46:38.913" endtime="20210823 15:46:38.929"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${article_count}</arg>
<arg>${article_count}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:46:38.930" level="INFO">${article_count} = 6</msg>
<status status="PASS" starttime="20210823 15:46:38.929" endtime="20210823 15:46:38.930"/>
</kw>
<status status="PASS" starttime="20210823 15:46:38.912" endtime="20210823 15:46:38.930"/>
</kw>
<kw name="And Read First Article From User Profile" library="articles_keywords">
<doc>This keyword Open first existing article</doc>
<kw name="Get Text" library="Browser">
<var>${art_title}</var>
<arg>selector=${first_art_title}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:38.954" level="INFO">${art_title} = Test</msg>
<status status="PASS" starttime="20210823 15:46:38.931" endtime="20210823 15:46:38.954"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${first_art_read_more_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:38.954" endtime="20210823 15:46:40.003"/>
</kw>
<status status="PASS" starttime="20210823 15:46:38.930" endtime="20210823 15:46:40.004"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210823 15:46:40.006" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210823 15:46:40.006" endtime="20210823 15:46:40.006"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:46:40.006" endtime="20210823 15:46:40.010"/>
</kw>
<status status="PASS" starttime="20210823 15:46:40.005" endtime="20210823 15:46:40.010"/>
</kw>
<kw name="Then Verify Delete Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Delete Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:40.026" level="INFO">Wait for Element with selector: (//button[contains(text(),'Delete Article')])[2]</msg>
<status status="PASS" starttime="20210823 15:46:40.011" endtime="20210823 15:46:40.026"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${delete_article}</var>
<arg>selector=${delete_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Delete Article</arg>
<arg>message=Delete Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:40.053" level="INFO">${delete_article} =  Delete Article</msg>
<status status="PASS" starttime="20210823 15:46:40.027" endtime="20210823 15:46:40.053"/>
</kw>
<status status="PASS" starttime="20210823 15:46:40.010" endtime="20210823 15:46:40.053"/>
</kw>
<kw name="And Click On Delete Article Button" library="articles_keywords">
<doc>This keywor clicks on Delete Article Button</doc>
<kw name="Click" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:40.054" endtime="20210823 15:46:41.108"/>
</kw>
<status status="PASS" starttime="20210823 15:46:40.053" endtime="20210823 15:46:41.109"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:41.126" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210823 15:46:41.111" endtime="20210823 15:46:41.126"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:41.126" endtime="20210823 15:46:42.184"/>
</kw>
<status status="PASS" starttime="20210823 15:46:41.110" endtime="20210823 15:46:42.184"/>
</kw>
<kw name="And Check Number Of Articles After Deletion" library="articles_keywords">
<doc>his keyword verifies that the count of articles reduced by after after deleting an article</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${count_after_del}</var>
<arg>${article_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210823 15:46:42.187" level="INFO">${count_after_del} = 5</msg>
<status status="PASS" starttime="20210823 15:46:42.187" endtime="20210823 15:46:42.187"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${article_count_After_del}</var>
<arg>selector=${articles_list}</arg>
<arg>assertion_operator=equal</arg>
<arg>expected_value=${count_after_del}</arg>
<arg>message=Unable to delete the Articles.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210823 15:46:42.206" level="INFO">${article_count_After_del} = 5</msg>
<status status="PASS" starttime="20210823 15:46:42.188" endtime="20210823 15:46:42.206"/>
</kw>
<status status="PASS" starttime="20210823 15:46:42.185" endtime="20210823 15:46:42.206"/>
</kw>
<doc>This test case deletes the existing article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<status status="PASS" starttime="20210823 15:46:28.498" endtime="20210823 15:46:42.206"/>
</test>
<test id="s1-s2-t4" name="Delete Article Button Not Shown To Other Author">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20210823 15:46:42.294" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/10e7cb8c-f669-4a4b-acad-0355b4d35a6c"}</msg>
<msg timestamp="20210823 15:46:42.999" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/10e7cb8c-f669-4a4b-acad-0355b4d35a6c"}</msg>
<status status="PASS" starttime="20210823 15:46:42.292" endtime="20210823 15:46:42.999"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 15:46:43.004" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 15:46:42.999" endtime="20210823 15:46:43.004"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 15:46:43.008" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 15:46:43.062" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 15:46:43.063" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 15:46:43.006" endtime="20210823 15:46:43.063"/>
</kw>
<status status="PASS" starttime="20210823 15:46:43.005" endtime="20210823 15:46:43.063"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 15:46:46.511" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 15:46:43.064" endtime="20210823 15:46:46.512"/>
</kw>
<status status="PASS" starttime="20210823 15:46:42.291" endtime="20210823 15:46:46.512"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:46.555" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 15:46:46.514" endtime="20210823 15:46:46.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:46:46.557" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 15:46:46.556" endtime="20210823 15:46:46.557"/>
</kw>
<status status="PASS" starttime="20210823 15:46:46.513" endtime="20210823 15:46:46.557"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:46.569" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 15:46:46.558" endtime="20210823 15:46:46.570"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:46.570" endtime="20210823 15:46:47.649"/>
</kw>
<status status="PASS" starttime="20210823 15:46:46.558" endtime="20210823 15:46:47.650"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 15:46:47.655" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:46:47.651" endtime="20210823 15:46:47.655"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:46:47.656" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:46:47.655" endtime="20210823 15:46:47.656"/>
</kw>
<status status="PASS" starttime="20210823 15:46:47.651" endtime="20210823 15:46:47.656"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:46:47.658" level="INFO">Fills the text 'qatestuser@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 15:46:47.657" endtime="20210823 15:46:48.690"/>
</kw>
<status status="PASS" starttime="20210823 15:46:47.656" endtime="20210823 15:46:48.691"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:48.693" endtime="20210823 15:46:49.729"/>
</kw>
<status status="PASS" starttime="20210823 15:46:48.692" endtime="20210823 15:46:49.730"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:49.731" endtime="20210823 15:46:50.782"/>
</kw>
<status status="PASS" starttime="20210823 15:46:49.730" endtime="20210823 15:46:50.782"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:46:50.784" endtime="20210823 15:46:50.787"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:50.804" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 15:46:50.787" endtime="20210823 15:46:50.804"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:50.826" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 15:46:50.804" endtime="20210823 15:46:50.827"/>
</kw>
<status status="PASS" starttime="20210823 15:46:50.783" endtime="20210823 15:46:50.827"/>
</kw>
<kw name="And Get Signed In User Name" library="home_page_keywords">
<doc>This keyword fetches the name of the user</doc>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>selector=${username_user_profile_txt}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:50.850" level="INFO">${username} = qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:50.828" endtime="20210823 15:46:50.850"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:46:50.850" level="INFO">${username} = qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:50.850" endtime="20210823 15:46:50.850"/>
</kw>
<status status="PASS" starttime="20210823 15:46:50.827" endtime="20210823 15:46:50.851"/>
</kw>
<kw name="Then Click On Global Feed" library="home_page_keywords">
<doc>This keyword clicks on global feed text</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${global_feed_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:46:50.861" level="INFO">Wait for Element with selector: //a[contains(text(),'Global Feed')]</msg>
<status status="PASS" starttime="20210823 15:46:50.851" endtime="20210823 15:46:50.862"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${global_feed_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:50.862" endtime="20210823 15:46:51.919"/>
</kw>
<status status="PASS" starttime="20210823 15:46:50.851" endtime="20210823 15:46:51.919"/>
</kw>
<kw name="And Navigate To Other Author's Article" library="articles_keywords">
<doc>This keyword navigates to the article from other user</doc>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>11</value>
<iter>
<var name="${index}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:51.923" level="INFO">${author} = (//a[@class='author'])[1]</msg>
<status status="PASS" starttime="20210823 15:46:51.922" endtime="20210823 15:46:51.923"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:51.972" level="INFO">${author_txt} = qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:51.923" endtime="20210823 15:46:51.972"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:51.973" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[1]</msg>
<status status="PASS" starttime="20210823 15:46:51.973" endtime="20210823 15:46:51.973"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 15:46:51.973" endtime="20210823 15:46:51.974"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 15:46:51.974" endtime="20210823 15:46:51.974"/>
</kw>
<status status="PASS" starttime="20210823 15:46:51.921" endtime="20210823 15:46:51.974"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:51.975" level="INFO">${author} = (//a[@class='author'])[2]</msg>
<status status="PASS" starttime="20210823 15:46:51.975" endtime="20210823 15:46:51.975"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:51.996" level="INFO">${author_txt} = qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:51.975" endtime="20210823 15:46:51.996"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:51.996" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[2]</msg>
<status status="PASS" starttime="20210823 15:46:51.996" endtime="20210823 15:46:51.996"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 15:46:51.997" endtime="20210823 15:46:51.997"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 15:46:51.997" endtime="20210823 15:46:51.998"/>
</kw>
<status status="PASS" starttime="20210823 15:46:51.975" endtime="20210823 15:46:51.998"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:51.998" level="INFO">${author} = (//a[@class='author'])[3]</msg>
<status status="PASS" starttime="20210823 15:46:51.998" endtime="20210823 15:46:51.998"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:52.019" level="INFO">${author_txt} = qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:51.999" endtime="20210823 15:46:52.019"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:52.020" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[3]</msg>
<status status="PASS" starttime="20210823 15:46:52.019" endtime="20210823 15:46:52.020"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 15:46:52.020" endtime="20210823 15:46:52.020"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 15:46:52.021" endtime="20210823 15:46:52.021"/>
</kw>
<status status="PASS" starttime="20210823 15:46:51.998" endtime="20210823 15:46:52.021"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:52.022" level="INFO">${author} = (//a[@class='author'])[4]</msg>
<status status="PASS" starttime="20210823 15:46:52.021" endtime="20210823 15:46:52.022"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:52.054" level="INFO">${author_txt} = qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:52.022" endtime="20210823 15:46:52.055"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:52.055" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[4]</msg>
<status status="PASS" starttime="20210823 15:46:52.055" endtime="20210823 15:46:52.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 15:46:52.055" endtime="20210823 15:46:52.056"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 15:46:52.056" endtime="20210823 15:46:52.056"/>
</kw>
<status status="PASS" starttime="20210823 15:46:52.021" endtime="20210823 15:46:52.057"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:52.057" level="INFO">${author} = (//a[@class='author'])[5]</msg>
<status status="PASS" starttime="20210823 15:46:52.057" endtime="20210823 15:46:52.057"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:52.077" level="INFO">${author_txt} = qatestuser</msg>
<status status="PASS" starttime="20210823 15:46:52.057" endtime="20210823 15:46:52.077"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:52.078" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[5]</msg>
<status status="PASS" starttime="20210823 15:46:52.077" endtime="20210823 15:46:52.078"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 15:46:52.078" endtime="20210823 15:46:52.078"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210823 15:46:52.078" endtime="20210823 15:46:52.079"/>
</kw>
<status status="PASS" starttime="20210823 15:46:52.057" endtime="20210823 15:46:52.079"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:52.080" level="INFO">${author} = (//a[@class='author'])[6]</msg>
<status status="PASS" starttime="20210823 15:46:52.079" endtime="20210823 15:46:52.080"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:52.100" level="INFO">${author_txt} = bbloggerapikyixjv</msg>
<status status="PASS" starttime="20210823 15:46:52.080" endtime="20210823 15:46:52.100"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:46:52.100" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[6]</msg>
<status status="PASS" starttime="20210823 15:46:52.100" endtime="20210823 15:46:52.100"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Hover" library="Browser">
<arg>selector=${art_preview}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Moves the virtual mouse and scrolls to the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:52.101" endtime="20210823 15:46:53.154"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${art_preview}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:53.154" endtime="20210823 15:46:54.199"/>
</kw>
<status status="PASS" starttime="20210823 15:46:52.101" endtime="20210823 15:46:54.200"/>
</kw>
<status status="PASS" starttime="20210823 15:46:52.101" endtime="20210823 15:46:54.200"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210823 15:46:54.201" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210823 15:46:54.200" endtime="20210823 15:46:54.203"/>
</kw>
<status status="PASS" starttime="20210823 15:46:52.079" endtime="20210823 15:46:54.203"/>
</iter>
<status status="PASS" starttime="20210823 15:46:51.921" endtime="20210823 15:46:54.204"/>
</for>
<status status="PASS" starttime="20210823 15:46:51.920" endtime="20210823 15:46:54.204"/>
</kw>
<kw name="And Validate Delete Article Option Is Not Available" library="articles_keywords">
<doc>This keyword validates that delete article option is not available for other users</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:46:54.205" endtime="20210823 15:46:54.208"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>selector=${follow_user_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Follow</arg>
<arg>message=Follow User button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:54.208" endtime="20210823 15:46:54.229"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<arg>state=visible</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=None</arg>
<arg>message=Other user can also delete the article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:46:54.229" endtime="20210823 15:46:54.347"/>
</kw>
<status status="PASS" starttime="20210823 15:46:54.204" endtime="20210823 15:46:54.348"/>
</kw>
<doc>This test case checks Delete Article button shown to article's author</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<tag>TESTING</tag>
<status status="PASS" starttime="20210823 15:46:42.283" endtime="20210823 15:46:54.348"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20210823 15:46:55.396" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210823 15:46:54.420" endtime="20210823 15:46:55.396"/>
</kw>
<status status="PASS" starttime="20210823 15:45:53.957" endtime="20210823 15:46:55.396"/>
</suite>
<suite id="s1-s3" name="Home Page Test Api" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/home_page_test_api.robot">
<test id="s1-s3-t1" name="Get List Of Tags">
<kw name="Fetch All Tags" library="home_page_keywords">
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This keyword fetches all the tags</doc>
<kw name="Get Tags" library="Tags">
<var>${tags_list}</var>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This function fetches the tags available
:param auth_user: user name for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns a dictionary of contains all the tags</doc>
<msg timestamp="20210823 15:46:55.620" level="INFO">${tags_list} = {'tags': ['matrix', 'capacitor', 'card', 'interface', 'protocol', 'firewall', 'bus', 'pixel', 'circuit', 'alarm', 'system', 'driver', 'array', 'port', 'panel', 'application', 'sensor', 'hard drive', '...</msg>
<status status="PASS" starttime="20210823 15:46:55.482" endtime="20210823 15:46:55.621"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${tags_list['tags']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210823 15:46:55.623" level="INFO">Length is 792</msg>
<status status="PASS" starttime="20210823 15:46:55.621" endtime="20210823 15:46:55.623"/>
</kw>
<status status="PASS" starttime="20210823 15:46:55.480" endtime="20210823 15:46:55.623"/>
</kw>
<doc>This test case will fetch the list of tags</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 15:46:55.473" endtime="20210823 15:46:55.623"/>
</test>
<status status="PASS" starttime="20210823 15:46:55.408" endtime="20210823 15:46:55.626"/>
</suite>
<suite id="s1-s4" name="Home Page Test Gui" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/home_page_test_gui.robot">
<test id="s1-s4-t1" name="Validate Home Page">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20210823 15:46:55.686" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/090d5906-d43d-493c-ad76-af36245eeb9f"}</msg>
<msg timestamp="20210823 15:46:56.228" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/090d5906-d43d-493c-ad76-af36245eeb9f"}</msg>
<status status="PASS" starttime="20210823 15:46:55.683" endtime="20210823 15:46:56.229"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 15:46:56.232" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 15:46:56.229" endtime="20210823 15:46:56.233"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 15:46:56.237" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 15:46:56.263" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 15:46:56.263" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 15:46:56.235" endtime="20210823 15:46:56.264"/>
</kw>
<status status="PASS" starttime="20210823 15:46:56.233" endtime="20210823 15:46:56.264"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 15:46:59.377" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 15:46:56.264" endtime="20210823 15:46:59.378"/>
</kw>
<status status="PASS" starttime="20210823 15:46:55.682" endtime="20210823 15:46:59.378"/>
</kw>
<kw name="Then Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:46:59.426" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 15:46:59.380" endtime="20210823 15:46:59.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:46:59.427" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 15:46:59.427" endtime="20210823 15:46:59.427"/>
</kw>
<status status="PASS" starttime="20210823 15:46:59.379" endtime="20210823 15:46:59.427"/>
</kw>
<kw name="And Validate Tags are present" library="home_page_keywords">
<doc>This keyword validates that the tags are present in the homepage</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_tags}</var>
<arg>selector=${homepage_tags}</arg>
<arg>assertion_operator=greater than</arg>
<arg>expected_value=1</arg>
<arg>message=Tags aren't present in homepage</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210823 15:46:59.886" level="INFO">${count_tags} = 792</msg>
<status status="PASS" starttime="20210823 15:46:59.428" endtime="20210823 15:46:59.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_tags}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:46:59.887" level="INFO">792</msg>
<status status="PASS" starttime="20210823 15:46:59.887" endtime="20210823 15:46:59.887"/>
</kw>
<status status="PASS" starttime="20210823 15:46:59.428" endtime="20210823 15:46:59.887"/>
</kw>
<kw name="And List Of Articles Is Present" library="home_page_keywords">
<doc>This keyword checks that global feed articles are present.</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_articles}</var>
<arg>selector=${global_feed_articles}</arg>
<arg>assertion_operator=&gt;=</arg>
<arg>expected_value=1</arg>
<arg>message=Articles aren't present in Global Feed</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210823 15:47:00.032" level="INFO">${count_articles} = 10</msg>
<status status="PASS" starttime="20210823 15:46:59.889" endtime="20210823 15:47:00.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_articles}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:47:00.033" level="INFO">10</msg>
<status status="PASS" starttime="20210823 15:47:00.032" endtime="20210823 15:47:00.033"/>
</kw>
<status status="PASS" starttime="20210823 15:46:59.888" endtime="20210823 15:47:00.033"/>
</kw>
<kw name="And Validate Pagination On Home Page" library="home_page_keywords">
<doc>This keyword checks for the list of pagination of articles</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_pages}</var>
<arg>selector=${article_pagination}</arg>
<arg>assertion_operator=&gt;=</arg>
<arg>expected_value=1</arg>
<arg>message=Feed Article Pagination is not Present.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210823 15:47:00.198" level="INFO">${count_pages} = 271</msg>
<status status="PASS" starttime="20210823 15:47:00.035" endtime="20210823 15:47:00.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_pages}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:47:00.198" level="INFO">271</msg>
<status status="PASS" starttime="20210823 15:47:00.198" endtime="20210823 15:47:00.199"/>
</kw>
<status status="PASS" starttime="20210823 15:47:00.034" endtime="20210823 15:47:00.199"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<tag>HOME_PAGE</tag>
<status status="PASS" starttime="20210823 15:46:55.676" endtime="20210823 15:47:00.199"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20210823 15:47:00.649" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210823 15:47:00.337" endtime="20210823 15:47:00.649"/>
</kw>
<status status="PASS" starttime="20210823 15:46:55.634" endtime="20210823 15:47:00.649"/>
</suite>
<suite id="s1-s5" name="Login User Test Api" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/login_user_test_api.robot">
<test id="s1-s5-t1" name="Authenticate Existing User">
<kw name="Authenticate A User" library="login_user_keywords">
<arg>${login_emailId}</arg>
<arg>${login_pwd}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This keyword will authenticate the user using Basic Auth</doc>
<kw name="User Auth" library="Users">
<var>${auth_user_data}</var>
<arg>${email}</arg>
<arg>${password}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>The function will authenticate the user using Basic Auth
:param email: Email id of the user
:param password: password of the user
:param auth_user: username for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns a dictionary containing the jwt token</doc>
<msg timestamp="20210823 15:47:00.949" level="INFO">${auth_user_data} = {'user': {'username': 'qatestuser', 'email': 'qatestuser@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjM5NTM4ZjcyZWQwMjcwNmFkM2E4YiIsInVzZXJuYW1lIjoicWF0ZXN0dXNlciIsImV4cCI6...</msg>
<status status="PASS" starttime="20210823 15:47:00.690" endtime="20210823 15:47:00.949"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${auth_user_data}</arg>
<arg>${auth_user_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:47:00.951" level="INFO">${auth_user_data} = {'user': {'username': 'qatestuser', 'email': 'qatestuser@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjM5NTM4ZjcyZWQwMjcwNmFkM2E4YiIsInVzZXJuYW1lIjoicWF0ZXN0dXNlciIsImV4cCI6...</msg>
<status status="PASS" starttime="20210823 15:47:00.949" endtime="20210823 15:47:00.951"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${auth_user_data}</arg>
<arg>msg=Unable to authenticate user</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210823 15:47:00.952" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210823 15:47:00.951" endtime="20210823 15:47:00.952"/>
</kw>
<status status="PASS" starttime="20210823 15:47:00.689" endtime="20210823 15:47:00.952"/>
</kw>
<kw name="Validate Authenticated User" library="login_user_keywords">
<doc>This keyword validates that authenticated user returns the correct data</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${auth_user_data['user']}</arg>
<arg>key=email</arg>
<arg>msg=email is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:47:00.953" endtime="20210823 15:47:00.955"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${auth_user_data['user']}</arg>
<arg>key=username</arg>
<arg>msg=username is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:47:00.955" endtime="20210823 15:47:00.957"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${auth_user_data['user']}</arg>
<arg>key=token</arg>
<arg>msg=jwt token is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:47:00.957" endtime="20210823 15:47:00.959"/>
</kw>
<status status="PASS" starttime="20210823 15:47:00.952" endtime="20210823 15:47:00.959"/>
</kw>
<doc>This test case will authenticate the user</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 15:47:00.685" endtime="20210823 15:47:00.959"/>
</test>
<test id="s1-s5-t2" name="Register New User">
<kw name="New User Registration" library="login_user_keywords">
<arg>${login_pwd}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This keyword registers a new user</doc>
<kw name="Generate Random String" library="String">
<var>${login_username}</var>
<arg>12</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210823 15:47:00.968" level="INFO">${login_username} = pdzgcrggnoni</msg>
<status status="PASS" starttime="20210823 15:47:00.968" endtime="20210823 15:47:00.968"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${login_emailId}</var>
<arg>SEPARATOR=</arg>
<arg>${login_username}</arg>
<arg>@gmail.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:47:00.969" level="INFO">${login_emailId} = pdzgcrggnoni@gmail.com</msg>
<status status="PASS" starttime="20210823 15:47:00.968" endtime="20210823 15:47:00.969"/>
</kw>
<kw name="User Registration" library="Users">
<var>${registered_user}</var>
<arg>${login_username}</arg>
<arg>${login_emailId}</arg>
<arg>${login_pwd}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This functions registers a new user
:param username: Username to be registered
:param email: email to be registered
:param password: pass for the new registration
:param auth_user: username for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns a dictionary containing the data about registered user.</doc>
<msg timestamp="20210823 15:47:01.194" level="INFO">${registered_user} = {'user': {'username': 'pdzgcrggnoni', 'email': 'pdzgcrggnoni@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjNhNmQ1ZjcyZWQwMjcwNmFkM2E5OCIsInVzZXJuYW1lIjoicGR6Z2NyZ2dub25pIiwi...</msg>
<status status="PASS" starttime="20210823 15:47:00.969" endtime="20210823 15:47:01.194"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${registered_user}</arg>
<arg>${registered_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210823 15:47:01.195" level="INFO">${registered_user} = {'user': {'username': 'pdzgcrggnoni', 'email': 'pdzgcrggnoni@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjNhNmQ1ZjcyZWQwMjcwNmFkM2E5OCIsInVzZXJuYW1lIjoicGR6Z2NyZ2dub25pIiwi...</msg>
<status status="PASS" starttime="20210823 15:47:01.194" endtime="20210823 15:47:01.195"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${registered_user}</arg>
<arg>msg=Unable to register the user</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210823 15:47:01.196" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210823 15:47:01.195" endtime="20210823 15:47:01.196"/>
</kw>
<status status="PASS" starttime="20210823 15:47:00.967" endtime="20210823 15:47:01.196"/>
</kw>
<kw name="Validate Registered User" library="login_user_keywords">
<doc>This keyword will validates that user is registered successfully</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${registered_user['user']}</arg>
<arg>key=email</arg>
<arg>msg=email is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:47:01.197" endtime="20210823 15:47:01.199"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${registered_user['user']}</arg>
<arg>key=username</arg>
<arg>msg=username is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:47:01.199" endtime="20210823 15:47:01.201"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${registered_user['user']}</arg>
<arg>key=token</arg>
<arg>msg=jwt token is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:47:01.201" endtime="20210823 15:47:01.203"/>
</kw>
<status status="PASS" starttime="20210823 15:47:01.196" endtime="20210823 15:47:01.204"/>
</kw>
<doc>This test case will register and validate a new user</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 15:47:00.963" endtime="20210823 15:47:01.204"/>
</test>
<test id="s1-s5-t3" name="Get Current Signed In User">
<kw name="Get Current Active User" library="login_user_keywords">
<arg>${login_emailId}</arg>
<arg>${login_pwd}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This keyword will return current user</doc>
<kw name="Get Current User" library="Users">
<var>${current_user}</var>
<arg>${email}</arg>
<arg>${password}</arg>
<arg>${auth_user}</arg>
<arg>${auth_pwd}</arg>
<doc>This function returns the details of authenticated current user
:param email: email id for login
:param password: login password
:param auth_user: username for Basic Auth
:param auth_pwd: Password for Basic Auth
:return: returns the details of the current user</doc>
<msg timestamp="20210823 15:47:01.705" level="INFO">${current_user} = {'user': {'username': 'qatestuser', 'email': 'qatestuser@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjM5NTM4ZjcyZWQwMjcwNmFkM2E4YiIsInVzZXJuYW1lIjoicWF0ZXN0dXNlciIsImV4cCI6...</msg>
<status status="PASS" starttime="20210823 15:47:01.210" endtime="20210823 15:47:01.705"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${current_user}</arg>
<arg>${current_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:47:01.706" level="INFO">${current_user} = {'user': {'username': 'qatestuser', 'email': 'qatestuser@gmail.com', 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMjM5NTM4ZjcyZWQwMjcwNmFkM2E4YiIsInVzZXJuYW1lIjoicWF0ZXN0dXNlciIsImV4cCI6...</msg>
<status status="PASS" starttime="20210823 15:47:01.706" endtime="20210823 15:47:01.706"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${current_user}</arg>
<arg>msg=Unable to fetch current User</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210823 15:47:01.707" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210823 15:47:01.707" endtime="20210823 15:47:01.707"/>
</kw>
<status status="PASS" starttime="20210823 15:47:01.209" endtime="20210823 15:47:01.707"/>
</kw>
<kw name="Validate Current User" library="login_user_keywords">
<doc>This keyword will validates that user details are fetched correctly</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${current_user['user']}</arg>
<arg>key=email</arg>
<arg>msg=email is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:47:01.708" endtime="20210823 15:47:01.711"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${current_user['user']}</arg>
<arg>key=username</arg>
<arg>msg=username is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:47:01.711" endtime="20210823 15:47:01.713"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>dictionary=${current_user['user']}</arg>
<arg>key=token</arg>
<arg>msg=jwt token is not present</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210823 15:47:01.713" endtime="20210823 15:47:01.715"/>
</kw>
<status status="PASS" starttime="20210823 15:47:01.708" endtime="20210823 15:47:01.716"/>
</kw>
<doc>This keyword will return the current user</doc>
<tag>API_TEST</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210823 15:47:01.206" endtime="20210823 15:47:01.716"/>
</test>
<status status="PASS" starttime="20210823 15:47:00.657" endtime="20210823 15:47:01.718"/>
</suite>
<suite id="s1-s6" name="Login User Test Gui" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/login_user_test_gui.robot">
<test id="s1-s6-t1" name="Sign In For Registered User">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20210823 15:47:01.744" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/289cea59-0a40-4786-b90d-9fefe569e15f"}</msg>
<msg timestamp="20210823 15:47:02.257" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/289cea59-0a40-4786-b90d-9fefe569e15f"}</msg>
<status status="PASS" starttime="20210823 15:47:01.743" endtime="20210823 15:47:02.257"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 15:47:02.260" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 15:47:02.257" endtime="20210823 15:47:02.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 15:47:02.272" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 15:47:02.349" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 15:47:02.349" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 15:47:02.269" endtime="20210823 15:47:02.349"/>
</kw>
<status status="PASS" starttime="20210823 15:47:02.261" endtime="20210823 15:47:02.350"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 15:47:05.632" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 15:47:02.350" endtime="20210823 15:47:05.633"/>
</kw>
<status status="PASS" starttime="20210823 15:47:01.742" endtime="20210823 15:47:05.633"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:47:05.675" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 15:47:05.635" endtime="20210823 15:47:05.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:47:05.676" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 15:47:05.675" endtime="20210823 15:47:05.676"/>
</kw>
<status status="PASS" starttime="20210823 15:47:05.634" endtime="20210823 15:47:05.676"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:47:05.689" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 15:47:05.677" endtime="20210823 15:47:05.689"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:47:05.689" endtime="20210823 15:47:06.772"/>
</kw>
<status status="PASS" starttime="20210823 15:47:05.676" endtime="20210823 15:47:06.773"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 15:47:06.779" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:47:06.775" endtime="20210823 15:47:06.779"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:47:06.780" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:47:06.779" endtime="20210823 15:47:06.780"/>
</kw>
<status status="PASS" starttime="20210823 15:47:06.773" endtime="20210823 15:47:06.780"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:47:06.783" level="INFO">Fills the text 'qatestuser@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 15:47:06.782" endtime="20210823 15:47:07.817"/>
</kw>
<status status="PASS" starttime="20210823 15:47:06.781" endtime="20210823 15:47:07.817"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:47:07.819" endtime="20210823 15:47:08.849"/>
</kw>
<status status="PASS" starttime="20210823 15:47:07.818" endtime="20210823 15:47:08.849"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:47:08.851" endtime="20210823 15:47:09.934"/>
</kw>
<status status="PASS" starttime="20210823 15:47:08.850" endtime="20210823 15:47:09.934"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:47:09.936" endtime="20210823 15:47:09.940"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:47:09.953" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 15:47:09.940" endtime="20210823 15:47:09.953"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:47:09.978" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 15:47:09.954" endtime="20210823 15:47:09.978"/>
</kw>
<status status="PASS" starttime="20210823 15:47:09.935" endtime="20210823 15:47:09.978"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<tag>LOGIN_USER</tag>
<status status="PASS" starttime="20210823 15:47:01.740" endtime="20210823 15:47:09.979"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20210823 15:47:10.300" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210823 15:47:10.058" endtime="20210823 15:47:10.301"/>
</kw>
<status status="PASS" starttime="20210823 15:47:01.721" endtime="20210823 15:47:10.301"/>
</suite>
<suite id="s1-s7" name="Register User Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/register_user_test.robot">
<test id="s1-s7-t1" name="Register A User">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20210823 15:47:10.356" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/b843b8a7-1c11-4c3b-8a36-c94868e679db"}</msg>
<msg timestamp="20210823 15:47:10.935" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/b843b8a7-1c11-4c3b-8a36-c94868e679db"}</msg>
<status status="PASS" starttime="20210823 15:47:10.355" endtime="20210823 15:47:10.935"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 15:47:10.938" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 15:47:10.936" endtime="20210823 15:47:10.939"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 15:47:10.941" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 15:47:10.969" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 15:47:10.969" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 15:47:10.940" endtime="20210823 15:47:10.969"/>
</kw>
<status status="PASS" starttime="20210823 15:47:10.939" endtime="20210823 15:47:10.970"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 15:47:14.332" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 15:47:10.970" endtime="20210823 15:47:14.333"/>
</kw>
<status status="PASS" starttime="20210823 15:47:10.354" endtime="20210823 15:47:14.333"/>
</kw>
<kw name="When Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:47:14.375" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 15:47:14.335" endtime="20210823 15:47:14.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:47:14.375" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 15:47:14.375" endtime="20210823 15:47:14.376"/>
</kw>
<status status="PASS" starttime="20210823 15:47:14.334" endtime="20210823 15:47:14.376"/>
</kw>
<kw name="And Open Sign Up Page" library="home_page_keywords">
<doc>This keyword will click on sign up link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_up_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:47:14.388" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign up')]</msg>
<status status="PASS" starttime="20210823 15:47:14.377" endtime="20210823 15:47:14.388"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_up_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:47:14.388" endtime="20210823 15:47:15.484"/>
</kw>
<status status="PASS" starttime="20210823 15:47:14.376" endtime="20210823 15:47:15.484"/>
</kw>
<kw name="Then Validate Register Url" library="register_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=register</arg>
<arg>message=Unable to open register page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 15:47:15.489" level="INFO">${url} = https://qa-task.backbasecloud.com/register</msg>
<status status="PASS" starttime="20210823 15:47:15.486" endtime="20210823 15:47:15.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:47:15.490" level="INFO">https://qa-task.backbasecloud.com/register</msg>
<status status="PASS" starttime="20210823 15:47:15.489" endtime="20210823 15:47:15.490"/>
</kw>
<status status="PASS" starttime="20210823 15:47:15.485" endtime="20210823 15:47:15.490"/>
</kw>
<kw name="And Enter User Name" library="register_user_keywords">
<doc>This keyword enter user name for sign up</doc>
<kw name="Generate Random String" library="String">
<var>${login_username}</var>
<arg>12</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210823 15:47:15.498" level="INFO">${login_username} = jgvemdiurxhd</msg>
<status status="PASS" starttime="20210823 15:47:15.492" endtime="20210823 15:47:15.498"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_username}</arg>
<arg>${login_username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:47:15.501" level="INFO">${login_username} = jgvemdiurxhd</msg>
<status status="PASS" starttime="20210823 15:47:15.499" endtime="20210823 15:47:15.501"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>selector=${username_txt_box}</arg>
<arg>txt=${login_username}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:47:15.503" level="INFO">Fills the text 'jgvemdiurxhd' in the given field.</msg>
<status status="PASS" starttime="20210823 15:47:15.502" endtime="20210823 15:47:16.539"/>
</kw>
<status status="PASS" starttime="20210823 15:47:15.491" endtime="20210823 15:47:16.539"/>
</kw>
<kw name="And Enter Email Id" library="register_user_keywords">
<doc>This keyword enter email id for sign up</doc>
<kw name="Catenate" library="BuiltIn">
<var>${login_emailId}</var>
<arg>SEPARATOR=</arg>
<arg>${login_username}</arg>
<arg>@gmail.com</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:47:16.542" level="INFO">${login_emailId} = jgvemdiurxhd@gmail.com</msg>
<status status="PASS" starttime="20210823 15:47:16.541" endtime="20210823 15:47:16.542"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>selector=${email_txt_box}</arg>
<arg>txt=${login_emailId}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:47:16.544" level="INFO">Fills the text 'jgvemdiurxhd@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 15:47:16.543" endtime="20210823 15:47:17.581"/>
</kw>
<status status="PASS" starttime="20210823 15:47:16.540" endtime="20210823 15:47:17.581"/>
</kw>
<kw name="And Enter Password" library="register_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign up</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:47:17.583" endtime="20210823 15:47:18.621"/>
</kw>
<status status="PASS" starttime="20210823 15:47:17.582" endtime="20210823 15:47:18.622"/>
</kw>
<kw name="Then Click Sign Up Button" library="register_user_keywords">
<doc>This keyword clicks on the sign up button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_up_button}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:47:18.624" endtime="20210823 15:47:19.671"/>
</kw>
<status status="PASS" starttime="20210823 15:47:18.623" endtime="20210823 15:47:19.671"/>
</kw>
<kw name="And Verify Sign Up" library="register_user_keywords">
<arg>${login_username}</arg>
<doc>This keyword verifies whether sign up is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email/Username already exists</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:47:19.673" endtime="20210823 15:47:19.676"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${user_xpath}</var>
<arg>SEPARATOR=</arg>
<arg>${signed_up_username}</arg>
<arg>${username}']</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210823 15:47:19.677" level="INFO">${user_xpath} = //a[@href='/profile/jgvemdiurxhd']</msg>
<status status="PASS" starttime="20210823 15:47:19.677" endtime="20210823 15:47:19.677"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${user_xpath}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:47:19.692" level="INFO">Wait for Element with selector: //a[@href='/profile/jgvemdiurxhd']</msg>
<status status="PASS" starttime="20210823 15:47:19.678" endtime="20210823 15:47:19.693"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${output}</var>
<arg>selector=${user_xpath}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${username}</arg>
<arg>message=Sign up unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:47:19.717" level="INFO">${output} = jgvemdiurxhd</msg>
<status status="PASS" starttime="20210823 15:47:19.693" endtime="20210823 15:47:19.717"/>
</kw>
<status status="PASS" starttime="20210823 15:47:19.672" endtime="20210823 15:47:19.718"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<tag>REGISTER_USER</tag>
<status status="PASS" starttime="20210823 15:47:10.351" endtime="20210823 15:47:19.718"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20210823 15:47:20.082" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210823 15:47:19.796" endtime="20210823 15:47:20.082"/>
</kw>
<status status="PASS" starttime="20210823 15:47:10.307" endtime="20210823 15:47:20.082"/>
</suite>
<suite id="s1-s8" name="Settings Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/settings_test.robot">
<test id="s1-s8-t1" name="Validate Settings Page">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20210823 15:47:20.182" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/41efdd6c-1dd7-49f5-8191-699eef72223d"}</msg>
<msg timestamp="20210823 15:47:20.934" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/41efdd6c-1dd7-49f5-8191-699eef72223d"}</msg>
<status status="PASS" starttime="20210823 15:47:20.179" endtime="20210823 15:47:20.934"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210823 15:47:20.938" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210823 15:47:20.935" endtime="20210823 15:47:20.938"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210823 15:47:20.948" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210823 15:47:21.025" level="INFO">Successfully created context. </msg>
<msg timestamp="20210823 15:47:21.025" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210823 15:47:20.946" endtime="20210823 15:47:21.025"/>
</kw>
<status status="PASS" starttime="20210823 15:47:20.938" endtime="20210823 15:47:21.025"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210823 15:47:24.084" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210823 15:47:21.026" endtime="20210823 15:47:24.084"/>
</kw>
<status status="PASS" starttime="20210823 15:47:20.178" endtime="20210823 15:47:24.085"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:47:24.127" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210823 15:47:24.086" endtime="20210823 15:47:24.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210823 15:47:24.127" level="INFO">conduit</msg>
<status status="PASS" starttime="20210823 15:47:24.127" endtime="20210823 15:47:24.128"/>
</kw>
<status status="PASS" starttime="20210823 15:47:24.085" endtime="20210823 15:47:24.128"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:47:24.140" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210823 15:47:24.129" endtime="20210823 15:47:24.140"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:47:24.140" endtime="20210823 15:47:25.232"/>
</kw>
<status status="PASS" starttime="20210823 15:47:24.128" endtime="20210823 15:47:25.233"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210823 15:47:25.240" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:47:25.235" endtime="20210823 15:47:25.240"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210823 15:47:25.241" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210823 15:47:25.240" endtime="20210823 15:47:25.241"/>
</kw>
<status status="PASS" starttime="20210823 15:47:25.234" endtime="20210823 15:47:25.242"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${login_emailId}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210823 15:47:25.245" level="INFO">Fills the text 'qatestuser@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210823 15:47:25.243" endtime="20210823 15:47:26.276"/>
</kw>
<status status="PASS" starttime="20210823 15:47:25.242" endtime="20210823 15:47:26.276"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${login_pwd}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:47:26.278" endtime="20210823 15:47:27.312"/>
</kw>
<status status="PASS" starttime="20210823 15:47:26.277" endtime="20210823 15:47:27.313"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:47:27.315" endtime="20210823 15:47:28.376"/>
</kw>
<status status="PASS" starttime="20210823 15:47:27.313" endtime="20210823 15:47:28.377"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:47:28.378" endtime="20210823 15:47:28.382"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:47:28.398" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210823 15:47:28.383" endtime="20210823 15:47:28.398"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210823 15:47:28.427" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210823 15:47:28.399" endtime="20210823 15:47:28.427"/>
</kw>
<status status="PASS" starttime="20210823 15:47:28.377" endtime="20210823 15:47:28.427"/>
</kw>
<kw name="Then Open Settings Page" library="home_page_keywords">
<doc>This keyword will open Settings page from home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${settings_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210823 15:47:28.442" level="INFO">Wait for Element with selector: //a[@href='/settings']</msg>
<status status="PASS" starttime="20210823 15:47:28.429" endtime="20210823 15:47:28.442"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${settings_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:47:28.442" endtime="20210823 15:47:29.506"/>
</kw>
<status status="PASS" starttime="20210823 15:47:28.428" endtime="20210823 15:47:29.506"/>
</kw>
<kw name="And Validate Settings Page Url" library="settings_keywords">
<doc>This keyword validates the url of settings page</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=settings</arg>
<arg>message=Unable to open settings page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210823 15:47:29.508" endtime="20210823 15:47:29.512"/>
</kw>
<status status="PASS" starttime="20210823 15:47:29.507" endtime="20210823 15:47:29.513"/>
</kw>
<kw name="And Validate Settings Title" library="settings_keywords">
<doc>This keyword validates title of the Settings page</doc>
<kw name="Get Text" library="Browser">
<arg>selector=${settings_title_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=Your Settings</arg>
<arg>message=Unable to open Settings Page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210823 15:47:29.514" endtime="20210823 15:47:29.537"/>
</kw>
<status status="PASS" starttime="20210823 15:47:29.513" endtime="20210823 15:47:29.537"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>GUI_TEST</tag>
<tag>SETTINGS</tag>
<status status="PASS" starttime="20210823 15:47:20.167" endtime="20210823 15:47:29.537"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20210823 15:47:29.915" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210823 15:47:29.616" endtime="20210823 15:47:29.915"/>
</kw>
<status status="PASS" starttime="20210823 15:47:20.091" endtime="20210823 15:47:29.915"/>
</suite>
<status status="PASS" starttime="20210823 15:45:52.052" endtime="20210823 15:47:29.924"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" skip="0">API_TEST</stat>
<stat pass="4" fail="0" skip="0">ARTICLES</stat>
<stat pass="14" fail="0" skip="0">FEATURE-ARTICLES</stat>
<stat pass="8" fail="0" skip="0">GUI_TEST</stat>
<stat pass="1" fail="0" skip="0">HOME_PAGE</stat>
<stat pass="1" fail="0" skip="0">LOGIN_USER</stat>
<stat pass="1" fail="0" skip="0">REGISTER_USER</stat>
<stat pass="1" fail="0" skip="0">SETTINGS</stat>
<stat pass="1" fail="0" skip="0">TESTING</stat>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Article Test Api">Tests.Article Test Api</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Article Test Gui">Tests.Article Test Gui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Home Page Test Api">Tests.Home Page Test Api</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Home Page Test Gui">Tests.Home Page Test Gui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="Login User Test Api">Tests.Login User Test Api</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Login User Test Gui">Tests.Login User Test Gui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Register User Test">Tests.Register User Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Settings Test">Tests.Settings Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
