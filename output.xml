<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1 (Python 3.8.5 on darwin)" generated="20210822 12:42:43.153" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests">
<suite id="s1-s1" name="Article Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/article_test.robot">
<test id="s1-s1-t1" name="Create New Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:42:44.351" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/877f73a0-1897-45e2-be63-d635fd570387"}</msg>
<msg timestamp="20210822 12:42:45.025" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/877f73a0-1897-45e2-be63-d635fd570387"}</msg>
<status status="PASS" starttime="20210822 12:42:44.350" endtime="20210822 12:42:45.026"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210822 12:42:45.035" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210822 12:42:45.026" endtime="20210822 12:42:45.035"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210822 12:42:45.039" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210822 12:42:45.125" level="INFO">Successfully created context. </msg>
<msg timestamp="20210822 12:42:45.125" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210822 12:42:45.037" endtime="20210822 12:42:45.125"/>
</kw>
<status status="PASS" starttime="20210822 12:42:45.036" endtime="20210822 12:42:45.125"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210822 12:42:48.381" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210822 12:42:45.126" endtime="20210822 12:42:48.382"/>
</kw>
<status status="PASS" starttime="20210822 12:42:44.349" endtime="20210822 12:42:48.382"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:42:48.440" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210822 12:42:48.384" endtime="20210822 12:42:48.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:42:48.441" level="INFO">conduit</msg>
<status status="PASS" starttime="20210822 12:42:48.441" endtime="20210822 12:42:48.441"/>
</kw>
<status status="PASS" starttime="20210822 12:42:48.383" endtime="20210822 12:42:48.441"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:42:48.459" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210822 12:42:48.442" endtime="20210822 12:42:48.459"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:42:48.459" endtime="20210822 12:42:49.550"/>
</kw>
<status status="PASS" starttime="20210822 12:42:48.442" endtime="20210822 12:42:49.551"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210822 12:42:49.555" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:42:49.552" endtime="20210822 12:42:49.555"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210822 12:42:49.556" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:42:49.555" endtime="20210822 12:42:49.556"/>
</kw>
<status status="PASS" starttime="20210822 12:42:49.551" endtime="20210822 12:42:49.556"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:42:49.558" level="INFO">Fills the text 'candidatex@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210822 12:42:49.557" endtime="20210822 12:42:50.600"/>
</kw>
<status status="PASS" starttime="20210822 12:42:49.557" endtime="20210822 12:42:50.601"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:42:50.603" endtime="20210822 12:42:51.641"/>
</kw>
<status status="PASS" starttime="20210822 12:42:50.602" endtime="20210822 12:42:51.641"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:42:51.642" endtime="20210822 12:42:52.697"/>
</kw>
<status status="PASS" starttime="20210822 12:42:51.642" endtime="20210822 12:42:52.697"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:42:52.699" endtime="20210822 12:42:52.702"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:42:52.722" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210822 12:42:52.703" endtime="20210822 12:42:52.723"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:42:52.752" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210822 12:42:52.723" endtime="20210822 12:42:52.752"/>
</kw>
<status status="PASS" starttime="20210822 12:42:52.698" endtime="20210822 12:42:52.752"/>
</kw>
<kw name="When Click On New Article Text" library="articles_keywords">
<doc>This keyword clicks on new article link in signed in page</doc>
<kw name="Click" library="Browser">
<arg>selector=${new_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:42:52.753" endtime="20210822 12:42:53.827"/>
</kw>
<status status="PASS" starttime="20210822 12:42:52.753" endtime="20210822 12:42:53.827"/>
</kw>
<kw name="And Validate New Article Page" library="articles_keywords">
<doc>This keyword verifies that page to create new article is open</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=editor</arg>
<arg>message=New article page url is not loaded</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:42:53.829" endtime="20210822 12:42:53.834"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:42:53.849" level="INFO">Wait for Element with selector: //button[contains(text(),'Publish Article')]</msg>
<status status="PASS" starttime="20210822 12:42:53.834" endtime="20210822 12:42:53.850"/>
</kw>
<status status="PASS" starttime="20210822 12:42:53.828" endtime="20210822 12:42:53.850"/>
</kw>
<kw name="Then Enter Article Title" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword enter title for the article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_title_txt_box}</arg>
<arg>txt=${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:42:53.852" level="INFO">Fills the text 'Test' in the given field.</msg>
<status status="PASS" starttime="20210822 12:42:53.851" endtime="20210822 12:42:54.887"/>
</kw>
<status status="PASS" starttime="20210822 12:42:53.850" endtime="20210822 12:42:54.887"/>
</kw>
<kw name="And Enter Article Description" library="articles_keywords">
<arg>${art_description}</arg>
<doc>This keyword enter description for article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_description_txt_box}</arg>
<arg>txt=${description}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:42:54.891" level="INFO">Fills the text 'test' in the given field.</msg>
<status status="PASS" starttime="20210822 12:42:54.889" endtime="20210822 12:42:55.935"/>
</kw>
<status status="PASS" starttime="20210822 12:42:54.888" endtime="20210822 12:42:55.936"/>
</kw>
<kw name="And Write Article Body" library="articles_keywords">
<arg>${art_body}</arg>
<doc>This keyword enter text in article body</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<arg>txt=${body_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:42:55.939" level="INFO">Fills the text 'Test Article' in the given field.</msg>
<status status="PASS" starttime="20210822 12:42:55.939" endtime="20210822 12:42:56.978"/>
</kw>
<status status="PASS" starttime="20210822 12:42:55.937" endtime="20210822 12:42:56.978"/>
</kw>
<kw name="And Enter Article Tag" library="articles_keywords">
<arg>${art_tag}</arg>
<doc>This keyword enter tags for the article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_tags_txt_box}</arg>
<arg>txt=${tag}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:42:56.981" level="INFO">Fills the text 'CRUD' in the given field.</msg>
<status status="PASS" starttime="20210822 12:42:56.980" endtime="20210822 12:42:58.022"/>
</kw>
<kw name="Keyboard Key" library="Browser">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20210822 12:42:58.022" endtime="20210822 12:42:59.035"/>
</kw>
<status status="PASS" starttime="20210822 12:42:56.979" endtime="20210822 12:42:59.035"/>
</kw>
<kw name="Then Click Publish Article Button" library="articles_keywords">
<doc>This keyword clicks on the publish article button</doc>
<kw name="Click" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:42:59.037" endtime="20210822 12:43:00.094"/>
</kw>
<status status="PASS" starttime="20210822 12:42:59.036" endtime="20210822 12:43:00.095"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210822 12:43:00.097" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210822 12:43:00.097" endtime="20210822 12:43:00.097"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:43:00.098" endtime="20210822 12:43:00.101"/>
</kw>
<status status="PASS" starttime="20210822 12:43:00.096" endtime="20210822 12:43:00.102"/>
</kw>
<kw name="And Verify Edit Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Edit Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:00.117" level="INFO">Wait for Element with selector: (//a[contains(@class,'btn btn-sm')])[2]</msg>
<status status="PASS" starttime="20210822 12:43:00.103" endtime="20210822 12:43:00.117"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${edit_article}</var>
<arg>selector=${edit_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Edit Article</arg>
<arg>message=Edit Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:00.152" level="INFO">${edit_article} =  Edit Article</msg>
<status status="PASS" starttime="20210822 12:43:00.117" endtime="20210822 12:43:00.152"/>
</kw>
<status status="PASS" starttime="20210822 12:43:00.102" endtime="20210822 12:43:00.152"/>
</kw>
<kw name="And Verify Delete Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Delete Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:00.165" level="INFO">Wait for Element with selector: (//button[contains(text(),'Delete Article')])[2]</msg>
<status status="PASS" starttime="20210822 12:43:00.153" endtime="20210822 12:43:00.165"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${delete_article}</var>
<arg>selector=${delete_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Delete Article</arg>
<arg>message=Delete Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:00.189" level="INFO">${delete_article} =  Delete Article</msg>
<status status="PASS" starttime="20210822 12:43:00.165" endtime="20210822 12:43:00.189"/>
</kw>
<status status="PASS" starttime="20210822 12:43:00.152" endtime="20210822 12:43:00.189"/>
</kw>
<kw name="And Verify Comment Text Box" library="articles_keywords">
<doc>This keyword validates the presence of comment text box</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${write_cmnt_txt_box}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:00.203" level="INFO">Wait for Element with selector: //textarea[contains(@class,'form-control')]</msg>
<status status="PASS" starttime="20210822 12:43:00.190" endtime="20210822 12:43:00.203"/>
</kw>
<status status="PASS" starttime="20210822 12:43:00.189" endtime="20210822 12:43:00.203"/>
</kw>
<kw name="And Verify Post Comment Button" library="articles_keywords">
<doc>This keyword validates the presence of post comment button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${post_comment_button}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:00.215" level="INFO">Wait for Element with selector: //button[contains(text(),'Post Comment')]</msg>
<status status="PASS" starttime="20210822 12:43:00.204" endtime="20210822 12:43:00.216"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${post_comment}</var>
<arg>selector=${post_comment_button}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Post Comment</arg>
<arg>message=Post Comment button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:00.245" level="INFO">${post_comment} = Post Comment</msg>
<status status="PASS" starttime="20210822 12:43:00.216" endtime="20210822 12:43:00.245"/>
</kw>
<status status="PASS" starttime="20210822 12:43:00.203" endtime="20210822 12:43:00.246"/>
</kw>
<doc>This test case login using basic authentication,validates Home Page and create &amp; validates creation of new article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210822 12:42:44.346" endtime="20210822 12:43:00.246"/>
</test>
<test id="s1-s1-t2" name="Update Existing Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:43:00.340" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/50f23217-a09b-471b-b8c0-911b020ee13f"}</msg>
<msg timestamp="20210822 12:43:00.945" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/50f23217-a09b-471b-b8c0-911b020ee13f"}</msg>
<status status="PASS" starttime="20210822 12:43:00.338" endtime="20210822 12:43:00.945"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210822 12:43:00.955" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210822 12:43:00.946" endtime="20210822 12:43:00.955"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210822 12:43:00.958" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210822 12:43:01.085" level="INFO">Successfully created context. </msg>
<msg timestamp="20210822 12:43:01.085" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210822 12:43:00.956" endtime="20210822 12:43:01.085"/>
</kw>
<status status="PASS" starttime="20210822 12:43:00.956" endtime="20210822 12:43:01.086"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210822 12:43:04.293" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210822 12:43:01.086" endtime="20210822 12:43:04.294"/>
</kw>
<status status="PASS" starttime="20210822 12:43:00.337" endtime="20210822 12:43:04.294"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:04.343" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210822 12:43:04.296" endtime="20210822 12:43:04.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:43:04.344" level="INFO">conduit</msg>
<status status="PASS" starttime="20210822 12:43:04.344" endtime="20210822 12:43:04.344"/>
</kw>
<status status="PASS" starttime="20210822 12:43:04.295" endtime="20210822 12:43:04.344"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:04.362" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210822 12:43:04.345" endtime="20210822 12:43:04.362"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:04.362" endtime="20210822 12:43:05.449"/>
</kw>
<status status="PASS" starttime="20210822 12:43:04.344" endtime="20210822 12:43:05.450"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210822 12:43:05.455" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:43:05.452" endtime="20210822 12:43:05.455"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210822 12:43:05.456" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:43:05.455" endtime="20210822 12:43:05.456"/>
</kw>
<status status="PASS" starttime="20210822 12:43:05.451" endtime="20210822 12:43:05.456"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:43:05.458" level="INFO">Fills the text 'candidatex@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210822 12:43:05.457" endtime="20210822 12:43:06.482"/>
</kw>
<status status="PASS" starttime="20210822 12:43:05.456" endtime="20210822 12:43:06.482"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:06.483" endtime="20210822 12:43:07.518"/>
</kw>
<status status="PASS" starttime="20210822 12:43:06.482" endtime="20210822 12:43:07.519"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:07.522" endtime="20210822 12:43:08.582"/>
</kw>
<status status="PASS" starttime="20210822 12:43:07.520" endtime="20210822 12:43:08.582"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:43:08.584" endtime="20210822 12:43:08.588"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:08.602" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210822 12:43:08.588" endtime="20210822 12:43:08.602"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:08.626" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210822 12:43:08.603" endtime="20210822 12:43:08.627"/>
</kw>
<status status="PASS" starttime="20210822 12:43:08.583" endtime="20210822 12:43:08.627"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:08.640" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210822 12:43:08.628" endtime="20210822 12:43:08.640"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:08.643" endtime="20210822 12:43:09.705"/>
</kw>
<status status="PASS" starttime="20210822 12:43:08.627" endtime="20210822 12:43:09.705"/>
</kw>
<kw name="And Get Logged In User Name" library="user_profile_keywords">
<doc>This keyword fetches the name of the user</doc>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>selector=${user_profile_user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:09.738" level="INFO">${username} = candidatex1</msg>
<status status="PASS" starttime="20210822 12:43:09.707" endtime="20210822 12:43:09.738"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210822 12:43:09.739" level="INFO">${username} = candidatex1</msg>
<status status="PASS" starttime="20210822 12:43:09.738" endtime="20210822 12:43:09.739"/>
</kw>
<status status="PASS" starttime="20210822 12:43:09.706" endtime="20210822 12:43:09.739"/>
</kw>
<kw name="And Validate User Profile Url" library="user_profile_keywords">
<doc>This keyword validates the user profile url</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210822 12:43:09.742" level="INFO">${url} = https://qa-task.backbasecloud.com/profile/candidatex1</msg>
<status status="PASS" starttime="20210822 12:43:09.740" endtime="20210822 12:43:09.742"/>
</kw>
<kw name="Should End With" library="BuiltIn">
<arg>${url}</arg>
<arg>profile/${username}</arg>
<arg>message=User profile url is not navigated properly.</arg>
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<status status="PASS" starttime="20210822 12:43:09.742" endtime="20210822 12:43:09.743"/>
</kw>
<status status="PASS" starttime="20210822 12:43:09.739" endtime="20210822 12:43:09.743"/>
</kw>
<kw name="Then Open My Posts" library="user_profile_keywords">
<doc>This Keyword Ensures thet My posts are open</doc>
<kw name="Click" library="Browser">
<arg>selector=${user_profile_my_posts_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:09.744" endtime="20210822 12:43:10.796"/>
</kw>
<status status="PASS" starttime="20210822 12:43:09.743" endtime="20210822 12:43:10.796"/>
</kw>
<kw name="And Read First Article From User Profile" library="articles_keywords">
<doc>This keyword Open first existing article</doc>
<kw name="Get Text" library="Browser">
<var>${art_title}</var>
<arg>selector=${first_art_title}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:10.823" level="INFO">${art_title} = Test</msg>
<status status="PASS" starttime="20210822 12:43:10.798" endtime="20210822 12:43:10.823"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${first_art_read_more_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:10.823" endtime="20210822 12:43:11.864"/>
</kw>
<status status="PASS" starttime="20210822 12:43:10.797" endtime="20210822 12:43:11.865"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210822 12:43:11.867" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210822 12:43:11.867" endtime="20210822 12:43:11.867"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:43:11.868" endtime="20210822 12:43:11.871"/>
</kw>
<status status="PASS" starttime="20210822 12:43:11.865" endtime="20210822 12:43:11.871"/>
</kw>
<kw name="Then And Verify Edit Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Edit Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:11.885" level="INFO">Wait for Element with selector: (//a[contains(@class,'btn btn-sm')])[2]</msg>
<status status="PASS" starttime="20210822 12:43:11.873" endtime="20210822 12:43:11.886"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${edit_article}</var>
<arg>selector=${edit_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Edit Article</arg>
<arg>message=Edit Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:11.910" level="INFO">${edit_article} =  Edit Article</msg>
<status status="PASS" starttime="20210822 12:43:11.886" endtime="20210822 12:43:11.910"/>
</kw>
<status status="PASS" starttime="20210822 12:43:11.872" endtime="20210822 12:43:11.910"/>
</kw>
<kw name="And Click On Edit Article Button" library="articles_keywords">
<doc>This keywor clicks on Edit Article Button</doc>
<kw name="Click" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:11.911" endtime="20210822 12:43:12.948"/>
</kw>
<status status="PASS" starttime="20210822 12:43:11.910" endtime="20210822 12:43:12.949"/>
</kw>
<kw name="Then Verify Edit Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword verifies that we are on Edit Article page</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210822 12:43:12.951" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210822 12:43:12.950" endtime="20210822 12:43:12.951"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=editor/${article_title}</arg>
<arg>message=Navigation unsuccessful to edit article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:43:12.952" endtime="20210822 12:43:12.955"/>
</kw>
<status status="PASS" starttime="20210822 12:43:12.949" endtime="20210822 12:43:12.955"/>
</kw>
<kw name="And Update Article Body" library="articles_keywords">
<arg>${updated_txt}</arg>
<doc>This keyword update body of the article</doc>
<kw name="Clear Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:12.956" endtime="20210822 12:43:13.997"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<arg>txt=${updated_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:43:13.999" level="INFO">Fills the text 'Test Article updated' in the given field.</msg>
<status status="PASS" starttime="20210822 12:43:13.998" endtime="20210822 12:43:15.027"/>
</kw>
<kw name="Click Publish Article Button" library="articles_keywords">
<doc>This keyword clicks on the publish article button</doc>
<kw name="Click" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:15.028" endtime="20210822 12:43:16.091"/>
</kw>
<status status="PASS" starttime="20210822 12:43:15.027" endtime="20210822 12:43:16.092"/>
</kw>
<status status="PASS" starttime="20210822 12:43:12.955" endtime="20210822 12:43:16.092"/>
</kw>
<kw name="And Validate Updated Article" library="articles_keywords">
<arg>${updated_txt}</arg>
<doc>This keyword validates that the article has been updated correctly</doc>
<kw name="Get Text" library="Browser">
<arg>selector=${updated_art_body_txt}</arg>
<arg>assertion_operator=equal</arg>
<arg>assertion_expected=${updated_txt}</arg>
<arg>message=Unable to Update article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:16.094" endtime="20210822 12:43:16.121"/>
</kw>
<status status="PASS" starttime="20210822 12:43:16.093" endtime="20210822 12:43:16.122"/>
</kw>
<doc>This Test Case updates an existing article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210822 12:43:00.333" endtime="20210822 12:43:16.122"/>
</test>
<test id="s1-s1-t3" name="Delete Existing Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:43:16.222" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/93949970-0799-45aa-9606-36bac4897362"}</msg>
<msg timestamp="20210822 12:43:16.835" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/93949970-0799-45aa-9606-36bac4897362"}</msg>
<status status="PASS" starttime="20210822 12:43:16.220" endtime="20210822 12:43:16.835"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210822 12:43:16.839" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210822 12:43:16.835" endtime="20210822 12:43:16.839"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210822 12:43:16.843" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210822 12:43:16.877" level="INFO">Successfully created context. </msg>
<msg timestamp="20210822 12:43:16.877" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210822 12:43:16.841" endtime="20210822 12:43:16.877"/>
</kw>
<status status="PASS" starttime="20210822 12:43:16.840" endtime="20210822 12:43:16.877"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210822 12:43:20.050" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210822 12:43:16.877" endtime="20210822 12:43:20.050"/>
</kw>
<status status="PASS" starttime="20210822 12:43:16.218" endtime="20210822 12:43:20.051"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:20.106" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210822 12:43:20.052" endtime="20210822 12:43:20.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:43:20.106" level="INFO">conduit</msg>
<status status="PASS" starttime="20210822 12:43:20.106" endtime="20210822 12:43:20.106"/>
</kw>
<status status="PASS" starttime="20210822 12:43:20.051" endtime="20210822 12:43:20.107"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:20.124" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210822 12:43:20.107" endtime="20210822 12:43:20.124"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:20.124" endtime="20210822 12:43:21.226"/>
</kw>
<status status="PASS" starttime="20210822 12:43:20.107" endtime="20210822 12:43:21.227"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210822 12:43:21.233" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:43:21.229" endtime="20210822 12:43:21.234"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210822 12:43:21.236" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:43:21.235" endtime="20210822 12:43:21.236"/>
</kw>
<status status="PASS" starttime="20210822 12:43:21.228" endtime="20210822 12:43:21.236"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:43:21.240" level="INFO">Fills the text 'candidatex@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210822 12:43:21.238" endtime="20210822 12:43:22.278"/>
</kw>
<status status="PASS" starttime="20210822 12:43:21.237" endtime="20210822 12:43:22.279"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:22.280" endtime="20210822 12:43:23.323"/>
</kw>
<status status="PASS" starttime="20210822 12:43:22.279" endtime="20210822 12:43:23.324"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:23.326" endtime="20210822 12:43:24.380"/>
</kw>
<status status="PASS" starttime="20210822 12:43:23.325" endtime="20210822 12:43:24.381"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:43:24.382" endtime="20210822 12:43:24.386"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:24.404" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210822 12:43:24.387" endtime="20210822 12:43:24.404"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:24.428" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210822 12:43:24.405" endtime="20210822 12:43:24.428"/>
</kw>
<status status="PASS" starttime="20210822 12:43:24.382" endtime="20210822 12:43:24.429"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:24.442" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210822 12:43:24.429" endtime="20210822 12:43:24.442"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:24.442" endtime="20210822 12:43:25.501"/>
</kw>
<status status="PASS" starttime="20210822 12:43:24.429" endtime="20210822 12:43:25.502"/>
</kw>
<kw name="And Get Logged In User Name" library="user_profile_keywords">
<doc>This keyword fetches the name of the user</doc>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>selector=${user_profile_user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:25.535" level="INFO">${username} = candidatex1</msg>
<status status="PASS" starttime="20210822 12:43:25.504" endtime="20210822 12:43:25.535"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210822 12:43:25.536" level="INFO">${username} = candidatex1</msg>
<status status="PASS" starttime="20210822 12:43:25.535" endtime="20210822 12:43:25.536"/>
</kw>
<status status="PASS" starttime="20210822 12:43:25.503" endtime="20210822 12:43:25.536"/>
</kw>
<kw name="And Validate User Profile Url" library="user_profile_keywords">
<doc>This keyword validates the user profile url</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210822 12:43:25.539" level="INFO">${url} = https://qa-task.backbasecloud.com/profile/candidatex1</msg>
<status status="PASS" starttime="20210822 12:43:25.537" endtime="20210822 12:43:25.539"/>
</kw>
<kw name="Should End With" library="BuiltIn">
<arg>${url}</arg>
<arg>profile/${username}</arg>
<arg>message=User profile url is not navigated properly.</arg>
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<status status="PASS" starttime="20210822 12:43:25.539" endtime="20210822 12:43:25.540"/>
</kw>
<status status="PASS" starttime="20210822 12:43:25.537" endtime="20210822 12:43:25.540"/>
</kw>
<kw name="Then Open My Posts" library="user_profile_keywords">
<doc>This Keyword Ensures thet My posts are open</doc>
<kw name="Click" library="Browser">
<arg>selector=${user_profile_my_posts_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:25.541" endtime="20210822 12:43:26.573"/>
</kw>
<status status="PASS" starttime="20210822 12:43:25.540" endtime="20210822 12:43:26.574"/>
</kw>
<kw name="And Check Count Of Articles" library="articles_keywords">
<doc>This keyword checks the count of Articles</doc>
<kw name="Get Element Count" library="Browser">
<var>${article_count}</var>
<arg>selector=${articles_list}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210822 12:43:26.590" level="INFO">${article_count} = 4</msg>
<status status="PASS" starttime="20210822 12:43:26.575" endtime="20210822 12:43:26.590"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${article_count}</arg>
<arg>${article_count}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210822 12:43:26.591" level="INFO">${article_count} = 4</msg>
<status status="PASS" starttime="20210822 12:43:26.590" endtime="20210822 12:43:26.591"/>
</kw>
<status status="PASS" starttime="20210822 12:43:26.574" endtime="20210822 12:43:26.591"/>
</kw>
<kw name="And Read First Article From User Profile" library="articles_keywords">
<doc>This keyword Open first existing article</doc>
<kw name="Get Text" library="Browser">
<var>${art_title}</var>
<arg>selector=${first_art_title}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:26.616" level="INFO">${art_title} = Test</msg>
<status status="PASS" starttime="20210822 12:43:26.592" endtime="20210822 12:43:26.616"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${first_art_read_more_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:26.617" endtime="20210822 12:43:27.668"/>
</kw>
<status status="PASS" starttime="20210822 12:43:26.592" endtime="20210822 12:43:27.669"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210822 12:43:27.671" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210822 12:43:27.671" endtime="20210822 12:43:27.671"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:43:27.672" endtime="20210822 12:43:27.675"/>
</kw>
<status status="PASS" starttime="20210822 12:43:27.669" endtime="20210822 12:43:27.676"/>
</kw>
<kw name="Then Verify Delete Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Delete Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:27.690" level="INFO">Wait for Element with selector: (//button[contains(text(),'Delete Article')])[2]</msg>
<status status="PASS" starttime="20210822 12:43:27.677" endtime="20210822 12:43:27.690"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${delete_article}</var>
<arg>selector=${delete_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Delete Article</arg>
<arg>message=Delete Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:27.718" level="INFO">${delete_article} =  Delete Article</msg>
<status status="PASS" starttime="20210822 12:43:27.691" endtime="20210822 12:43:27.718"/>
</kw>
<status status="PASS" starttime="20210822 12:43:27.676" endtime="20210822 12:43:27.718"/>
</kw>
<kw name="And Click On Delete Article Button" library="articles_keywords">
<doc>This keywor clicks on Delete Article Button</doc>
<kw name="Click" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:27.719" endtime="20210822 12:43:28.760"/>
</kw>
<status status="PASS" starttime="20210822 12:43:27.719" endtime="20210822 12:43:28.760"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:28.783" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210822 12:43:28.762" endtime="20210822 12:43:28.783"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:28.784" endtime="20210822 12:43:29.832"/>
</kw>
<status status="PASS" starttime="20210822 12:43:28.761" endtime="20210822 12:43:29.832"/>
</kw>
<kw name="And Check Number Of Articles After Deletion" library="articles_keywords">
<doc>his keyword verifies that the count of articles reduced by after after deleting an article</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${count_after_del}</var>
<arg>${article_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210822 12:43:29.834" level="INFO">${count_after_del} = 3</msg>
<status status="PASS" starttime="20210822 12:43:29.834" endtime="20210822 12:43:29.834"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${article_count_After_del}</var>
<arg>selector=${articles_list}</arg>
<arg>assertion_operator=equal</arg>
<arg>expected_value=${count_after_del}</arg>
<arg>message=Unable to delete the Articles.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210822 12:43:29.848" level="INFO">${article_count_After_del} = 3</msg>
<status status="PASS" starttime="20210822 12:43:29.835" endtime="20210822 12:43:29.848"/>
</kw>
<status status="PASS" starttime="20210822 12:43:29.833" endtime="20210822 12:43:29.848"/>
</kw>
<doc>This test case deletes the existing article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210822 12:43:16.213" endtime="20210822 12:43:29.848"/>
</test>
<test id="s1-s1-t4" name="Delete Article Button Not Shown To Other Author">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:43:29.973" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/120bb400-7fcc-4bd7-8e2d-76cc122348b9"}</msg>
<msg timestamp="20210822 12:43:30.578" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/120bb400-7fcc-4bd7-8e2d-76cc122348b9"}</msg>
<status status="PASS" starttime="20210822 12:43:29.971" endtime="20210822 12:43:30.579"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210822 12:43:30.583" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210822 12:43:30.579" endtime="20210822 12:43:30.583"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210822 12:43:30.603" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210822 12:43:30.657" level="INFO">Successfully created context. </msg>
<msg timestamp="20210822 12:43:30.657" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210822 12:43:30.602" endtime="20210822 12:43:30.657"/>
</kw>
<status status="PASS" starttime="20210822 12:43:30.583" endtime="20210822 12:43:30.657"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210822 12:43:34.099" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210822 12:43:30.658" endtime="20210822 12:43:34.099"/>
</kw>
<status status="PASS" starttime="20210822 12:43:29.969" endtime="20210822 12:43:34.100"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:34.159" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210822 12:43:34.101" endtime="20210822 12:43:34.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:43:34.159" level="INFO">conduit</msg>
<status status="PASS" starttime="20210822 12:43:34.159" endtime="20210822 12:43:34.159"/>
</kw>
<status status="PASS" starttime="20210822 12:43:34.100" endtime="20210822 12:43:34.160"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:34.172" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210822 12:43:34.160" endtime="20210822 12:43:34.172"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:34.173" endtime="20210822 12:43:35.307"/>
</kw>
<status status="PASS" starttime="20210822 12:43:34.160" endtime="20210822 12:43:35.307"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210822 12:43:35.312" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:43:35.309" endtime="20210822 12:43:35.312"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210822 12:43:35.313" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:43:35.313" endtime="20210822 12:43:35.313"/>
</kw>
<status status="PASS" starttime="20210822 12:43:35.308" endtime="20210822 12:43:35.314"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:43:35.315" level="INFO">Fills the text 'candidatex@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210822 12:43:35.314" endtime="20210822 12:43:36.344"/>
</kw>
<status status="PASS" starttime="20210822 12:43:35.314" endtime="20210822 12:43:36.345"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:36.348" endtime="20210822 12:43:37.386"/>
</kw>
<status status="PASS" starttime="20210822 12:43:36.347" endtime="20210822 12:43:37.386"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:37.388" endtime="20210822 12:43:38.452"/>
</kw>
<status status="PASS" starttime="20210822 12:43:37.387" endtime="20210822 12:43:38.452"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:43:38.454" endtime="20210822 12:43:38.457"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:38.472" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210822 12:43:38.458" endtime="20210822 12:43:38.473"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:38.506" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210822 12:43:38.473" endtime="20210822 12:43:38.506"/>
</kw>
<status status="PASS" starttime="20210822 12:43:38.453" endtime="20210822 12:43:38.506"/>
</kw>
<kw name="And Get Signed In User Name" library="home_page_keywords">
<doc>This keyword fetches the name of the user</doc>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>selector=${username_user_profile_txt}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:38.534" level="INFO">${username} = candidatex1</msg>
<status status="PASS" starttime="20210822 12:43:38.507" endtime="20210822 12:43:38.535"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210822 12:43:38.535" level="INFO">${username} = candidatex1</msg>
<status status="PASS" starttime="20210822 12:43:38.535" endtime="20210822 12:43:38.535"/>
</kw>
<status status="PASS" starttime="20210822 12:43:38.506" endtime="20210822 12:43:38.535"/>
</kw>
<kw name="Then Click On Global Feed" library="home_page_keywords">
<doc>This keyword clicks on global feed text</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${global_feed_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:38.547" level="INFO">Wait for Element with selector: //a[contains(text(),'Global Feed')]</msg>
<status status="PASS" starttime="20210822 12:43:38.536" endtime="20210822 12:43:38.547"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${global_feed_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:38.547" endtime="20210822 12:43:39.601"/>
</kw>
<status status="PASS" starttime="20210822 12:43:38.536" endtime="20210822 12:43:39.601"/>
</kw>
<kw name="And Navigate To Other Author's Article" library="articles_keywords">
<doc>This keyword navigates to the article from other user</doc>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>11</value>
<iter>
<var name="${index}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210822 12:43:39.605" level="INFO">${author} = (//a[@class='author'])[1]</msg>
<status status="PASS" starttime="20210822 12:43:39.604" endtime="20210822 12:43:39.605"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:39.632" level="INFO">${author_txt} = candidatex1</msg>
<status status="PASS" starttime="20210822 12:43:39.605" endtime="20210822 12:43:39.632"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210822 12:43:39.632" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[1]</msg>
<status status="PASS" starttime="20210822 12:43:39.632" endtime="20210822 12:43:39.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210822 12:43:39.633" endtime="20210822 12:43:39.633"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210822 12:43:39.633" endtime="20210822 12:43:39.634"/>
</kw>
<status status="PASS" starttime="20210822 12:43:39.603" endtime="20210822 12:43:39.634"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210822 12:43:39.634" level="INFO">${author} = (//a[@class='author'])[2]</msg>
<status status="PASS" starttime="20210822 12:43:39.634" endtime="20210822 12:43:39.634"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:39.690" level="INFO">${author_txt} = candidatex1</msg>
<status status="PASS" starttime="20210822 12:43:39.635" endtime="20210822 12:43:39.690"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210822 12:43:39.691" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[2]</msg>
<status status="PASS" starttime="20210822 12:43:39.690" endtime="20210822 12:43:39.691"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210822 12:43:39.691" endtime="20210822 12:43:39.691"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210822 12:43:39.691" endtime="20210822 12:43:39.692"/>
</kw>
<status status="PASS" starttime="20210822 12:43:39.634" endtime="20210822 12:43:39.692"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210822 12:43:39.693" level="INFO">${author} = (//a[@class='author'])[3]</msg>
<status status="PASS" starttime="20210822 12:43:39.692" endtime="20210822 12:43:39.693"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:39.713" level="INFO">${author_txt} = candidatex1</msg>
<status status="PASS" starttime="20210822 12:43:39.693" endtime="20210822 12:43:39.713"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210822 12:43:39.714" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[3]</msg>
<status status="PASS" starttime="20210822 12:43:39.714" endtime="20210822 12:43:39.714"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210822 12:43:39.714" endtime="20210822 12:43:39.715"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210822 12:43:39.715" endtime="20210822 12:43:39.715"/>
</kw>
<status status="PASS" starttime="20210822 12:43:39.692" endtime="20210822 12:43:39.715"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${author}</var>
<arg>SEPARATOR=</arg>
<arg>${author_name_global_feed}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210822 12:43:39.716" level="INFO">${author} = (//a[@class='author'])[4]</msg>
<status status="PASS" starttime="20210822 12:43:39.716" endtime="20210822 12:43:39.716"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${author_txt}</var>
<arg>selector=${author}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:39.739" level="INFO">${author_txt} = qalife</msg>
<status status="PASS" starttime="20210822 12:43:39.716" endtime="20210822 12:43:39.739"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${art_preview}</var>
<arg>SEPARATOR=</arg>
<arg>${article_preview_span}</arg>
<arg>${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210822 12:43:39.740" level="INFO">${art_preview} = (//a[@class='preview-link']/span)[4]</msg>
<status status="PASS" starttime="20210822 12:43:39.739" endtime="20210822 12:43:39.740"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<arg>Run Keywords</arg>
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Hover</arg>
<arg>selector=${art_preview}</arg>
<arg>AND</arg>
<arg>Browser.Click</arg>
<arg>selector=${art_preview}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Hover" library="Browser">
<arg>selector=${art_preview}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Moves the virtual mouse and scrolls to the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:39.741" endtime="20210822 12:43:40.785"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${art_preview}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:40.785" endtime="20210822 12:43:41.836"/>
</kw>
<status status="PASS" starttime="20210822 12:43:39.740" endtime="20210822 12:43:41.836"/>
</kw>
<status status="PASS" starttime="20210822 12:43:39.740" endtime="20210822 12:43:41.836"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>'${author_txt}'!='${username}'</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210822 12:43:41.837" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210822 12:43:41.836" endtime="20210822 12:43:41.839"/>
</kw>
<status status="PASS" starttime="20210822 12:43:39.716" endtime="20210822 12:43:41.839"/>
</iter>
<status status="PASS" starttime="20210822 12:43:39.603" endtime="20210822 12:43:41.839"/>
</for>
<status status="PASS" starttime="20210822 12:43:39.602" endtime="20210822 12:43:41.840"/>
</kw>
<kw name="And Validate Delete Article Option Is Not Available" library="articles_keywords">
<doc>This keyword validates that delete article option is not available for other users</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:43:41.841" endtime="20210822 12:43:41.844"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>selector=${follow_user_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Follow</arg>
<arg>message=Follow User button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:41.845" endtime="20210822 12:43:41.867"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<arg>state=visible</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=None</arg>
<arg>message=Other user can also delete the article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:41.867" endtime="20210822 12:43:41.985"/>
</kw>
<status status="PASS" starttime="20210822 12:43:41.840" endtime="20210822 12:43:41.985"/>
</kw>
<doc>This test case checks Delete Article button shown to article's author</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<tag>TESTING</tag>
<status status="PASS" starttime="20210822 12:43:29.962" endtime="20210822 12:43:41.985"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser. Activated browser is set to first active browser.
Closes all context and pages belonging to this browser.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:43:43.119" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210822 12:43:42.117" endtime="20210822 12:43:43.119"/>
</kw>
<status status="PASS" starttime="20210822 12:42:43.192" endtime="20210822 12:43:43.119"/>
</suite>
<suite id="s1-s2" name="Home Page Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/home_page_test.robot">
<test id="s1-s2-t1" name="Validate Home Page">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:43:43.171" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/8ad4a9a2-2e37-4c23-971a-663d07dfc491"}</msg>
<msg timestamp="20210822 12:43:43.768" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/8ad4a9a2-2e37-4c23-971a-663d07dfc491"}</msg>
<status status="PASS" starttime="20210822 12:43:43.169" endtime="20210822 12:43:43.768"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210822 12:43:43.774" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210822 12:43:43.769" endtime="20210822 12:43:43.775"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210822 12:43:43.790" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210822 12:43:43.857" level="INFO">Successfully created context. </msg>
<msg timestamp="20210822 12:43:43.857" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210822 12:43:43.783" endtime="20210822 12:43:43.858"/>
</kw>
<status status="PASS" starttime="20210822 12:43:43.775" endtime="20210822 12:43:43.858"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210822 12:43:47.064" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210822 12:43:43.858" endtime="20210822 12:43:47.064"/>
</kw>
<status status="PASS" starttime="20210822 12:43:43.167" endtime="20210822 12:43:47.065"/>
</kw>
<kw name="Then Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:47.108" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210822 12:43:47.066" endtime="20210822 12:43:47.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:43:47.109" level="INFO">conduit</msg>
<status status="PASS" starttime="20210822 12:43:47.108" endtime="20210822 12:43:47.109"/>
</kw>
<status status="PASS" starttime="20210822 12:43:47.065" endtime="20210822 12:43:47.109"/>
</kw>
<kw name="And Validate Tags are present" library="home_page_keywords">
<doc>This keyword validates that the tags are present in the homepage</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_tags}</var>
<arg>selector=${homepage_tags}</arg>
<arg>assertion_operator=greater than</arg>
<arg>expected_value=1</arg>
<arg>message=Tags aren't present in homepage</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210822 12:43:47.614" level="INFO">${count_tags} = 792</msg>
<status status="PASS" starttime="20210822 12:43:47.110" endtime="20210822 12:43:47.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_tags}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:43:47.615" level="INFO">792</msg>
<status status="PASS" starttime="20210822 12:43:47.615" endtime="20210822 12:43:47.615"/>
</kw>
<status status="PASS" starttime="20210822 12:43:47.109" endtime="20210822 12:43:47.615"/>
</kw>
<kw name="And List Of Articles Is Present" library="home_page_keywords">
<doc>This keyword checks that global feed articles are present.</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_articles}</var>
<arg>selector=${global_feed_articles}</arg>
<arg>assertion_operator=&gt;=</arg>
<arg>expected_value=1</arg>
<arg>message=Articles aren't present in Global Feed</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210822 12:43:47.740" level="INFO">${count_articles} = 10</msg>
<status status="PASS" starttime="20210822 12:43:47.616" endtime="20210822 12:43:47.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_articles}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:43:47.741" level="INFO">10</msg>
<status status="PASS" starttime="20210822 12:43:47.741" endtime="20210822 12:43:47.741"/>
</kw>
<status status="PASS" starttime="20210822 12:43:47.616" endtime="20210822 12:43:47.741"/>
</kw>
<kw name="And Validate Pagination On Home Page" library="home_page_keywords">
<doc>This keyword checks for the list of pagination of articles</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_pages}</var>
<arg>selector=${article_pagination}</arg>
<arg>assertion_operator=&gt;=</arg>
<arg>expected_value=1</arg>
<arg>message=Feed Article Pagination is not Present.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210822 12:43:47.957" level="INFO">${count_pages} = 269</msg>
<status status="PASS" starttime="20210822 12:43:47.742" endtime="20210822 12:43:47.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_pages}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:43:47.958" level="INFO">269</msg>
<status status="PASS" starttime="20210822 12:43:47.957" endtime="20210822 12:43:47.958"/>
</kw>
<status status="PASS" starttime="20210822 12:43:47.741" endtime="20210822 12:43:47.958"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>HOME_PAGE</tag>
<status status="PASS" starttime="20210822 12:43:43.161" endtime="20210822 12:43:47.958"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser. Activated browser is set to first active browser.
Closes all context and pages belonging to this browser.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:43:48.456" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210822 12:43:48.097" endtime="20210822 12:43:48.456"/>
</kw>
<status status="PASS" starttime="20210822 12:43:43.128" endtime="20210822 12:43:48.456"/>
</suite>
<suite id="s1-s3" name="Login User Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/login_user_test.robot">
<test id="s1-s3-t1" name="Sign In For Registered User">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:43:48.517" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/87b528d7-6d59-4263-911b-4ac007ca9e6a"}</msg>
<msg timestamp="20210822 12:43:49.100" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/87b528d7-6d59-4263-911b-4ac007ca9e6a"}</msg>
<status status="PASS" starttime="20210822 12:43:48.515" endtime="20210822 12:43:49.101"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210822 12:43:49.103" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210822 12:43:49.101" endtime="20210822 12:43:49.104"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210822 12:43:49.106" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210822 12:43:49.176" level="INFO">Successfully created context. </msg>
<msg timestamp="20210822 12:43:49.176" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210822 12:43:49.104" endtime="20210822 12:43:49.177"/>
</kw>
<status status="PASS" starttime="20210822 12:43:49.104" endtime="20210822 12:43:49.177"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210822 12:43:52.308" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210822 12:43:49.177" endtime="20210822 12:43:52.308"/>
</kw>
<status status="PASS" starttime="20210822 12:43:48.514" endtime="20210822 12:43:52.309"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:52.356" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210822 12:43:52.310" endtime="20210822 12:43:52.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:43:52.357" level="INFO">conduit</msg>
<status status="PASS" starttime="20210822 12:43:52.356" endtime="20210822 12:43:52.357"/>
</kw>
<status status="PASS" starttime="20210822 12:43:52.309" endtime="20210822 12:43:52.357"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:52.369" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210822 12:43:52.358" endtime="20210822 12:43:52.370"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:52.370" endtime="20210822 12:43:53.475"/>
</kw>
<status status="PASS" starttime="20210822 12:43:52.357" endtime="20210822 12:43:53.475"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210822 12:43:53.481" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:43:53.477" endtime="20210822 12:43:53.481"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210822 12:43:53.482" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:43:53.481" endtime="20210822 12:43:53.482"/>
</kw>
<status status="PASS" starttime="20210822 12:43:53.476" endtime="20210822 12:43:53.482"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:43:53.484" level="INFO">Fills the text 'candidatex@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210822 12:43:53.483" endtime="20210822 12:43:54.514"/>
</kw>
<status status="PASS" starttime="20210822 12:43:53.483" endtime="20210822 12:43:54.515"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:54.516" endtime="20210822 12:43:55.552"/>
</kw>
<status status="PASS" starttime="20210822 12:43:54.515" endtime="20210822 12:43:55.553"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:43:55.555" endtime="20210822 12:43:56.618"/>
</kw>
<status status="PASS" starttime="20210822 12:43:55.554" endtime="20210822 12:43:56.619"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:43:56.620" endtime="20210822 12:43:56.625"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:43:56.641" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210822 12:43:56.625" endtime="20210822 12:43:56.641"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:43:56.666" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210822 12:43:56.641" endtime="20210822 12:43:56.666"/>
</kw>
<status status="PASS" starttime="20210822 12:43:56.619" endtime="20210822 12:43:56.666"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>LOGIN_USER</tag>
<status status="PASS" starttime="20210822 12:43:48.509" endtime="20210822 12:43:56.666"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser. Activated browser is set to first active browser.
Closes all context and pages belonging to this browser.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:43:57.095" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210822 12:43:56.751" endtime="20210822 12:43:57.096"/>
</kw>
<status status="PASS" starttime="20210822 12:43:48.460" endtime="20210822 12:43:57.096"/>
</suite>
<suite id="s1-s4" name="Register User Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/register_user_test.robot">
<test id="s1-s4-t1" name="Register A User">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:43:57.146" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/1af38d12-0924-46f6-8d72-dd656e2ff7b7"}</msg>
<msg timestamp="20210822 12:43:57.733" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/1af38d12-0924-46f6-8d72-dd656e2ff7b7"}</msg>
<status status="PASS" starttime="20210822 12:43:57.143" endtime="20210822 12:43:57.734"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210822 12:43:57.737" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210822 12:43:57.734" endtime="20210822 12:43:57.737"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210822 12:43:57.740" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210822 12:43:57.775" level="INFO">Successfully created context. </msg>
<msg timestamp="20210822 12:43:57.775" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210822 12:43:57.738" endtime="20210822 12:43:57.776"/>
</kw>
<status status="PASS" starttime="20210822 12:43:57.737" endtime="20210822 12:43:57.776"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210822 12:44:00.795" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210822 12:43:57.776" endtime="20210822 12:44:00.796"/>
</kw>
<status status="PASS" starttime="20210822 12:43:57.140" endtime="20210822 12:44:00.796"/>
</kw>
<kw name="When Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:44:00.840" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210822 12:44:00.798" endtime="20210822 12:44:00.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:44:00.840" level="INFO">conduit</msg>
<status status="PASS" starttime="20210822 12:44:00.840" endtime="20210822 12:44:00.840"/>
</kw>
<status status="PASS" starttime="20210822 12:44:00.797" endtime="20210822 12:44:00.840"/>
</kw>
<kw name="And Open Sign Up Page" library="home_page_keywords">
<doc>This keyword will click on sign up link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_up_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:44:00.856" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign up')]</msg>
<status status="PASS" starttime="20210822 12:44:00.841" endtime="20210822 12:44:00.856"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_up_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:44:00.856" endtime="20210822 12:44:01.959"/>
</kw>
<status status="PASS" starttime="20210822 12:44:00.841" endtime="20210822 12:44:01.960"/>
</kw>
<kw name="Then Validate Register Url" library="register_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=register</arg>
<arg>message=Unable to open register page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210822 12:44:01.965" level="INFO">${url} = https://qa-task.backbasecloud.com/register</msg>
<status status="PASS" starttime="20210822 12:44:01.961" endtime="20210822 12:44:01.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:44:01.966" level="INFO">https://qa-task.backbasecloud.com/register</msg>
<status status="PASS" starttime="20210822 12:44:01.965" endtime="20210822 12:44:01.966"/>
</kw>
<status status="PASS" starttime="20210822 12:44:01.960" endtime="20210822 12:44:01.966"/>
</kw>
<kw name="And Enter User Name" library="register_user_keywords">
<arg>${username}</arg>
<doc>This keyword enter user name for sign up</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${username_txt_box}</arg>
<arg>txt=${username}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:44:01.968" level="INFO">Fills the text 'newuser12' in the given field.</msg>
<status status="PASS" starttime="20210822 12:44:01.967" endtime="20210822 12:44:02.997"/>
</kw>
<status status="PASS" starttime="20210822 12:44:01.966" endtime="20210822 12:44:02.997"/>
</kw>
<kw name="And Enter Email Id" library="register_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign up</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:44:03.000" level="INFO">Fills the text 'newuser12@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210822 12:44:02.999" endtime="20210822 12:44:04.035"/>
</kw>
<status status="PASS" starttime="20210822 12:44:02.998" endtime="20210822 12:44:04.036"/>
</kw>
<kw name="And Enter Password" library="register_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign up</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:44:04.038" endtime="20210822 12:44:05.082"/>
</kw>
<status status="PASS" starttime="20210822 12:44:04.037" endtime="20210822 12:44:05.082"/>
</kw>
<kw name="Then Click Sign Up Button" library="register_user_keywords">
<doc>This keyword clicks on the sign up button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_up_button}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:44:05.083" endtime="20210822 12:44:06.132"/>
</kw>
<status status="PASS" starttime="20210822 12:44:05.083" endtime="20210822 12:44:06.132"/>
</kw>
<kw name="And Verify Sign Up" library="register_user_keywords">
<arg>${username}</arg>
<doc>This keyword verifies whether sign up is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email/Username already exists</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:44:06.134" endtime="20210822 12:44:06.139"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${user_xpath}</var>
<arg>SEPARATOR=</arg>
<arg>${signed_up_username}</arg>
<arg>${username}']</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210822 12:44:06.140" level="INFO">${user_xpath} = //a[@href='/profile/newuser12']</msg>
<status status="PASS" starttime="20210822 12:44:06.139" endtime="20210822 12:44:06.140"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${user_xpath}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:44:06.153" level="INFO">Wait for Element with selector: //a[@href='/profile/newuser12']</msg>
<status status="PASS" starttime="20210822 12:44:06.140" endtime="20210822 12:44:06.153"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${output}</var>
<arg>selector=${user_xpath}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${username}</arg>
<arg>message=Sign up unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:44:06.176" level="INFO">${output} = newuser12</msg>
<status status="PASS" starttime="20210822 12:44:06.153" endtime="20210822 12:44:06.176"/>
</kw>
<status status="PASS" starttime="20210822 12:44:06.133" endtime="20210822 12:44:06.177"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>REGISTER_USER</tag>
<status status="PASS" starttime="20210822 12:43:57.135" endtime="20210822 12:44:06.177"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser. Activated browser is set to first active browser.
Closes all context and pages belonging to this browser.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:44:06.582" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210822 12:44:06.250" endtime="20210822 12:44:06.582"/>
</kw>
<status status="PASS" starttime="20210822 12:43:57.102" endtime="20210822 12:44:06.582"/>
</suite>
<suite id="s1-s5" name="Settings Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/settings_test.robot">
<test id="s1-s5-t1" name="Validate Settings Page">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:44:06.625" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/6a5ace1d-e19f-4893-b4b6-78309e6a1916"}</msg>
<msg timestamp="20210822 12:44:07.162" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/6a5ace1d-e19f-4893-b4b6-78309e6a1916"}</msg>
<status status="PASS" starttime="20210822 12:44:06.623" endtime="20210822 12:44:07.162"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210822 12:44:07.197" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210822 12:44:07.163" endtime="20210822 12:44:07.197"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210822 12:44:07.200" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false}</msg>
<msg timestamp="20210822 12:44:07.252" level="INFO">Successfully created context. </msg>
<msg timestamp="20210822 12:44:07.252" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False}</msg>
<status status="PASS" starttime="20210822 12:44:07.198" endtime="20210822 12:44:07.252"/>
</kw>
<status status="PASS" starttime="20210822 12:44:07.197" endtime="20210822 12:44:07.252"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210822 12:44:10.309" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<status status="PASS" starttime="20210822 12:44:07.253" endtime="20210822 12:44:10.309"/>
</kw>
<status status="PASS" starttime="20210822 12:44:06.623" endtime="20210822 12:44:10.310"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:44:10.358" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210822 12:44:10.311" endtime="20210822 12:44:10.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210822 12:44:10.358" level="INFO">conduit</msg>
<status status="PASS" starttime="20210822 12:44:10.358" endtime="20210822 12:44:10.358"/>
</kw>
<status status="PASS" starttime="20210822 12:44:10.310" endtime="20210822 12:44:10.359"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${sign_in_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:44:10.373" level="INFO">Wait for Element with selector: //a[contains(text(),'Sign in')]</msg>
<status status="PASS" starttime="20210822 12:44:10.359" endtime="20210822 12:44:10.373"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:44:10.373" endtime="20210822 12:44:11.476"/>
</kw>
<status status="PASS" starttime="20210822 12:44:10.359" endtime="20210822 12:44:11.477"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210822 12:44:11.482" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:44:11.478" endtime="20210822 12:44:11.482"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210822 12:44:11.483" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210822 12:44:11.483" endtime="20210822 12:44:11.484"/>
</kw>
<status status="PASS" starttime="20210822 12:44:11.477" endtime="20210822 12:44:11.484"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210822 12:44:11.487" level="INFO">Fills the text 'candidatex@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210822 12:44:11.485" endtime="20210822 12:44:12.513"/>
</kw>
<status status="PASS" starttime="20210822 12:44:11.484" endtime="20210822 12:44:12.513"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:44:12.515" endtime="20210822 12:44:13.554"/>
</kw>
<status status="PASS" starttime="20210822 12:44:12.514" endtime="20210822 12:44:13.554"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:44:13.556" endtime="20210822 12:44:14.619"/>
</kw>
<status status="PASS" starttime="20210822 12:44:13.555" endtime="20210822 12:44:14.620"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:44:14.621" endtime="20210822 12:44:14.624"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:44:14.637" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210822 12:44:14.625" endtime="20210822 12:44:14.638"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210822 12:44:14.660" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210822 12:44:14.638" endtime="20210822 12:44:14.660"/>
</kw>
<status status="PASS" starttime="20210822 12:44:14.620" endtime="20210822 12:44:14.661"/>
</kw>
<kw name="Then Open Settings Page" library="home_page_keywords">
<doc>This keyword will open Settings page from home page</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${settings_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210822 12:44:14.672" level="INFO">Wait for Element with selector: //a[@href='/settings']</msg>
<status status="PASS" starttime="20210822 12:44:14.661" endtime="20210822 12:44:14.672"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${settings_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:44:14.672" endtime="20210822 12:44:15.735"/>
</kw>
<status status="PASS" starttime="20210822 12:44:14.661" endtime="20210822 12:44:15.735"/>
</kw>
<kw name="And Validate Settings Page Url" library="settings_keywords">
<doc>This keyword validates the url of settings page</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=settings</arg>
<arg>message=Unable to open settings page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210822 12:44:15.737" endtime="20210822 12:44:15.741"/>
</kw>
<status status="PASS" starttime="20210822 12:44:15.736" endtime="20210822 12:44:15.741"/>
</kw>
<kw name="And Validate Settings Title" library="settings_keywords">
<doc>This keyword validates title of the Settings page</doc>
<kw name="Get Text" library="Browser">
<arg>selector=${settings_title_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=Your Settings</arg>
<arg>message=Unable to open Settings Page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210822 12:44:15.742" endtime="20210822 12:44:15.765"/>
</kw>
<status status="PASS" starttime="20210822 12:44:15.741" endtime="20210822 12:44:15.765"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>SETTINGS</tag>
<status status="PASS" starttime="20210822 12:44:06.618" endtime="20210822 12:44:15.765"/>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser. Activated browser is set to first active browser.
Closes all context and pages belonging to this browser.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210822 12:44:16.196" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20210822 12:44:15.848" endtime="20210822 12:44:16.197"/>
</kw>
<status status="PASS" starttime="20210822 12:44:06.588" endtime="20210822 12:44:16.197"/>
</suite>
<status status="PASS" starttime="20210822 12:42:43.154" endtime="20210822 12:44:16.207"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">ARTICLES</stat>
<stat pass="8" fail="0" skip="0">FEATURE-ARTICLES</stat>
<stat pass="1" fail="0" skip="0">HOME_PAGE</stat>
<stat pass="1" fail="0" skip="0">LOGIN_USER</stat>
<stat pass="1" fail="0" skip="0">REGISTER_USER</stat>
<stat pass="1" fail="0" skip="0">SETTINGS</stat>
<stat pass="1" fail="0" skip="0">TESTING</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Article Test">Tests.Article Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Home Page Test">Tests.Home Page Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Login User Test">Tests.Login User Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Register User Test">Tests.Register User Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Settings Test">Tests.Settings Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
