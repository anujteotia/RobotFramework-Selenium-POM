<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1 (Python 3.8.5 on darwin)" generated="20210821 22:17:34.224" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests">
<suite id="s1-s1" name="Article Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/article_test.robot">
<test id="s1-s1-t1" name="Create New Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210821 22:17:35.831" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/3afc5aa5-b289-4649-a163-536aab6cab43"}</msg>
<msg timestamp="20210821 22:17:36.740" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/3afc5aa5-b289-4649-a163-536aab6cab43"}</msg>
<status status="PASS" starttime="20210821 22:17:35.830" endtime="20210821 22:17:36.741"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210821 22:17:36.753" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210821 22:17:36.741" endtime="20210821 22:17:36.753"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210821 22:17:36.760" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false, "recordVideo": {"size": {"width": 1280, "height": 720}, "dir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos"}}</msg>
<msg timestamp="20210821 22:17:36.866" level="INFO">Successfully created context. </msg>
<msg timestamp="20210821 22:17:36.866" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False, 'recordVideo': {'size': {'width': 1280, 'height': 720}, 'dir': '/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos'}}</msg>
<status status="PASS" starttime="20210821 22:17:36.756" endtime="20210821 22:17:36.866"/>
</kw>
<status status="PASS" starttime="20210821 22:17:36.753" endtime="20210821 22:17:36.867"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210821 22:17:40.403" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<msg timestamp="20210821 22:17:40.406" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;video width="1280" height="720" controls&gt;&lt;source src="Videos/8b18957df398e5fd6a12b934d8c14015.webm" type="video/webm"&gt;&lt;/video&gt;</msg>
<status status="PASS" starttime="20210821 22:17:36.867" endtime="20210821 22:17:40.407"/>
</kw>
<status status="PASS" starttime="20210821 22:17:35.829" endtime="20210821 22:17:40.407"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:17:40.487" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210821 22:17:40.409" endtime="20210821 22:17:40.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210821 22:17:40.487" level="INFO">conduit</msg>
<status status="PASS" starttime="20210821 22:17:40.487" endtime="20210821 22:17:40.488"/>
</kw>
<status status="PASS" starttime="20210821 22:17:40.408" endtime="20210821 22:17:40.488"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:17:40.489" endtime="20210821 22:17:41.638"/>
</kw>
<status status="PASS" starttime="20210821 22:17:40.488" endtime="20210821 22:17:41.638"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210821 22:17:41.645" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210821 22:17:41.640" endtime="20210821 22:17:41.645"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210821 22:17:41.646" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210821 22:17:41.645" endtime="20210821 22:17:41.646"/>
</kw>
<status status="PASS" starttime="20210821 22:17:41.639" endtime="20210821 22:17:41.646"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210821 22:17:41.648" level="INFO">Fills the text 'candidatex@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210821 22:17:41.648" endtime="20210821 22:17:42.700"/>
</kw>
<status status="PASS" starttime="20210821 22:17:41.647" endtime="20210821 22:17:42.701"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:17:42.703" endtime="20210821 22:17:43.769"/>
</kw>
<status status="PASS" starttime="20210821 22:17:42.702" endtime="20210821 22:17:43.769"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:17:43.771" endtime="20210821 22:17:44.899"/>
</kw>
<status status="PASS" starttime="20210821 22:17:43.770" endtime="20210821 22:17:44.899"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210821 22:17:44.900" endtime="20210821 22:17:44.903"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:17:44.927" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210821 22:17:44.903" endtime="20210821 22:17:44.928"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:17:44.959" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210821 22:17:44.928" endtime="20210821 22:17:44.959"/>
</kw>
<status status="PASS" starttime="20210821 22:17:44.899" endtime="20210821 22:17:44.960"/>
</kw>
<kw name="When Click On New Article Text" library="articles_keywords">
<doc>This keyword clicks on new article link in signed in page</doc>
<kw name="Click" library="Browser">
<arg>selector=${new_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:17:44.961" endtime="20210821 22:17:46.036"/>
</kw>
<status status="PASS" starttime="20210821 22:17:44.960" endtime="20210821 22:17:46.036"/>
</kw>
<kw name="And Validate New Article Page" library="articles_keywords">
<doc>This keyword verifies that page to create new article is open</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=editor</arg>
<arg>message=New article page url is not loaded</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210821 22:17:46.038" endtime="20210821 22:17:46.043"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:17:46.059" level="INFO">Wait for Element with selector: //button[contains(text(),'Publish Article')]</msg>
<status status="PASS" starttime="20210821 22:17:46.043" endtime="20210821 22:17:46.060"/>
</kw>
<status status="PASS" starttime="20210821 22:17:46.037" endtime="20210821 22:17:46.060"/>
</kw>
<kw name="Then Enter Article Title" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword enter title for the article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_title_txt_box}</arg>
<arg>txt=${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210821 22:17:46.063" level="INFO">Fills the text 'Test' in the given field.</msg>
<status status="PASS" starttime="20210821 22:17:46.062" endtime="20210821 22:17:47.107"/>
</kw>
<status status="PASS" starttime="20210821 22:17:46.061" endtime="20210821 22:17:47.108"/>
</kw>
<kw name="And Enter Article Description" library="articles_keywords">
<arg>${art_description}</arg>
<doc>This keyword enter description for article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_description_txt_box}</arg>
<arg>txt=${description}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210821 22:17:47.112" level="INFO">Fills the text 'test' in the given field.</msg>
<status status="PASS" starttime="20210821 22:17:47.111" endtime="20210821 22:17:48.181"/>
</kw>
<status status="PASS" starttime="20210821 22:17:47.109" endtime="20210821 22:17:48.182"/>
</kw>
<kw name="And Write Article Body" library="articles_keywords">
<arg>${art_body}</arg>
<doc>This keyword enter text in article body</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<arg>txt=${body_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210821 22:17:48.184" level="INFO">Fills the text 'Test Article' in the given field.</msg>
<status status="PASS" starttime="20210821 22:17:48.183" endtime="20210821 22:17:49.254"/>
</kw>
<status status="PASS" starttime="20210821 22:17:48.182" endtime="20210821 22:17:49.254"/>
</kw>
<kw name="And Enter Article Tag" library="articles_keywords">
<arg>${art_tag}</arg>
<doc>This keyword enter tags for the article</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_tags_txt_box}</arg>
<arg>txt=${tag}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210821 22:17:49.257" level="INFO">Fills the text 'CRUD' in the given field.</msg>
<status status="PASS" starttime="20210821 22:17:49.256" endtime="20210821 22:17:50.301"/>
</kw>
<kw name="Keyboard Key" library="Browser">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20210821 22:17:50.302" endtime="20210821 22:17:51.326"/>
</kw>
<status status="PASS" starttime="20210821 22:17:49.255" endtime="20210821 22:17:51.326"/>
</kw>
<kw name="Then Click Publish Article Button" library="articles_keywords">
<doc>This keyword clicks on the publish article button</doc>
<kw name="Click" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:17:51.328" endtime="20210821 22:17:52.395"/>
</kw>
<status status="PASS" starttime="20210821 22:17:51.327" endtime="20210821 22:17:52.395"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210821 22:17:52.399" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210821 22:17:52.398" endtime="20210821 22:17:52.399"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210821 22:17:52.399" endtime="20210821 22:17:52.403"/>
</kw>
<status status="PASS" starttime="20210821 22:17:52.396" endtime="20210821 22:17:52.403"/>
</kw>
<kw name="And Verify Edit Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Edit Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:17:52.430" level="INFO">Wait for Element with selector: (//a[contains(@class,'btn btn-sm')])[2]</msg>
<status status="PASS" starttime="20210821 22:17:52.405" endtime="20210821 22:17:52.431"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${edit_article}</var>
<arg>selector=${edit_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Edit Article</arg>
<arg>message=Edit Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:17:52.455" level="INFO">${edit_article} =  Edit Article</msg>
<status status="PASS" starttime="20210821 22:17:52.431" endtime="20210821 22:17:52.455"/>
</kw>
<status status="PASS" starttime="20210821 22:17:52.404" endtime="20210821 22:17:52.455"/>
</kw>
<kw name="And Verify Delete Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Delete Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:17:52.471" level="INFO">Wait for Element with selector: (//button[contains(text(),'Delete Article')])[2]</msg>
<status status="PASS" starttime="20210821 22:17:52.456" endtime="20210821 22:17:52.471"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${delete_article}</var>
<arg>selector=${delete_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Delete Article</arg>
<arg>message=Delete Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:17:52.492" level="INFO">${delete_article} =  Delete Article</msg>
<status status="PASS" starttime="20210821 22:17:52.471" endtime="20210821 22:17:52.492"/>
</kw>
<status status="PASS" starttime="20210821 22:17:52.455" endtime="20210821 22:17:52.493"/>
</kw>
<kw name="And Verify Comment Text Box" library="articles_keywords">
<doc>This keyword validates the presence of comment text box</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${write_cmnt_txt_box}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:17:52.505" level="INFO">Wait for Element with selector: //textarea[contains(@class,'form-control')]</msg>
<status status="PASS" starttime="20210821 22:17:52.493" endtime="20210821 22:17:52.506"/>
</kw>
<status status="PASS" starttime="20210821 22:17:52.493" endtime="20210821 22:17:52.506"/>
</kw>
<kw name="And Verify Post Comment Button" library="articles_keywords">
<doc>This keyword validates the presence of post comment button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${post_comment_button}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:17:52.520" level="INFO">Wait for Element with selector: //button[contains(text(),'Post Comment')]</msg>
<status status="PASS" starttime="20210821 22:17:52.507" endtime="20210821 22:17:52.520"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${post_comment}</var>
<arg>selector=${post_comment_button}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Post Comment</arg>
<arg>message=Post Comment button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:17:52.544" level="INFO">${post_comment} = Post Comment</msg>
<status status="PASS" starttime="20210821 22:17:52.520" endtime="20210821 22:17:52.544"/>
</kw>
<status status="PASS" starttime="20210821 22:17:52.506" endtime="20210821 22:17:52.544"/>
</kw>
<doc>This test case login using basic authentication,validates Home Page and create &amp; validates creation of new article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210821 22:17:35.825" endtime="20210821 22:17:52.544"/>
</test>
<test id="s1-s1-t2" name="Update Existing Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210821 22:17:53.103" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/a202c80a-73c0-4029-bb8d-0dc3b23d8ce6"}</msg>
<msg timestamp="20210821 22:17:53.700" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/a202c80a-73c0-4029-bb8d-0dc3b23d8ce6"}</msg>
<status status="PASS" starttime="20210821 22:17:53.102" endtime="20210821 22:17:53.701"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210821 22:17:53.705" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210821 22:17:53.701" endtime="20210821 22:17:53.705"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210821 22:17:53.732" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false, "recordVideo": {"size": {"width": 1280, "height": 720}, "dir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos"}}</msg>
<msg timestamp="20210821 22:17:53.804" level="INFO">Successfully created context. </msg>
<msg timestamp="20210821 22:17:53.804" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False, 'recordVideo': {'size': {'width': 1280, 'height': 720}, 'dir': '/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos'}}</msg>
<status status="PASS" starttime="20210821 22:17:53.706" endtime="20210821 22:17:53.804"/>
</kw>
<status status="PASS" starttime="20210821 22:17:53.705" endtime="20210821 22:17:53.805"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210821 22:17:56.787" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<msg timestamp="20210821 22:17:56.788" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;video width="1280" height="720" controls&gt;&lt;source src="Videos/41914f55ef0c36d52c25fa8a22153a07.webm" type="video/webm"&gt;&lt;/video&gt;</msg>
<status status="PASS" starttime="20210821 22:17:53.805" endtime="20210821 22:17:56.788"/>
</kw>
<status status="PASS" starttime="20210821 22:17:53.102" endtime="20210821 22:17:56.789"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:17:56.834" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210821 22:17:56.790" endtime="20210821 22:17:56.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210821 22:17:56.835" level="INFO">conduit</msg>
<status status="PASS" starttime="20210821 22:17:56.834" endtime="20210821 22:17:56.835"/>
</kw>
<status status="PASS" starttime="20210821 22:17:56.789" endtime="20210821 22:17:56.835"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:17:56.836" endtime="20210821 22:17:57.936"/>
</kw>
<status status="PASS" starttime="20210821 22:17:56.835" endtime="20210821 22:17:57.936"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210821 22:17:57.940" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210821 22:17:57.937" endtime="20210821 22:17:57.940"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210821 22:17:57.941" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210821 22:17:57.940" endtime="20210821 22:17:57.941"/>
</kw>
<status status="PASS" starttime="20210821 22:17:57.936" endtime="20210821 22:17:57.941"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210821 22:17:57.943" level="INFO">Fills the text 'candidatex@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210821 22:17:57.942" endtime="20210821 22:17:58.980"/>
</kw>
<status status="PASS" starttime="20210821 22:17:57.942" endtime="20210821 22:17:58.980"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:17:58.983" endtime="20210821 22:18:00.031"/>
</kw>
<status status="PASS" starttime="20210821 22:17:58.981" endtime="20210821 22:18:00.031"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:00.034" endtime="20210821 22:18:01.121"/>
</kw>
<status status="PASS" starttime="20210821 22:18:00.032" endtime="20210821 22:18:01.121"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210821 22:18:01.122" endtime="20210821 22:18:01.124"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:18:01.138" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210821 22:18:01.125" endtime="20210821 22:18:01.138"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:01.172" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210821 22:18:01.138" endtime="20210821 22:18:01.172"/>
</kw>
<status status="PASS" starttime="20210821 22:18:01.122" endtime="20210821 22:18:01.172"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:18:01.191" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210821 22:18:01.174" endtime="20210821 22:18:01.191"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:01.191" endtime="20210821 22:18:02.268"/>
</kw>
<status status="PASS" starttime="20210821 22:18:01.172" endtime="20210821 22:18:02.269"/>
</kw>
<kw name="And Get Logged In User Name" library="user_profile_keywords">
<doc>This keyword fetches the name of the user</doc>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>selector=${user_profile_user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:02.296" level="INFO">${username} = candidatex1</msg>
<status status="PASS" starttime="20210821 22:18:02.271" endtime="20210821 22:18:02.296"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210821 22:18:02.296" level="INFO">${username} = candidatex1</msg>
<status status="PASS" starttime="20210821 22:18:02.296" endtime="20210821 22:18:02.297"/>
</kw>
<status status="PASS" starttime="20210821 22:18:02.270" endtime="20210821 22:18:02.297"/>
</kw>
<kw name="And Validate User Profile Url" library="user_profile_keywords">
<doc>This keyword validates the user profile url</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210821 22:18:02.299" level="INFO">${url} = https://qa-task.backbasecloud.com/profile/candidatex1</msg>
<status status="PASS" starttime="20210821 22:18:02.297" endtime="20210821 22:18:02.299"/>
</kw>
<kw name="Should End With" library="BuiltIn">
<arg>${url}</arg>
<arg>profile/${username}</arg>
<arg>message=User profile url is not navigated properly.</arg>
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<status status="PASS" starttime="20210821 22:18:02.300" endtime="20210821 22:18:02.300"/>
</kw>
<status status="PASS" starttime="20210821 22:18:02.297" endtime="20210821 22:18:02.300"/>
</kw>
<kw name="Then Open My Posts" library="user_profile_keywords">
<doc>This Keyword Ensures thet My posts are open</doc>
<kw name="Click" library="Browser">
<arg>selector=${user_profile_my_posts_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:02.301" endtime="20210821 22:18:03.338"/>
</kw>
<status status="PASS" starttime="20210821 22:18:02.301" endtime="20210821 22:18:03.338"/>
</kw>
<kw name="And Read First Article From User Profile" library="articles_keywords">
<doc>This keyword Open first existing article</doc>
<kw name="Get Text" library="Browser">
<var>${art_title}</var>
<arg>selector=${first_art_title}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:03.373" level="INFO">${art_title} = Test</msg>
<status status="PASS" starttime="20210821 22:18:03.340" endtime="20210821 22:18:03.373"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${first_art_read_more_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:03.374" endtime="20210821 22:18:04.423"/>
</kw>
<status status="PASS" starttime="20210821 22:18:03.339" endtime="20210821 22:18:04.424"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210821 22:18:04.427" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210821 22:18:04.426" endtime="20210821 22:18:04.427"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210821 22:18:04.427" endtime="20210821 22:18:04.431"/>
</kw>
<status status="PASS" starttime="20210821 22:18:04.425" endtime="20210821 22:18:04.431"/>
</kw>
<kw name="Then And Verify Edit Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Edit Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:18:04.450" level="INFO">Wait for Element with selector: (//a[contains(@class,'btn btn-sm')])[2]</msg>
<status status="PASS" starttime="20210821 22:18:04.433" endtime="20210821 22:18:04.450"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${edit_article}</var>
<arg>selector=${edit_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Edit Article</arg>
<arg>message=Edit Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:04.473" level="INFO">${edit_article} =  Edit Article</msg>
<status status="PASS" starttime="20210821 22:18:04.451" endtime="20210821 22:18:04.473"/>
</kw>
<status status="PASS" starttime="20210821 22:18:04.432" endtime="20210821 22:18:04.473"/>
</kw>
<kw name="And Click On Edit Article Button" library="articles_keywords">
<doc>This keywor clicks on Edit Article Button</doc>
<kw name="Click" library="Browser">
<arg>selector=${edit_article_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:04.475" endtime="20210821 22:18:05.513"/>
</kw>
<status status="PASS" starttime="20210821 22:18:04.474" endtime="20210821 22:18:05.513"/>
</kw>
<kw name="Then Verify Edit Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword verifies that we are on Edit Article page</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210821 22:18:05.517" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210821 22:18:05.516" endtime="20210821 22:18:05.517"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=editor/${article_title}</arg>
<arg>message=Navigation unsuccessful to edit article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210821 22:18:05.518" endtime="20210821 22:18:05.522"/>
</kw>
<status status="PASS" starttime="20210821 22:18:05.514" endtime="20210821 22:18:05.523"/>
</kw>
<kw name="And Update Article Body" library="articles_keywords">
<arg>${updated_txt}</arg>
<doc>This keyword update body of the article</doc>
<kw name="Clear Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:05.525" endtime="20210821 22:18:06.570"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>selector=${article_body_txt_box}</arg>
<arg>txt=${updated_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210821 22:18:06.571" level="INFO">Fills the text 'Test Article updated' in the given field.</msg>
<status status="PASS" starttime="20210821 22:18:06.570" endtime="20210821 22:18:07.609"/>
</kw>
<kw name="Click Publish Article Button" library="articles_keywords">
<doc>This keyword clicks on the publish article button</doc>
<kw name="Click" library="Browser">
<arg>selector=${publish_article_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:07.611" endtime="20210821 22:18:08.687"/>
</kw>
<status status="PASS" starttime="20210821 22:18:07.610" endtime="20210821 22:18:08.688"/>
</kw>
<status status="PASS" starttime="20210821 22:18:05.523" endtime="20210821 22:18:08.688"/>
</kw>
<kw name="And Validate Updated Article" library="articles_keywords">
<arg>${updated_txt}</arg>
<doc>This keyword validates that the article has been updated correctly</doc>
<kw name="Get Text" library="Browser">
<arg>selector=${updated_art_body_txt}</arg>
<arg>assertion_operator=equal</arg>
<arg>assertion_expected=${updated_txt}</arg>
<arg>message=Unable to Update article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:08.690" endtime="20210821 22:18:08.721"/>
</kw>
<status status="PASS" starttime="20210821 22:18:08.689" endtime="20210821 22:18:08.721"/>
</kw>
<doc>This Test Case updates an existing article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210821 22:17:53.099" endtime="20210821 22:18:08.722"/>
</test>
<test id="s1-s1-t3" name="Delete Existing Article">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210821 22:18:09.230" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/37446275-724e-4523-afa3-9c0eacbe2c01"}</msg>
<msg timestamp="20210821 22:18:09.817" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/37446275-724e-4523-afa3-9c0eacbe2c01"}</msg>
<status status="PASS" starttime="20210821 22:18:09.229" endtime="20210821 22:18:09.817"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210821 22:18:09.821" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210821 22:18:09.817" endtime="20210821 22:18:09.821"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210821 22:18:09.825" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false, "recordVideo": {"size": {"width": 1280, "height": 720}, "dir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos"}}</msg>
<msg timestamp="20210821 22:18:09.869" level="INFO">Successfully created context. </msg>
<msg timestamp="20210821 22:18:09.869" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False, 'recordVideo': {'size': {'width': 1280, 'height': 720}, 'dir': '/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos'}}</msg>
<status status="PASS" starttime="20210821 22:18:09.822" endtime="20210821 22:18:09.870"/>
</kw>
<status status="PASS" starttime="20210821 22:18:09.821" endtime="20210821 22:18:09.870"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210821 22:18:12.835" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<msg timestamp="20210821 22:18:12.836" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;video width="1280" height="720" controls&gt;&lt;source src="Videos/38d3d19ce645c9f1c5fff9522de9be78.webm" type="video/webm"&gt;&lt;/video&gt;</msg>
<status status="PASS" starttime="20210821 22:18:09.870" endtime="20210821 22:18:12.836"/>
</kw>
<status status="PASS" starttime="20210821 22:18:09.228" endtime="20210821 22:18:12.836"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:12.887" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210821 22:18:12.838" endtime="20210821 22:18:12.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210821 22:18:12.888" level="INFO">conduit</msg>
<status status="PASS" starttime="20210821 22:18:12.887" endtime="20210821 22:18:12.888"/>
</kw>
<status status="PASS" starttime="20210821 22:18:12.837" endtime="20210821 22:18:12.888"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:12.889" endtime="20210821 22:18:13.987"/>
</kw>
<status status="PASS" starttime="20210821 22:18:12.888" endtime="20210821 22:18:13.988"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210821 22:18:13.993" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210821 22:18:13.989" endtime="20210821 22:18:13.993"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210821 22:18:13.994" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210821 22:18:13.993" endtime="20210821 22:18:13.994"/>
</kw>
<status status="PASS" starttime="20210821 22:18:13.988" endtime="20210821 22:18:13.994"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210821 22:18:13.996" level="INFO">Fills the text 'candidatex@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210821 22:18:13.995" endtime="20210821 22:18:15.035"/>
</kw>
<status status="PASS" starttime="20210821 22:18:13.995" endtime="20210821 22:18:15.036"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:15.038" endtime="20210821 22:18:16.083"/>
</kw>
<status status="PASS" starttime="20210821 22:18:15.036" endtime="20210821 22:18:16.084"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:16.085" endtime="20210821 22:18:17.142"/>
</kw>
<status status="PASS" starttime="20210821 22:18:16.084" endtime="20210821 22:18:17.142"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210821 22:18:17.142" endtime="20210821 22:18:17.146"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:18:17.160" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210821 22:18:17.146" endtime="20210821 22:18:17.160"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:17.199" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210821 22:18:17.161" endtime="20210821 22:18:17.199"/>
</kw>
<status status="PASS" starttime="20210821 22:18:17.142" endtime="20210821 22:18:17.199"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:18:17.219" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210821 22:18:17.200" endtime="20210821 22:18:17.219"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:17.220" endtime="20210821 22:18:18.288"/>
</kw>
<status status="PASS" starttime="20210821 22:18:17.199" endtime="20210821 22:18:18.289"/>
</kw>
<kw name="And Get Logged In User Name" library="user_profile_keywords">
<doc>This keyword fetches the name of the user</doc>
<kw name="Get Text" library="Browser">
<var>${username}</var>
<arg>selector=${user_profile_user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:18.316" level="INFO">${username} = candidatex1</msg>
<status status="PASS" starttime="20210821 22:18:18.290" endtime="20210821 22:18:18.316"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${username}</arg>
<arg>${username}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210821 22:18:18.317" level="INFO">${username} = candidatex1</msg>
<status status="PASS" starttime="20210821 22:18:18.316" endtime="20210821 22:18:18.317"/>
</kw>
<status status="PASS" starttime="20210821 22:18:18.289" endtime="20210821 22:18:18.317"/>
</kw>
<kw name="And Validate User Profile Url" library="user_profile_keywords">
<doc>This keyword validates the user profile url</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210821 22:18:18.319" level="INFO">${url} = https://qa-task.backbasecloud.com/profile/candidatex1</msg>
<status status="PASS" starttime="20210821 22:18:18.318" endtime="20210821 22:18:18.319"/>
</kw>
<kw name="Should End With" library="BuiltIn">
<arg>${url}</arg>
<arg>profile/${username}</arg>
<arg>message=User profile url is not navigated properly.</arg>
<doc>Fails if the string ``str1`` does not end with the string ``str2``.</doc>
<status status="PASS" starttime="20210821 22:18:18.320" endtime="20210821 22:18:18.320"/>
</kw>
<status status="PASS" starttime="20210821 22:18:18.317" endtime="20210821 22:18:18.320"/>
</kw>
<kw name="Then Open My Posts" library="user_profile_keywords">
<doc>This Keyword Ensures thet My posts are open</doc>
<kw name="Click" library="Browser">
<arg>selector=${user_profile_my_posts_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:18.321" endtime="20210821 22:18:19.367"/>
</kw>
<status status="PASS" starttime="20210821 22:18:18.321" endtime="20210821 22:18:19.367"/>
</kw>
<kw name="Check Count Of Articles" library="articles_keywords">
<doc>This keyword checks the count of Articles</doc>
<kw name="Get Element Count" library="Browser">
<var>${article_count}</var>
<arg>selector=${articles_list}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210821 22:18:19.387" level="INFO">${article_count} = 4</msg>
<status status="PASS" starttime="20210821 22:18:19.369" endtime="20210821 22:18:19.387"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${article_count}</arg>
<arg>${article_count}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210821 22:18:19.388" level="INFO">${article_count} = 4</msg>
<status status="PASS" starttime="20210821 22:18:19.387" endtime="20210821 22:18:19.388"/>
</kw>
<status status="PASS" starttime="20210821 22:18:19.368" endtime="20210821 22:18:19.388"/>
</kw>
<kw name="And Read First Article From User Profile" library="articles_keywords">
<doc>This keyword Open first existing article</doc>
<kw name="Get Text" library="Browser">
<var>${art_title}</var>
<arg>selector=${first_art_title}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:19.410" level="INFO">${art_title} = Test</msg>
<status status="PASS" starttime="20210821 22:18:19.389" endtime="20210821 22:18:19.410"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${first_art_read_more_txt}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:19.411" endtime="20210821 22:18:20.450"/>
</kw>
<status status="PASS" starttime="20210821 22:18:19.388" endtime="20210821 22:18:20.450"/>
</kw>
<kw name="And Verify Created Article Url" library="articles_keywords">
<arg>${art_title}</arg>
<doc>This keyword checks the website is navigated to correct url</doc>
<kw name="Convert To Lower Case" library="String">
<var>${article_title}</var>
<arg>${article_title}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20210821 22:18:20.453" level="INFO">${article_title} = test</msg>
<status status="PASS" starttime="20210821 22:18:20.453" endtime="20210821 22:18:20.453"/>
</kw>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=article/${article_title}</arg>
<arg>message=Navigation unsuccessful to article</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210821 22:18:20.454" endtime="20210821 22:18:20.457"/>
</kw>
<status status="PASS" starttime="20210821 22:18:20.451" endtime="20210821 22:18:20.457"/>
</kw>
<kw name="Then Verify Delete Article Button" library="articles_keywords">
<doc>This keyword validates the presence of Delete Article button</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:18:20.471" level="INFO">Wait for Element with selector: (//button[contains(text(),'Delete Article')])[2]</msg>
<status status="PASS" starttime="20210821 22:18:20.458" endtime="20210821 22:18:20.471"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${delete_article}</var>
<arg>selector=${delete_article_txt_link}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=Delete Article</arg>
<arg>message=Delete Article button is not present</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:20.510" level="INFO">${delete_article} =  Delete Article</msg>
<status status="PASS" starttime="20210821 22:18:20.471" endtime="20210821 22:18:20.510"/>
</kw>
<status status="PASS" starttime="20210821 22:18:20.457" endtime="20210821 22:18:20.510"/>
</kw>
<kw name="And Click On Delete Article Button" library="articles_keywords">
<doc>This keywor clicks on Delete Article Button</doc>
<kw name="Click" library="Browser">
<arg>selector=${delete_article_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:20.511" endtime="20210821 22:18:21.550"/>
</kw>
<status status="PASS" starttime="20210821 22:18:20.510" endtime="20210821 22:18:21.550"/>
</kw>
<kw name="Then Open User Profile" library="user_profile_keywords">
<doc>This keyword open user profile</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${username_txt_link}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:18:21.566" level="INFO">Wait for Element with selector: (//a[@class='nav-link'])[3]</msg>
<status status="PASS" starttime="20210821 22:18:21.552" endtime="20210821 22:18:21.566"/>
</kw>
<kw name="Click" library="Browser">
<arg>selector=${username_txt_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:21.567" endtime="20210821 22:18:22.616"/>
</kw>
<status status="PASS" starttime="20210821 22:18:21.551" endtime="20210821 22:18:22.617"/>
</kw>
<kw name="And Check Number Of Articles After Deletion" library="articles_keywords">
<doc>his keyword verifies that the count of articles reduced by after after deleting an article</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${count_after_del}</var>
<arg>${article_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210821 22:18:22.619" level="INFO">${count_after_del} = 3</msg>
<status status="PASS" starttime="20210821 22:18:22.618" endtime="20210821 22:18:22.619"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${article_count_After_del}</var>
<arg>selector=${articles_list}</arg>
<arg>assertion_operator=equal</arg>
<arg>expected_value=${count_after_del}</arg>
<arg>message=Unable to delete the Articles.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210821 22:18:22.632" level="INFO">${article_count_After_del} = 3</msg>
<status status="PASS" starttime="20210821 22:18:22.620" endtime="20210821 22:18:22.632"/>
</kw>
<status status="PASS" starttime="20210821 22:18:22.617" endtime="20210821 22:18:22.633"/>
</kw>
<doc>This test case deletes the existing article</doc>
<tag>ARTICLES</tag>
<tag>FEATURE-ARTICLES</tag>
<status status="PASS" starttime="20210821 22:18:09.225" endtime="20210821 22:18:22.633"/>
</test>
<status status="PASS" starttime="20210821 22:17:34.264" endtime="20210821 22:18:23.118"/>
</suite>
<suite id="s1-s2" name="Home Page Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/home_page_test.robot">
<test id="s1-s2-t1" name="Validate Home Page">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210821 22:18:23.139" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/fc4319b3-91a8-40cd-b286-34b2ae39582a"}</msg>
<msg timestamp="20210821 22:18:23.708" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/fc4319b3-91a8-40cd-b286-34b2ae39582a"}</msg>
<status status="PASS" starttime="20210821 22:18:23.138" endtime="20210821 22:18:23.722"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210821 22:18:23.728" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210821 22:18:23.722" endtime="20210821 22:18:23.728"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210821 22:18:23.732" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false, "recordVideo": {"size": {"width": 1280, "height": 720}, "dir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos"}}</msg>
<msg timestamp="20210821 22:18:23.833" level="INFO">Successfully created context. </msg>
<msg timestamp="20210821 22:18:23.833" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False, 'recordVideo': {'size': {'width': 1280, 'height': 720}, 'dir': '/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos'}}</msg>
<status status="PASS" starttime="20210821 22:18:23.729" endtime="20210821 22:18:23.833"/>
</kw>
<status status="PASS" starttime="20210821 22:18:23.729" endtime="20210821 22:18:23.833"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210821 22:18:26.713" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<msg timestamp="20210821 22:18:26.714" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;video width="1280" height="720" controls&gt;&lt;source src="Videos/e932bc90e543eb20776f6d65b5e42283.webm" type="video/webm"&gt;&lt;/video&gt;</msg>
<status status="PASS" starttime="20210821 22:18:23.834" endtime="20210821 22:18:26.714"/>
</kw>
<status status="PASS" starttime="20210821 22:18:23.137" endtime="20210821 22:18:26.715"/>
</kw>
<kw name="Then Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:26.760" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210821 22:18:26.716" endtime="20210821 22:18:26.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210821 22:18:26.760" level="INFO">conduit</msg>
<status status="PASS" starttime="20210821 22:18:26.760" endtime="20210821 22:18:26.760"/>
</kw>
<status status="PASS" starttime="20210821 22:18:26.716" endtime="20210821 22:18:26.761"/>
</kw>
<kw name="And Validate Tags are present" library="home_page_keywords">
<doc>This keyword validates that the tags are present in the homepage</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_tags}</var>
<arg>selector=${homepage_tags}</arg>
<arg>assertion_operator=greater than</arg>
<arg>expected_value=1</arg>
<arg>message=Tags aren't present in homepage</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210821 22:18:27.371" level="INFO">${count_tags} = 792</msg>
<status status="PASS" starttime="20210821 22:18:26.761" endtime="20210821 22:18:27.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_tags}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210821 22:18:27.372" level="INFO">792</msg>
<status status="PASS" starttime="20210821 22:18:27.371" endtime="20210821 22:18:27.372"/>
</kw>
<status status="PASS" starttime="20210821 22:18:26.761" endtime="20210821 22:18:27.372"/>
</kw>
<kw name="And List Of Articles Is Present" library="home_page_keywords">
<doc>This keyword checks that global feed articles are present.</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_articles}</var>
<arg>selector=${global_feed_articles}</arg>
<arg>assertion_operator=&gt;=</arg>
<arg>expected_value=1</arg>
<arg>message=Articles aren't present in Global Feed</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210821 22:18:27.447" level="INFO">${count_articles} = 10</msg>
<status status="PASS" starttime="20210821 22:18:27.373" endtime="20210821 22:18:27.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_articles}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210821 22:18:27.448" level="INFO">10</msg>
<status status="PASS" starttime="20210821 22:18:27.447" endtime="20210821 22:18:27.448"/>
</kw>
<status status="PASS" starttime="20210821 22:18:27.373" endtime="20210821 22:18:27.448"/>
</kw>
<kw name="And Validate Pagination On Home Page" library="home_page_keywords">
<doc>This keyword checks for the list of pagination of articles</doc>
<kw name="Get Element Count" library="Browser">
<var>${count_pages}</var>
<arg>selector=${article_pagination}</arg>
<arg>assertion_operator=&gt;=</arg>
<arg>expected_value=1</arg>
<arg>message=Feed Article Pagination is not Present.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20210821 22:18:27.650" level="INFO">${count_pages} = 269</msg>
<status status="PASS" starttime="20210821 22:18:27.449" endtime="20210821 22:18:27.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${count_pages}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210821 22:18:27.650" level="INFO">269</msg>
<status status="PASS" starttime="20210821 22:18:27.650" endtime="20210821 22:18:27.650"/>
</kw>
<status status="PASS" starttime="20210821 22:18:27.448" endtime="20210821 22:18:27.651"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>HOME_PAGE</tag>
<status status="PASS" starttime="20210821 22:18:23.135" endtime="20210821 22:18:27.651"/>
</test>
<status status="PASS" starttime="20210821 22:18:23.122" endtime="20210821 22:18:28.510"/>
</suite>
<suite id="s1-s3" name="Login User Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/login_user_test.robot">
<test id="s1-s3-t1" name="Sign In For Registered User">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210821 22:18:28.560" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/0fe21a14-6c33-4b3d-ba40-1783cb66392c"}</msg>
<msg timestamp="20210821 22:18:29.207" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/0fe21a14-6c33-4b3d-ba40-1783cb66392c"}</msg>
<status status="PASS" starttime="20210821 22:18:28.559" endtime="20210821 22:18:29.207"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210821 22:18:29.211" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210821 22:18:29.208" endtime="20210821 22:18:29.211"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210821 22:18:29.217" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false, "recordVideo": {"size": {"width": 1280, "height": 720}, "dir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos"}}</msg>
<msg timestamp="20210821 22:18:29.241" level="INFO">Successfully created context. </msg>
<msg timestamp="20210821 22:18:29.241" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False, 'recordVideo': {'size': {'width': 1280, 'height': 720}, 'dir': '/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos'}}</msg>
<status status="PASS" starttime="20210821 22:18:29.213" endtime="20210821 22:18:29.241"/>
</kw>
<status status="PASS" starttime="20210821 22:18:29.212" endtime="20210821 22:18:29.242"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210821 22:18:31.865" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<msg timestamp="20210821 22:18:31.866" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;video width="1280" height="720" controls&gt;&lt;source src="Videos/d58196d7236e9c3d657dcd45c2b8f8f8.webm" type="video/webm"&gt;&lt;/video&gt;</msg>
<status status="PASS" starttime="20210821 22:18:29.242" endtime="20210821 22:18:31.866"/>
</kw>
<status status="PASS" starttime="20210821 22:18:28.557" endtime="20210821 22:18:31.867"/>
</kw>
<kw name="And Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:31.911" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210821 22:18:31.868" endtime="20210821 22:18:31.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210821 22:18:31.911" level="INFO">conduit</msg>
<status status="PASS" starttime="20210821 22:18:31.911" endtime="20210821 22:18:31.911"/>
</kw>
<status status="PASS" starttime="20210821 22:18:31.867" endtime="20210821 22:18:31.911"/>
</kw>
<kw name="When Open Sign In Page" library="home_page_keywords">
<doc>This keyword will click on sign In link in conduit home page</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:31.912" endtime="20210821 22:18:33.017"/>
</kw>
<status status="PASS" starttime="20210821 22:18:31.912" endtime="20210821 22:18:33.018"/>
</kw>
<kw name="Then Validate Login Url" library="login_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${login_url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=login</arg>
<arg>message=Unable to open login page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210821 22:18:33.023" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210821 22:18:33.019" endtime="20210821 22:18:33.023"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${login_url}</arg>
<arg>${login_url}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210821 22:18:33.024" level="INFO">${login_url} = https://qa-task.backbasecloud.com/login</msg>
<status status="PASS" starttime="20210821 22:18:33.023" endtime="20210821 22:18:33.024"/>
</kw>
<status status="PASS" starttime="20210821 22:18:33.018" endtime="20210821 22:18:33.025"/>
</kw>
<kw name="And Enter Sign In Email Id" library="login_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign in</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${sign_in_email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210821 22:18:33.027" level="INFO">Fills the text 'candidatex@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210821 22:18:33.026" endtime="20210821 22:18:34.054"/>
</kw>
<status status="PASS" starttime="20210821 22:18:33.025" endtime="20210821 22:18:34.054"/>
</kw>
<kw name="And Enter Sign In Password" library="login_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign in</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${sign_in_pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:34.055" endtime="20210821 22:18:35.107"/>
</kw>
<status status="PASS" starttime="20210821 22:18:34.055" endtime="20210821 22:18:35.108"/>
</kw>
<kw name="Then Click Sign In Button" library="login_user_keywords">
<doc>This keyword clicks on the sign in button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_in_btn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:35.110" endtime="20210821 22:18:36.166"/>
</kw>
<status status="PASS" starttime="20210821 22:18:35.108" endtime="20210821 22:18:36.166"/>
</kw>
<kw name="And Verify Signed In" library="login_user_keywords">
<doc>This keyword verifies whether sign in is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email or password is invalid.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="PASS" starttime="20210821 22:18:36.167" endtime="20210821 22:18:36.169"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${new_article_txt}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210821 22:18:36.184" level="INFO">Wait for Element with selector: //a[@href='/editor']</msg>
<status status="PASS" starttime="20210821 22:18:36.169" endtime="20210821 22:18:36.184"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${art_txt}</var>
<arg>selector=${new_article_txt}</arg>
<arg>assertion_operator=contains</arg>
<arg>assertion_expected=New Article</arg>
<arg>message=Sign In was unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:36.213" level="INFO">${art_txt} =  New Article</msg>
<status status="PASS" starttime="20210821 22:18:36.184" endtime="20210821 22:18:36.213"/>
</kw>
<status status="PASS" starttime="20210821 22:18:36.166" endtime="20210821 22:18:36.214"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>LOGIN_USER</tag>
<status status="PASS" starttime="20210821 22:18:28.554" endtime="20210821 22:18:36.214"/>
</test>
<status status="PASS" starttime="20210821 22:18:28.512" endtime="20210821 22:18:37.060"/>
</suite>
<suite id="s1-s4" name="Register User Test" source="/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Tests/register_user_test.robot">
<test id="s1-s4-t1" name="Register A User">
<kw name="Given I Open '${site_url}' in '${browser}' Browser" library="common_keywords" sourcename="I Open '${url}' in '${browser}' Browser">
<doc>This keyword opens given url in the browser of the choice.</doc>
<kw name="New Browser" library="Browser">
<arg>browser=${browser}</arg>
<arg>headless=${headless_driver}</arg>
<arg>slowMo=1s</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210821 22:18:37.081" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 1000.0, "tracesDir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/1bd17275-9812-4992-b115-32b1ff7c3790"}</msg>
<msg timestamp="20210821 22:18:37.685" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":1000,"tracesDir":"/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/browser/traces/1bd17275-9812-4992-b115-32b1ff7c3790"}</msg>
<status status="PASS" starttime="20210821 22:18:37.080" endtime="20210821 22:18:37.686"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20210821 22:18:37.689" level="INFO">No context open.</msg>
<status status="PASS" starttime="20210821 22:18:37.686" endtime="20210821 22:18:37.689"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${record_video}</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<arg>ELSE</arg>
<arg>New Context</arg>
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="New Context" library="Browser">
<arg>httpCredentials={'username': '$basic_auth_user', 'password': '$basic_auth_pwd'}</arg>
<arg>recordVideo={"size": {"width": 1280, "height": 720}, "dir": "${OUTPUTDIR}/Videos"}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20210821 22:18:37.693" level="INFO">{"acceptDownloads": false, "ignoreHTTPSErrors": false, "bypassCSP": false, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "httpCredentials": "XXX", "hideRfBrowser": false, "recordVideo": {"size": {"width": 1280, "height": 720}, "dir": "/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos"}}</msg>
<msg timestamp="20210821 22:18:37.732" level="INFO">Successfully created context. </msg>
<msg timestamp="20210821 22:18:37.732" level="INFO">{'acceptDownloads': False, 'ignoreHTTPSErrors': False, 'bypassCSP': False, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'httpCredentials': 'XXX', 'hideRfBrowser': False, 'recordVideo': {'size': {'width': 1280, 'height': 720}, 'dir': '/Users/anujteotia/Desktop/assignment-rf-selenium-pom/assignment-rf-selenium-pom/Videos'}}</msg>
<status status="PASS" starttime="20210821 22:18:37.691" endtime="20210821 22:18:37.732"/>
</kw>
<status status="PASS" starttime="20210821 22:18:37.690" endtime="20210821 22:18:37.732"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210821 22:18:40.660" level="INFO">Successfully initialized new page object and opened url: https://qa-task.backbasecloud.com</msg>
<msg timestamp="20210821 22:18:40.661" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;video width="1280" height="720" controls&gt;&lt;source src="Videos/27d8f4b4b3f93ffc1dde238aac81249a.webm" type="video/webm"&gt;&lt;/video&gt;</msg>
<status status="PASS" starttime="20210821 22:18:37.732" endtime="20210821 22:18:40.662"/>
</kw>
<status status="PASS" starttime="20210821 22:18:37.080" endtime="20210821 22:18:40.662"/>
</kw>
<kw name="When Validate Title In Home Page" library="home_page_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>selector=${conduit_txt}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=conduit</arg>
<arg>message=Unable to open Conduit homepage.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20210821 22:18:40.709" level="INFO">${title} = conduit</msg>
<status status="PASS" starttime="20210821 22:18:40.664" endtime="20210821 22:18:40.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${title}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210821 22:18:40.711" level="INFO">conduit</msg>
<status status="PASS" starttime="20210821 22:18:40.709" endtime="20210821 22:18:40.711"/>
</kw>
<status status="PASS" starttime="20210821 22:18:40.663" endtime="20210821 22:18:40.711"/>
</kw>
<kw name="And Open Sign Up Page" library="home_page_keywords">
<doc>This keyword will click on sign up link in conduit home page</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_up_link}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:40.712" endtime="20210821 22:18:41.812"/>
</kw>
<status status="PASS" starttime="20210821 22:18:40.712" endtime="20210821 22:18:41.812"/>
</kw>
<kw name="Then Validate Register Url" library="register_user_keywords">
<doc>This keyword validates tile of the home page</doc>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<arg>assertion_operator=should end with</arg>
<arg>assertion_expected=register</arg>
<arg>message=Unable to open register page.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20210821 22:18:41.819" level="INFO">${url} = https://qa-task.backbasecloud.com/register</msg>
<status status="PASS" starttime="20210821 22:18:41.814" endtime="20210821 22:18:41.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${url}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210821 22:18:41.820" level="INFO">https://qa-task.backbasecloud.com/register</msg>
<status status="PASS" starttime="20210821 22:18:41.819" endtime="20210821 22:18:41.820"/>
</kw>
<status status="PASS" starttime="20210821 22:18:41.813" endtime="20210821 22:18:41.820"/>
</kw>
<kw name="And Enter User Name" library="register_user_keywords">
<arg>${username}</arg>
<doc>This keyword enter user name for sign up</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${username_txt_box}</arg>
<arg>txt=${username}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210821 22:18:41.823" level="INFO">Fills the text 'newuser1' in the given field.</msg>
<status status="PASS" starttime="20210821 22:18:41.822" endtime="20210821 22:18:42.855"/>
</kw>
<status status="PASS" starttime="20210821 22:18:41.821" endtime="20210821 22:18:42.856"/>
</kw>
<kw name="And Enter Email Id" library="register_user_keywords">
<arg>${email_id}</arg>
<doc>This keyword enter email id for sign up</doc>
<kw name="Fill Text" library="Browser">
<arg>selector=${email_txt_box}</arg>
<arg>txt=${email_id}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20210821 22:18:42.859" level="INFO">Fills the text 'newuser1@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210821 22:18:42.857" endtime="20210821 22:18:43.924"/>
</kw>
<status status="PASS" starttime="20210821 22:18:42.856" endtime="20210821 22:18:43.924"/>
</kw>
<kw name="And Enter Password" library="register_user_keywords">
<arg>${password}</arg>
<doc>This keyword enter password for sign up</doc>
<kw name="Fill Secret" library="Browser">
<arg>selector=${pwd_txt_box}</arg>
<arg>secret=$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Fills the given secret from ``variable_name`` into the
text field found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:43.926" endtime="20210821 22:18:45.018"/>
</kw>
<status status="PASS" starttime="20210821 22:18:43.925" endtime="20210821 22:18:45.018"/>
</kw>
<kw name="Then Click Sign Up Button" library="register_user_keywords">
<doc>This keyword clicks on the sign up button</doc>
<kw name="Click" library="Browser">
<arg>selector=${sign_up_button}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210821 22:18:45.020" endtime="20210821 22:18:46.106"/>
</kw>
<status status="PASS" starttime="20210821 22:18:45.019" endtime="20210821 22:18:46.107"/>
</kw>
<kw name="And Verify Sign Up" library="register_user_keywords">
<arg>${username}</arg>
<doc>This keyword verifies whether sign up is successfull or not</doc>
<kw name="Get Url" library="Browser">
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${site_url}/</arg>
<arg>message=An Error Occurred!. Email/Username already exists</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<kw name="Take ScreenShot On Failure" library="common_keywords">
<doc>This Keyword will take the screenshot when the test fails</doc>
<kw name="Get Current Date" library="DateTime">
<var>${time_stamp}</var>
<arg>exclude_millis=True</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210821 22:18:47.124" level="INFO">${time_stamp} = 2021-08-21 22:18:47</msg>
<status status="PASS" starttime="20210821 22:18:47.118" endtime="20210821 22:18:47.124"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${test_name}</var>
<arg>${TEST NAME}</arg>
<arg>\\s</arg>
<arg>-</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20210821 22:18:47.125" level="INFO">${test_name} = Register-A-User</msg>
<status status="PASS" starttime="20210821 22:18:47.124" endtime="20210821 22:18:47.126"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<arg>filename=${OUTPUTDIR}/Screenshots/${test_name}-${time_stamp}.png</arg>
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20210821 22:18:47.332" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots/Register-A-User-2021-08-21%2022%3A18%3A47.png"&gt;&lt;img src="Screenshots/Register-A-User-2021-08-21%2022%3A18%3A47.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210821 22:18:47.126" endtime="20210821 22:18:47.332"/>
</kw>
<status status="PASS" starttime="20210821 22:18:47.117" endtime="20210821 22:18:47.332"/>
</kw>
<msg timestamp="20210821 22:18:47.351" level="FAIL">An Error Occurred!. Email/Username already exists</msg>
<status status="FAIL" starttime="20210821 22:18:46.109" endtime="20210821 22:18:47.351"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${user_xpath}</var>
<arg>SEPARATOR=</arg>
<arg>${signed_up_username}</arg>
<arg>${username}']</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20210821 22:18:47.352" endtime="20210821 22:18:47.352"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>selector=${user_xpath}</arg>
<arg>state=visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<status status="NOT RUN" starttime="20210821 22:18:47.352" endtime="20210821 22:18:47.352"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${output}</var>
<arg>selector=${user_xpath}</arg>
<arg>assertion_operator=should be</arg>
<arg>assertion_expected=${username}</arg>
<arg>message=Sign up unsuccessful</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20210821 22:18:47.353" endtime="20210821 22:18:47.353"/>
</kw>
<status status="FAIL" starttime="20210821 22:18:46.107" endtime="20210821 22:18:47.353"/>
</kw>
<doc>This test case login using basic authentication and validates Home Page</doc>
<tag>FEATURE-ARTICLES</tag>
<tag>REGISTER_USER</tag>
<status status="FAIL" starttime="20210821 22:18:37.077" endtime="20210821 22:18:47.354">An Error Occurred!. Email/Username already exists</status>
</test>
<status status="FAIL" starttime="20210821 22:18:37.063" endtime="20210821 22:18:48.059"/>
</suite>
<status status="FAIL" starttime="20210821 22:17:34.226" endtime="20210821 22:18:48.062"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="3" fail="0" skip="0">ARTICLES</stat>
<stat pass="5" fail="1" skip="0">FEATURE-ARTICLES</stat>
<stat pass="1" fail="0" skip="0">HOME_PAGE</stat>
<stat pass="1" fail="0" skip="0">LOGIN_USER</stat>
<stat pass="0" fail="1" skip="0">REGISTER_USER</stat>
</tag>
<suite>
<stat pass="5" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Article Test">Tests.Article Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Home Page Test">Tests.Home Page Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Login User Test">Tests.Login User Test</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="Register User Test">Tests.Register User Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
